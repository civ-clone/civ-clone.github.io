{
  "version": 3,
  "sources": ["../node_modules/@dom111/element/dist/Element.js", "../node_modules/@dom111/typed-event-emitter/EventEmitter.js", "../src/js/UI/Renderer.ts", "../src/js/UI/lib/reconstituteData.ts", "../src/js/UI/components/Actions.ts", "../src/js/UI/components/Actions/Action.ts", "../src/js/UI/components/LockedSlider.ts", "../src/js/UI/components/LockedSliderGroup.ts", "../src/js/UI/components/TransientElement.ts", "../src/js/UI/components/Window.ts", "../src/js/UI/lib/html.ts", "../node_modules/idb/build/wrap-idb-value.js", "../node_modules/idb/build/index.js", "../src/js/UI/Store.ts", "../src/js/UI/lib/scaleImage.ts", "../src/js/UI/AssetStore.ts", "../src/js/UI/components/Actions/AdjustTradeRates.ts", "../src/js/UI/components/NotificationWindow.ts", "../src/js/UI/components/ActionWindow.ts", "../src/js/UI/components/SelectionWindow.ts", "../src/js/UI/lib/mappedKey.ts", "../src/js/UI/components/Actions/ChooseResearch.ts", "../src/js/UI/lib/instanceOf.ts", "../src/js/UI/lib/yieldMap.ts", "../src/js/UI/components/CityBuildSelectionWindow.ts", "../src/js/UI/components/Actions/CityBuild.ts", "../src/js/UI/components/lib/cityYields.ts", "../src/js/UI/lib/getPreloadedImage.ts", "../src/js/UI/lib/replaceColours.ts", "../src/js/UI/components/Map.ts", "../src/js/UI/components/Map/Cities.ts", "../src/js/UI/components/ConfirmationWindow.ts", "../src/js/UI/DataObserver.ts", "../src/js/UI/components/Map/TerrainAbstract.ts", "../src/js/UI/components/Map/Feature.ts", "../src/js/UI/components/Map/Fog.ts", "../src/js/UI/components/Map/Improvements.ts", "../src/js/UI/components/Map/Irrigation.ts", "../src/js/UI/components/Map/Land.ts", "../src/js/UI/components/Portal.ts", "../src/js/UI/components/SupportedUnit.ts", "../src/js/UI/components/Unit.ts", "../src/js/UI/lib/renderUnit.ts", "../src/js/UI/components/Map/Terrain.ts", "../src/js/UI/components/UnitSelectionWindow.ts", "../src/js/UI/components/World.ts", "../src/js/UI/components/Map/Yields.ts", "../src/js/UI/LocaleProvider.ts", "../src/js/UI/components/City.ts", "../src/js/UI/components/Map/Unworkable.ts", "../src/js/UI/components/Map/Units.ts", "../src/js/UI/components/lib/showCityAction.ts", "../src/js/UI/components/lib/showCityOnMap.ts", "../src/js/UI/components/Actions/CivilDisorder.ts", "../src/js/UI/components/Actions/EndTurn.ts", "../src/js/UI/components/Actions/Revolution.ts", "../src/js/UI/components/lib/civilizationAttribute.ts", "../src/js/UI/components/Actions/Spaceship.ts", "../src/js/UI/components/Map/ActiveUnit.ts", "../src/js/UI/components/Map/CityNames.ts", "../src/js/UI/components/CityStatus.ts", "../src/js/UI/components/GameDetails.ts", "../src/js/UI/components/GameMenu.ts", "../src/js/UI/components/HappinessReport.ts", "../src/js/UI/components/PopupMenu.ts", "../src/js/UI/components/lib/playerYields.ts", "../src/js/UI/components/ScienceReport.ts", "../src/js/UI/components/TradeReport.ts", "../node_modules/@civ-clone/core-registry/EntityRegistry.ts", "../src/js/UI/GameOption.ts", "../src/js/UI/GameOptionsRegistry.ts", "../src/js/UI/components/GameOptions.ts", "../src/js/UI/components/GamePortal.ts", "../src/js/UI/components/UnitActionMenu.ts", "../src/js/UI/components/Map/GoodyHuts.ts", "../src/js/UI/lib/IntervalHandler.ts", "../src/js/UI/components/MainMenu.ts", "../src/js/Engine/Request.ts", "../src/js/Engine/Requests/Options.ts", "../src/js/UI/components/CustomiseWorldWindow.ts", "../src/js/UI/components/MandatorySelection.ts", "../src/js/UI/components/NewGameWindow.ts", "../src/js/UI/components/EarthWindow.ts", "../node_modules/@civ-clone/civ1-asset-extractor/BinFile.ts", "../node_modules/@civ-clone/civ1-asset-extractor/LZWDictionary.ts", "../node_modules/@civ-clone/civ1-asset-extractor/LZW.ts", "../node_modules/@civ-clone/civ1-asset-extractor/lib/lowerNibble.ts", "../node_modules/@civ-clone/civ1-asset-extractor/lib/upperNibble.ts", "../node_modules/@civ-clone/civ1-asset-extractor/PicImage.ts", "../node_modules/@civ-clone/civ1-asset-extractor/extractSprites.ts", "../src/js/UI/components/ImportAssetsWindow.ts", "../src/js/UI/components/ReleaseWindow.ts", "../node_modules/marked/lib/marked.esm.js", "../src/js/UI/components/Minimap.ts", "../src/js/UI/components/Notifications.ts", "../src/js/UI/components/PlayerDetails.ts", "../src/js/UI/components/UnitDetails.ts", "../src/js/Engine/AbstractTransport.ts", "../node_modules/@civ-clone/core-data-object/AdditionalData.ts", "../node_modules/@civ-clone/core-data-object/AdditionalDataRegistry.ts", "../node_modules/@civ-clone/core-data-object/lib/generateInheritance.ts", "../node_modules/@civ-clone/core-data-object/DataObject.ts", "../src/js/Engine/WorkerTransport.ts", "../src/js/frontend.ts"],
  "sourcesContent": ["\"use strict\";var e,t=this&&this.__classPrivateFieldSet||function(e,t,s,o,r){if(\"m\"===o)throw new TypeError(\"Private method is not writable\");if(\"a\"===o&&!r)throw new TypeError(\"Private accessor was defined without a setter\");if(\"function\"==typeof t?e!==t||!r:!t.has(e))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return\"a\"===o?r.call(e,s):r?r.value=s:t.set(e,s),s},s=this&&this.__classPrivateFieldGet||function(e,t,s,o){if(\"a\"===s&&!o)throw new TypeError(\"Private accessor was defined without a getter\");if(\"function\"==typeof t?e!==t||!o:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return\"m\"===s?o:\"a\"===s?o.call(e):o?o.value:t.get(e)};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Element=exports.toggleClass=exports.t=exports.s=exports.removeClass=exports.once=exports.onEach=exports.on=exports.off=exports.hasClass=exports.empty=exports.emitCustom=exports.emit=exports.addClass=void 0;exports.addClass=(e,...t)=>e.classList.add(...t);exports.emit=(e,t)=>e.dispatchEvent(t);exports.emitCustom=(e,t,...s)=>(0,exports.emit)(e,new CustomEvent(t,{detail:s}));exports.empty=e=>{for(var t;e.hasChildNodes();)null===(t=e.firstChild)||void 0===t||t.remove()};exports.hasClass=(e,t)=>e.classList.contains(t);exports.off=(e,t,s,o={})=>e.removeEventListener(t,s,o);exports.on=(e,t,s,o={})=>e.addEventListener(t,s,o);exports.onEach=(e,t,s,o={})=>t.forEach((t=>(0,exports.on)(e,t,s,o)));exports.once=(e,t,s,o={})=>(0,exports.on)(e,t,s,Object.assign(Object.assign({},\"boolean\"==typeof o?{capture:o}:o),{once:!0}));exports.removeClass=(e,...t)=>e.classList.remove(...t);exports.s=(e,...t)=>{const s=document.createElement(\"div\");s.innerHTML=e;const r=s.firstElementChild;return t.forEach((e=>{e instanceof o?r.append(e.element()):e instanceof Node?r.append(e):r.append((0,exports.t)(e))})),r};exports.t=e=>document.createTextNode(e);exports.toggleClass=(e,...t)=>t.forEach((t=>e.classList.toggle(t)));class o{constructor(s){e.set(this,void 0),t(this,e,s,\"f\")}static fromString(e){return new o((0,exports.s)(e))}addClass(...e){(0,exports.addClass)(this.element(),...e)}append(...e){e.forEach((e=>{e instanceof o&&(e=e.element()),this.element().append(e)}))}element(){return s(this,e,\"f\")}emit(e){return(0,exports.emit)(this.element(),e)}emitCustom(e,...t){return(0,exports.emitCustom)(this.element(),e,...t)}empty(){(0,exports.empty)(this.element())}hasClass(e){return(0,exports.hasClass)(this.element(),e)}off(e,t,s={}){(0,exports.off)(this.element(),e,t,s)}on(e,t,s={}){(0,exports.on)(this.element(),e,t,s)}onEach(e,t,s={}){(0,exports.onEach)(this.element(),e,t,s)}once(e,t,s={}){(0,exports.once)(this.element(),e,t,s)}query(e){return this.element().querySelector(e)}queryAll(e){return this.element().querySelectorAll(e)}remove(){this.element().remove()}removeClass(...e){(0,exports.removeClass)(this.element(),...e)}toggleClass(...e){(0,exports.toggleClass)(this.element(),...e)}}exports.Element=o,e=new WeakMap,exports.default=o;", "\"use strict\";var t,e=this&&this.__classPrivateFieldGet||function(t,e,i,s){if(\"a\"===i&&!s)throw new TypeError(\"Private accessor was defined without a getter\");if(\"function\"==typeof e?t!==e||!s:!e.has(t))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return\"m\"===i?s:\"a\"===i?s.call(t):s?s.value:e.get(t)};Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.EventEmitter=void 0;class i{constructor(){t.set(this,{})}on(i,s){i in e(this,t,\"f\")||(e(this,t,\"f\")[i]=[]),e(this,t,\"f\")[i].push(s)}once(t,e){const i=(...s)=>{e(...s),this.off(t,i)};this.on(t,i)}off(i,s){if(!(i in e(this,t,\"f\")))return;const r=e(this,t,\"f\")[i].indexOf(s);-1!==r&&e(this,t,\"f\")[i].splice(r,1)}emit(i,...s){i in e(this,t,\"f\")&&e(this,t,\"f\")[i].forEach((t=>t(...s)))}}exports.EventEmitter=i,t=new WeakMap,exports.default=i;", "import {\n  DataPatch,\n  DataPatchContents,\n  Dialogue,\n  EntityInstance,\n  GameData,\n  Negotiation,\n  NeighbourDirection,\n  PlainObject,\n  PlayerAction,\n  Tile,\n  Unit,\n} from './types';\nimport { on, s } from '@dom111/element';\nimport { reconstituteData, ObjectMap } from './lib/reconstituteData';\nimport Actions from './components/Actions';\nimport ActiveUnit from './components/Map/ActiveUnit';\nimport Cities from './components/Map/Cities';\nimport CityNames from './components/Map/CityNames';\nimport CityStatus from './components/CityStatus';\nimport ConfirmationWindow from './components/ConfirmationWindow';\nimport Feature from './components/Map/Feature';\nimport Fog from './components/Map/Fog';\nimport GameDetails from './components/GameDetails';\nimport GameMenu from './components/GameMenu';\nimport GamePortal from './components/GamePortal';\nimport GoodyHuts from './components/Map/GoodyHuts';\nimport HappinessReport from './components/HappinessReport';\nimport Improvements from './components/Map/Improvements';\nimport IntervalHandler from './lib/IntervalHandler';\nimport Irrigation from './components/Map/Irrigation';\nimport Land from './components/Map/Land';\nimport MainMenu from './components/MainMenu';\nimport Minimap from './components/Minimap';\nimport NotificationWindow from './components/NotificationWindow';\nimport Notifications from './components/Notifications';\nimport PlayerDetails from './components/PlayerDetails';\nimport ScienceReport from './components/ScienceReport';\nimport SelectionWindow from './components/SelectionWindow';\nimport Terrain from './components/Map/Terrain';\nimport TradeReport from './components/TradeReport';\nimport Transport from './Transport';\nimport UnitDetails from './components/UnitDetails';\nimport Units from './components/Map/Units';\nimport World from './components/World';\nimport Yields from './components/Map/Yields';\nimport { assetStore } from './AssetStore';\nimport civilizationAttribute from './components/lib/civilizationAttribute';\nimport { h } from './lib/html';\nimport { instance as localeProviderInstance } from './LocaleProvider';\nimport { instance as options } from './GameOptionsRegistry';\nimport { mappedKeyFromEvent } from './lib/mappedKey';\n\n// TODO: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//  ! Break this down and use a front-end framework? !\n//  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nexport class Renderer {\n  #transport: Transport;\n\n  constructor(transport: Transport) {\n    this.#transport = transport;\n  }\n\n  init() {\n    const transport = this.#transport;\n\n    assetStore.hasAllAssets().then((hasAllAssets) => {\n      if (!hasAllAssets) {\n        return;\n      }\n\n      assetStore\n        .getScaled('./assets/cursor/torch.png', 2)\n        .then(\n          (scaledCursor) =>\n            (document.body.style.cursor = `url('${scaledCursor.toDataURL(\n              'image/png'\n            )}'), default`)\n        );\n    });\n\n    on(document, 'keypress', (event) => {\n      if (\n        event.key === 'F5' ||\n        (['R', 'r'].includes(event.key) && event.ctrlKey)\n      ) {\n        event.preventDefault();\n\n        new ConfirmationWindow('Quit', 'Are you sure you want to reload?', () =>\n          window.location.reload()\n        );\n\n        return;\n      }\n    });\n\n    options.set('autoEndOfTurn', true);\n\n    try {\n      const notificationArea = document.getElementById(\n          'notification'\n        ) as HTMLElement,\n        mainMenuElement = document.querySelector('#mainmenu') as HTMLElement,\n        actionArea = document.getElementById('actions') as HTMLElement,\n        secondaryActionArea = document.getElementById(\n          'other-actions'\n        ) as HTMLElement,\n        gameMenu = document.getElementById('game-menu') as HTMLElement,\n        gameArea = document.getElementById('game') as HTMLElement,\n        mapWrapper = document.getElementById('map') as HTMLElement,\n        mapPortal = mapWrapper.querySelector('canvas') as HTMLCanvasElement,\n        gameInfo = document.getElementById('gameDetails') as HTMLElement,\n        playerInfo = document.getElementById('playerDetails') as HTMLElement,\n        minimapCanvas = document.getElementById('minimap') as HTMLCanvasElement,\n        unitInfo = document.getElementById('unitInfo') as HTMLCanvasElement,\n        preloadContainer = document.getElementById('preload') as HTMLDivElement,\n        notifications = new Notifications(),\n        mainMenu = new MainMenu(mainMenuElement, this.#transport),\n        setActiveUnit = (\n          unit: Unit | null,\n          portal: GamePortal,\n          unitsMap: Units,\n          activeUnitsMap: ActiveUnit\n        ) => {\n          const unitDetails = new UnitDetails(unitInfo, unit);\n\n          activeUnit = unit;\n\n          unitDetails.build();\n\n          portal.setActiveUnit(unit);\n          unitsMap.setActiveUnit(unit);\n          unitsMap.render();\n          unitsMap.setVisible(true);\n          activeUnitsMap.setActiveUnit(unit);\n          activeUnitsMap.render();\n          activeUnitsMap.setVisible(true);\n\n          if (unit === null) {\n            portal.render();\n\n            return;\n          }\n\n          lastUnit = unit;\n\n          unitsMap.update([\n            ...(lastUnit?.tile ? [lastUnit.tile] : []),\n            unit.tile,\n          ]);\n\n          if (!portal.isVisible(unit.tile.x, unit.tile.y)) {\n            portal.setCenter(unit.tile.x, unit.tile.y);\n          }\n\n          portal.render();\n        };\n\n      // preloaded the images as they could be remote\n      assetStore.getAll().then((records) =>\n        records.forEach((record) =>\n          preloadContainer.append(\n            h(\n              s<HTMLImageElement>(\n                `<img src=\"${record.uri}\" data-path=\"${record.name}\">`\n              ),\n              {\n                error: () =>\n                  console.error(\n                    `There was a problem preloading '${record.name}', you may have some missing details.`\n                  ),\n              }\n            )\n          )\n        )\n      );\n\n      const tilesToRender: Tile[] = [];\n\n      let globalNotificationTimer: number | undefined,\n        lastUnit: Unit | null = null,\n        activeUnit: Unit | null = null;\n\n      transport.receive('notification', (data: string): void => {\n        notificationArea.innerHTML = data;\n\n        if (globalNotificationTimer) {\n          window.clearTimeout(globalNotificationTimer);\n        }\n\n        globalNotificationTimer = window.setTimeout((): void => {\n          globalNotificationTimer = undefined;\n\n          notificationArea.innerText = '';\n        }, 4000);\n      });\n\n      const negotiationLabel = (negotiation: Negotiation) => {\n        const currentInteraction = negotiation.lastInteraction;\n\n        if (currentInteraction === null) {\n          return 'negotiation.missing-label';\n        }\n\n        if (currentInteraction._ === 'Initiate') {\n          return `${\n            currentInteraction.players[0].civilization.leader._\n          } of ${civilizationAttribute(\n            currentInteraction.players[0].civilization,\n            'nation'\n          )} would like to grant you an audience, will you meet with them?`;\n        }\n\n        if (currentInteraction._ === 'Dialogue') {\n          return currentInteraction.key;\n        }\n\n        return currentInteraction._;\n      };\n\n      transport.receive('chooseFromList', ({ choices, key, data }) => {\n        // TODO: i18m for these\n        const body =\n          key === 'choose-civilization'\n            ? 'Choose your civilization'\n            : key === 'choose-leader'\n            ? 'Choose your leader'\n            : key === 'negotiation.next-step'\n            ? negotiationLabel(data as Negotiation)\n            : 'Choose an option';\n\n        const title = key === 'negotiation.next-step' ? 'Negotiation' : body;\n\n        new SelectionWindow(\n          title,\n          choices.map(({ id, value }) => {\n            // TODO: i18n\n            const label = [\n              'choose-civilization',\n              'choose-leader',\n              'negotiation.next-step',\n            ].includes(key)\n              ? value._\n              : value.toString();\n\n            return {\n              label,\n              value: id,\n            };\n          }),\n          (choice) => transport.send('chooseFromList', choice),\n          body,\n          {\n            displayAll: true,\n          }\n        );\n      });\n\n      transport.receiveOnce(\n        'gameData',\n        (\n          data: GameData,\n          objectMap: ObjectMap = { objects: {}, hierarchy: {} }\n        ) => {\n          try {\n            new NotificationWindow(\n              'Welcome',\n              s(\n                `<div class=\"welcome\">\n<p>${\n                  data.player.civilization.leader!.name\n                }, you have risen to become leader of the ${civilizationAttribute(\n                  data.player.civilization,\n                  'people'\n                )}.</p>\n<p>Your people have knowledge of ${localeProviderInstance.list([\n                  'Irrigation',\n                  'Mining',\n                  'Roads',\n                  ...data.player.research.complete.map((advance) => advance._),\n                ])}.</p>\n</div>`\n              )\n            );\n\n            gameArea.classList.add('active');\n\n            mapPortal.width = (\n              mapPortal.parentElement as HTMLElement\n            ).offsetWidth;\n            mapPortal.height = (\n              mapPortal.parentElement as HTMLElement\n            ).offsetHeight;\n\n            let activeUnits: PlayerAction[] = [];\n\n            const scale = 2,\n              world = new World(data.player.world),\n              intervalHandler = new IntervalHandler(),\n              portal = new GamePortal(\n                world,\n                transport,\n                mapPortal,\n                {\n                  playerId: data.player.id,\n                  // TODO: this needs to be a user-controllable item\n                  scale,\n                  // TODO: this needs to come from the theme\n                  tileSize: 16,\n                },\n                Land,\n                Irrigation,\n                Terrain,\n                Improvements,\n                Feature,\n                GoodyHuts,\n                Fog,\n                Yields,\n                Units,\n                Cities,\n                CityNames,\n                ActiveUnit\n              ),\n              landMap = portal.getLayer(Land) as Land,\n              yieldsMap = portal.getLayer(Yields) as Yields,\n              unitsMap = portal.getLayer(Units) as Units,\n              citiesMap = portal.getLayer(Cities) as Cities,\n              cityNamesMap = portal.getLayer(CityNames) as CityNames,\n              activeUnitsMap = portal.getLayer(ActiveUnit) as ActiveUnit,\n              minimap = new Minimap(\n                minimapCanvas,\n                world,\n                portal,\n                landMap,\n                citiesMap,\n                activeUnitsMap\n              ),\n              primaryActions = new Actions(actionArea, portal, this.#transport),\n              secondaryActions = new Actions(\n                secondaryActionArea,\n                portal,\n                this.#transport\n              ),\n              gameMenuItem = new GameMenu(\n                gameMenu,\n                data.player,\n                portal,\n                transport\n              );\n\n            gameMenuItem.build();\n\n            yieldsMap.setVisible(false);\n\n            portal.on('focus-changed', () => minimap.update());\n            portal.on('activate-unit', (unit) =>\n              setActiveUnit(unit, portal, unitsMap, activeUnitsMap)\n            );\n\n            intervalHandler.on(() => {\n              activeUnitsMap.setVisible(!activeUnitsMap.isVisible());\n\n              portal.build(tilesToRender.splice(0));\n              portal.render();\n            });\n\n            on(window, 'resize', () => {\n              mapPortal.width = (\n                mapPortal.parentElement as HTMLElement\n              ).offsetWidth;\n              mapPortal.height = (\n                mapPortal.parentElement as HTMLElement\n              ).offsetHeight;\n            });\n\n            // This needs wrapping.\n            // let lastTurn = 1,\n            //   clearNextTurn = false;\n\n            const handler = (objectMap: ObjectMap): void => {\n              // TODO: this causes a massive slowdown when its processed. Maybe we just leak for now...\n              // let orphanIds: string[] | null = clearNextTurn ? [] : null;\n              // let orphanIds: string[] | null = null;\n\n              // TODO: look into if it's possible to have data reconstituted in a worker thread\n              data = reconstituteData(\n                objectMap\n                // orphanIds\n              ) as GameData;\n\n              // A bit crude, I'd like to run this as as background job too\n              // if (orphanIds) {\n              //   // clean up orphan data - late game there can be tens of thousands of these to clean up\n              //   ((orphanIds) => {\n              //     const maxCount = 1000,\n              //       delay = 200;\n              //\n              //     for (\n              //       let i = 0, max = Math.ceil(orphanIds.length / maxCount);\n              //       i < max;\n              //       i++\n              //     ) {\n              //       setTimeout(\n              //         () =>\n              //           orphanIds\n              //             .slice(i * maxCount, (i + 1) * maxCount - 1)\n              //             .forEach((id) => delete objectMap.objects[id]),\n              //         (i + 1) * delay\n              //       );\n              //     }\n              //   })(orphanIds);\n              //\n              //   clearNextTurn = false;\n              // }\n\n              document.dispatchEvent(\n                new CustomEvent('dataupdated', {\n                  detail: {\n                    data,\n                  },\n                })\n              );\n\n              // if (lastTurn !== data.turn.value) {\n              //   clearNextTurn = true;\n              //   lastTurn = data.turn.value;\n              // }\n\n              const primaryActionList = [\n                  'ChooseResearch',\n                  'CityBuild',\n                  'CivilDisorder',\n                  'EndTurn',\n                ],\n                ignoredActionList = [\n                  'ActiveUnit',\n                  'ChangeProduction',\n                  'CompleteProduction',\n                  'InactiveUnit',\n                ],\n                primaryActionPriority: {\n                  [key: string]: number;\n                } = {\n                  EndTurn: 100,\n                  ChooseResearch: 80,\n                  CityBuild: 60,\n                  CivilDisorder: 10,\n                };\n\n              primaryActions.build(\n                data.player.actions\n                  .filter((action) => primaryActionList.includes(action._))\n                  .sort(\n                    (a, b) =>\n                      (primaryActionPriority[b._] ?? 0) -\n                      (primaryActionPriority[a._] ?? 0)\n                  )\n              );\n\n              secondaryActions.build(\n                data.player.actions.filter(\n                  (action) =>\n                    ![...primaryActionList, ...ignoredActionList].includes(\n                      action._\n                    )\n                )\n              );\n\n              gameArea.append(primaryActions.element());\n\n              world.setTiles(data.player.world.tiles);\n\n              const gameDetails = new GameDetails(\n                gameInfo,\n                data.turn,\n                data.year\n              );\n\n              gameDetails.build();\n\n              const playerDetails = new PlayerDetails(playerInfo, data.player);\n\n              playerDetails.build();\n\n              activeUnits = data.player.actions.filter(\n                (action: PlayerAction): boolean => action._ === 'ActiveUnit'\n              );\n\n              // This prioritises units that are already on screen\n              const [activeUnitAction] = activeUnits.sort(\n                ({ value: unitA }, { value: unitB }): number =>\n                  unitB === lastUnit\n                    ? 1\n                    : unitA === lastUnit\n                    ? -1\n                    : (portal.isVisible(\n                        (unitB as Unit).tile.x,\n                        (unitB as Unit).tile.y\n                      )\n                        ? 1\n                        : 0) -\n                      (portal.isVisible(\n                        (unitA as Unit).tile.x,\n                        (unitA as Unit).tile.y\n                      )\n                        ? 1\n                        : 0)\n              );\n\n              if (lastUnit !== activeUnitAction?.value) {\n                lastUnit = null;\n              }\n\n              setActiveUnit(\n                lastUnit?.active\n                  ? lastUnit\n                  : activeUnitAction\n                  ? (activeUnitAction.value as Unit)\n                  : null,\n                portal,\n                unitsMap,\n                activeUnitsMap\n              );\n\n              // ensure UI looks responsive\n              portal.build(tilesToRender.splice(0));\n              portal.render();\n\n              minimap.update();\n\n              if (\n                options.get('autoEndOfTurn') &&\n                data.player.mandatoryActions.length === 1 &&\n                data.player.mandatoryActions.every(\n                  (action) => action._ === 'EndTurn'\n                )\n              ) {\n                transport.send('action', {\n                  name: 'EndTurn',\n                });\n\n                return;\n              }\n            };\n\n            handler(objectMap);\n\n            transport.receive('gameData', (data, rawData) =>\n              handler(rawData as ObjectMap)\n            );\n\n            const pathToParts = (path: string) =>\n                path.replace(/]/g, '').split(/[.[]/),\n              getPenultimateObject = (\n                object: PlainObject,\n                path: string\n              ): [PlainObject, string | undefined] => {\n                const parts = pathToParts(path),\n                  lastPart = parts.pop();\n\n                const tmpObj = parts.reduce((tmpObj, part) => {\n                  if (!tmpObj || !(part in tmpObj)) {\n                    return null;\n                  }\n\n                  return tmpObj[part];\n                }, object);\n\n                return [tmpObj, lastPart];\n              },\n              setObjectPath = (\n                object: PlainObject,\n                path: string,\n                value: any\n              ): void => {\n                const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n                if (!tmpObj || !lastPart) {\n                  console.warn(\n                    `unable to set ${path} of ${object} (${lastPart})`\n                  );\n                  return;\n                }\n\n                tmpObj[lastPart] = value;\n              },\n              removeObjectPath = (object: PlainObject, path: string): void => {\n                const [tmpObj, lastPart] = getPenultimateObject(object, path);\n\n                if (!tmpObj || !lastPart) {\n                  console.warn(\n                    `unable to set ${path} of ${object} (${lastPart})`\n                  );\n                  return;\n                }\n\n                delete tmpObj[lastPart];\n              };\n\n            transport.receive('gameDataPatch', (data: DataPatch[]) => {\n              data.forEach((patch) =>\n                Object.entries(patch).forEach(\n                  ([key, { type, index, value }]: [\n                    string,\n                    DataPatchContents\n                  ]) => {\n                    if (type === 'add' || type === 'update') {\n                      if (!value!.hierarchy) {\n                        console.error('No hierarchy');\n                        console.error(value);\n\n                        return;\n                      }\n\n                      if (index) {\n                        setObjectPath(\n                          objectMap.objects[key],\n                          index,\n                          value!.hierarchy\n                        );\n                      } else {\n                        objectMap.objects[key] = value!.hierarchy;\n                      }\n\n                      document.dispatchEvent(\n                        new CustomEvent('patchdatareceived', {\n                          detail: {\n                            value,\n                          },\n                        })\n                      );\n\n                      Object.entries(value!.objects as PlainObject).forEach(\n                        ([key, value]) => {\n                          objectMap.objects[key] = value;\n\n                          if (value._ === 'PlayerTile') {\n                            // Since we only use tilesToRender for x and y this should be fine...\n                            tilesToRender.push(value);\n                          }\n                        }\n                      );\n                    }\n\n                    if (type === 'remove') {\n                      if (index) {\n                        removeObjectPath(objectMap.objects[key], index);\n\n                        return;\n                      }\n\n                      delete objectMap.objects[key];\n                    }\n                  }\n                )\n              );\n\n              handler(objectMap);\n            });\n\n            transport.receive('gameNotification', (data): void =>\n              notifications.receive(data)\n            );\n\n            const keyToActionsMap: {\n                [key: string]: string[];\n              } = {\n                ' ': ['NoOrders'],\n                b: ['FoundCity'],\n                D: ['Disband'],\n                f: ['Fortify', 'BuildFortress'],\n                i: [\n                  'BuildIrrigation',\n                  'ClearForest',\n                  'ClearSwamp',\n                  'ClearJungle',\n                ],\n                m: ['BuildMine', 'PlantForest'],\n                P: ['Pillage'],\n                r: ['BuildRoad', 'BuildRailroad'],\n                s: ['Sleep'],\n                u: ['Unload'],\n                w: ['Wait'],\n              },\n              directionKeyMap: { [key: string]: NeighbourDirection } = {\n                ArrowUp: 'n',\n                PageUp: 'ne',\n                ArrowRight: 'e',\n                PageDown: 'se',\n                ArrowDown: 's',\n                End: 'sw',\n                ArrowLeft: 'w',\n                Home: 'nw',\n              },\n              leaderScreensMap: { [key: string]: () => any } = {\n                F1: () => new CityStatus(data.player, portal, transport),\n                F4: () => new HappinessReport(data.player, portal, transport),\n                F5: () => new TradeReport(data.player, portal, transport),\n                F6: () => new ScienceReport(data.player),\n              };\n\n            let lastKey = '';\n\n            on(document, 'keydown', (event) => {\n              const key = mappedKeyFromEvent(event);\n\n              if (key in leaderScreensMap) {\n                leaderScreensMap[event.key]();\n\n                event.preventDefault();\n              }\n\n              if (activeUnit) {\n                if (key in keyToActionsMap) {\n                  const actions = [...keyToActionsMap[key]];\n\n                  while (actions.length) {\n                    const actionName = actions.shift(),\n                      [unitAction] = activeUnit.actions.filter(\n                        (action): boolean => action._ === actionName\n                      );\n\n                    if (unitAction) {\n                      transport.send('action', {\n                        name: 'ActiveUnit',\n                        id: activeUnit.id,\n                        unitAction: unitAction._,\n                        target: unitAction.to.id,\n                      });\n\n                      event.stopPropagation();\n                      event.preventDefault();\n\n                      return;\n                    }\n                  }\n                }\n\n                if (key in directionKeyMap) {\n                  const [unitAction] =\n                      activeUnit.actionsForNeighbours[directionKeyMap[key]],\n                    perform = () => {\n                      transport.send('action', {\n                        name: 'ActiveUnit',\n                        id: activeUnit!.id,\n                        unitAction: unitAction._,\n                        target: unitAction.to.id,\n                      });\n\n                      event.stopPropagation();\n                      event.preventDefault();\n                    };\n\n                  if (unitAction) {\n                    if (\n                      ['SneakAttack', 'SneakCaptureCity'].includes(unitAction._)\n                    ) {\n                      new ConfirmationWindow(\n                        'Sneak attack!',\n                        `Are you sure you want to perform a ${unitAction._}?`,\n                        () => perform()\n                      );\n\n                      return;\n                    }\n\n                    perform();\n\n                    return;\n                  }\n                }\n              }\n\n              if (key === 'Escape' && document.activeElement !== null) {\n                (document.activeElement as HTMLElement).blur();\n\n                return;\n              }\n\n              if (\n                key === 'Enter' &&\n                data.player.mandatoryActions.some(\n                  (action) => action._ === 'EndTurn'\n                )\n              ) {\n                transport.send('action', {\n                  name: 'EndTurn',\n                });\n\n                event.stopPropagation();\n                event.preventDefault();\n\n                return;\n              }\n\n              if (key === 'Tab') {\n                const topAction = actionArea.querySelector(\n                  'div.action:first-child button'\n                ) as HTMLButtonElement | null;\n\n                if (topAction !== null) {\n                  topAction.focus();\n\n                  event.preventDefault();\n                  event.stopPropagation();\n\n                  return;\n                }\n              }\n\n              if (key === 'c' && activeUnit) {\n                portal.setCenter(activeUnit.tile.x, activeUnit.tile.y);\n\n                portal.render();\n                minimap.update();\n\n                return;\n              }\n\n              if (key === 'w' && activeUnit && activeUnits.length > 1) {\n                const units = activeUnits.map(\n                    (unitAction) => unitAction.value as Unit\n                  ),\n                  current = units.indexOf(activeUnit),\n                  unit = units[current === units.length - 1 ? 0 : current + 1];\n\n                setActiveUnit(unit, portal, unitsMap, activeUnitsMap);\n              }\n\n              if (key === 't') {\n                unitsMap.setVisible(!unitsMap.isVisible());\n                citiesMap.setVisible(!citiesMap.isVisible());\n                cityNamesMap.setVisible(!cityNamesMap.isVisible());\n\n                portal.render();\n\n                return;\n              }\n\n              if (key === 'y') {\n                yieldsMap.setVisible(!yieldsMap.isVisible());\n\n                portal.render();\n\n                return;\n              }\n\n              if (lastKey === '%' && key === '^') {\n                transport.send('cheat', { name: 'RevealMap', value: null });\n\n                return;\n              }\n\n              lastKey = key;\n            });\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nexport default Renderer;\n", "export type PlainObject = {\n  [key: string]: any;\n};\n\nexport type ObjectStore = {\n  [key: string]: PlainObject;\n};\n\nexport type ObjectMap = {\n  hierarchy: PlainObject;\n  objects: ObjectStore;\n};\n\nexport const reconstituteData = (\n  { hierarchy, objects }: ObjectMap,\n  orphanIds: string[] | null = null\n): PlainObject => {\n  const seenObjects: Map<PlainObject, PlainObject> = new Map();\n\n  if (orphanIds) {\n    Object.keys(objects).forEach((id) => orphanIds.push(id));\n  }\n\n  const getReferences = (value: any): PlainObject => {\n    if (seenObjects.has(value)) {\n      return seenObjects.get(value)!;\n    }\n\n    if (Array.isArray(value)) {\n      const updated: any[] = [];\n\n      seenObjects.set(value, updated);\n\n      value.forEach((value) => updated.push(getReferences(value)));\n\n      return updated;\n    }\n\n    if (value && value['#ref']) {\n      if (orphanIds) {\n        orphanIds.splice(orphanIds.indexOf(value['#ref']), 1);\n      }\n\n      if (!(value['#ref'] in objects)) {\n        throw new TypeError(`missing ${value['#ref']}`);\n      }\n\n      const updated = getReferences(objects[value['#ref']]);\n\n      seenObjects.set(value, updated);\n\n      return updated;\n    }\n\n    if (value instanceof Object) {\n      const updated: PlainObject = {};\n\n      seenObjects.set(value, updated);\n\n      Object.entries(value).forEach(([key, childValue]) => {\n        updated[key] = getReferences(childValue);\n      });\n\n      return updated;\n    }\n\n    return value;\n  };\n\n  return getReferences(hierarchy);\n};\n\nexport default reconstituteData;\n", "import { Element, s } from '@dom111/element';\nimport Action from './Actions/Action';\nimport AdjustTradeRates from './Actions/AdjustTradeRates';\nimport ChooseResearch from './Actions/ChooseResearch';\nimport CityBuild from './Actions/CityBuild';\nimport CivilDisorder from './Actions/CivilDisorder';\nimport EndTurn from './Actions/EndTurn';\nimport { PlayerAction } from '../types';\nimport Portal from './Portal';\nimport Revolution from './Actions/Revolution';\nimport Spaceship from './Actions/Spaceship';\nimport Transport from '../Transport';\nimport { h } from '../lib/html';\nimport { mappedKeyFromEvent } from '../lib/mappedKey';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IActions {\n  build(mandatoryActions: PlayerAction[], actions: PlayerAction[]): void;\n}\n\nexport class Actions extends Element implements IActions {\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(\n    container: HTMLElement = s('<div class=\"actions\"></div>'),\n    portal: Portal,\n    transport: Transport\n  ) {\n    super(container);\n\n    this.#portal = portal;\n    this.#transport = transport;\n\n    this.on('actioned', (event) => event.detail.remove());\n\n    this.on(\n      'keydown',\n      (event) => {\n        const currentChild = document.activeElement;\n\n        if (!this.element().contains(currentChild)) {\n          return;\n        }\n\n        const key = mappedKeyFromEvent(event),\n          children = Array.from(this.element().children) as HTMLElement[];\n\n        if (\n          !['ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp'].includes(key) ||\n          children.length === 0\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        let currentAction =\n          currentChild === this.element()\n            ? ['ArrowLeft', 'ArrowUp'].includes(key)\n              ? (currentChild.firstElementChild as HTMLElement)\n              : (currentChild.lastElementChild as HTMLElement)\n            : (currentChild as HTMLElement);\n\n        while (currentAction.parentElement !== this.element()) {\n          currentAction = currentAction.parentElement as HTMLElement;\n        }\n\n        const currentIndex = children.indexOf(currentAction);\n\n        if (['ArrowUp', 'ArrowLeft'].includes(key)) {\n          if (currentIndex > 0) {\n            children[currentIndex - 1].querySelector('button')?.focus();\n\n            return;\n          }\n\n          children.pop()!.querySelector('button')!.focus();\n\n          return;\n        }\n\n        if (['ArrowDown', 'ArrowRight'].includes(key)) {\n          if (currentIndex < children.length - 1) {\n            children[currentIndex + 1]!.querySelector('button')!.focus();\n\n            return;\n          }\n\n          children.shift()!.querySelector('button')!.focus();\n\n          return;\n        }\n      },\n      true\n    );\n  }\n\n  build(actions: PlayerAction[]): void {\n    this.empty();\n\n    actions.forEach((playerAction) => {\n      let action: Action;\n\n      switch (playerAction._) {\n        // This is handled separately so no need to worry.\n        case 'ActiveUnit':\n          return;\n\n        case 'AdjustTradeRates':\n          action = new AdjustTradeRates(playerAction, this.#transport);\n\n          break;\n\n        case 'ChooseResearch':\n          action = new ChooseResearch(playerAction, this.#transport);\n\n          break;\n\n        case 'CityBuild':\n          action = new CityBuild(playerAction, this.#portal, this.#transport);\n\n          break;\n\n        case 'CivilDisorder':\n          action = new CivilDisorder(\n            playerAction,\n            this.#portal,\n            this.#transport\n          );\n\n          break;\n\n        case 'EndTurn':\n          action = new EndTurn(playerAction, this.#transport);\n\n          break;\n\n        case 'LaunchSpaceship':\n          action = new Spaceship(playerAction, this.#transport);\n\n          break;\n\n        case 'Revolution':\n          action = new Revolution(playerAction, this.#transport);\n\n          break;\n\n        case 'ChangeProduction':\n        case 'CompleteProduction':\n        case 'InactiveUnit':\n          return;\n\n        default:\n          console.log('need to handle ' + playerAction._);\n          return;\n        // throw new TypeError(`Unknown action type '${action._}'.`);\n      }\n\n      this.element().prepend(\n        h(action.element(), {\n          click: () => action.activate(),\n          keydown: ({ key }) => {\n            if (key === ' ' || key === 'Enter') {\n              action.activate();\n            }\n          },\n        })\n      );\n    });\n  }\n}\n\nexport default Actions;\n", "import {\n  City,\n  CityBuild,\n  PlayerAction,\n  PlayerGovernment,\n  PlayerResearch,\n  PlayerTradeRates,\n  Spaceship,\n  Unit,\n} from '../../types';\nimport { Element, s } from '@dom111/element';\nimport Transport from '../../Transport';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    actioned: CustomEvent<Action>;\n  }\n}\n\nexport interface IAction {\n  activate(): void;\n  build(): void;\n  complete(): void;\n  element(): HTMLElement;\n  value():\n    | City\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates\n    | Spaceship;\n}\n\nexport class Action extends Element implements IAction {\n  #action: PlayerAction;\n  #transport: Transport;\n\n  constructor(action: PlayerAction, transport: Transport) {\n    super(s('<div class=\"action\"></div>'));\n\n    this.#action = action;\n    this.#transport = transport;\n\n    this.on('keydown', (event) => {\n      if (event.key === 'Escape') {\n        return;\n      }\n\n      event.stopPropagation();\n    });\n\n    this.build();\n  }\n\n  activate(): void {}\n\n  build(): void {}\n\n  complete(): void {\n    this.emit(\n      new CustomEvent('actioned', {\n        bubbles: true,\n        detail: this,\n      })\n    );\n  }\n\n  transport(): Transport {\n    return this.#transport;\n  }\n\n  value():\n    | City\n    | CityBuild\n    | PlayerResearch\n    | Unit\n    | PlayerGovernment\n    | PlayerTradeRates\n    | Spaceship {\n    return this.#action.value;\n  }\n}\n\nexport default Action;\n", "import { Element, s } from '@dom111/element';\n\nconst template: (label: string, value: number) => HTMLFieldSetElement = (\n  label: string,\n  value: number\n) =>\n  s(\n    `<fieldset><legend>${label}</legend><input type=\"range\" max=\"100\" min=\"0\" step=\"1\" value=\"${value}\"><input type=\"number\"><label><input type=\"checkbox\">Lock</label></fieldset>`\n  ) as HTMLFieldSetElement;\n\nexport type onInputHandler = () => void;\n\nexport class LockedSlider extends Element {\n  #label: string;\n  #range: HTMLInputElement;\n  #number: HTMLInputElement;\n  #lock: HTMLInputElement;\n  #listeners: onInputHandler[] = [];\n\n  constructor(label: string, currentValue: number) {\n    super(template(label, currentValue));\n\n    this.#label = label;\n    this.#range = this.element().querySelector(\n      'input[type=\"range\"]'\n    ) as HTMLInputElement;\n    this.#number = this.element().querySelector(\n      'input[type=\"number\"]'\n    ) as HTMLInputElement;\n    this.#lock = this.element().querySelector(\n      'input[type=\"checkbox\"]'\n    ) as HTMLInputElement;\n\n    this.build();\n  }\n\n  build(): void {\n    this.set(this.#range.value);\n\n    this.#range.addEventListener('input', () => this.set(this.#range.value));\n\n    this.#number.addEventListener('input', () => this.set(this.#number.value));\n\n    this.#lock.addEventListener('input', () => this.lock());\n\n    this.lock();\n  }\n\n  label(): string {\n    return this.#label;\n  }\n\n  private lock(): void {\n    if (this.isLocked()) {\n      this.#range.setAttribute('disabled', '');\n      this.#number.setAttribute('disabled', '');\n\n      return;\n    }\n\n    this.#range.removeAttribute('disabled');\n    this.#number.removeAttribute('disabled');\n  }\n\n  onInput(handler: onInputHandler): void {\n    this.#listeners.push(handler);\n  }\n\n  isLocked(): boolean {\n    return this.#lock.checked;\n  }\n\n  set(value: string): void {\n    value = Math.max(parseInt(value, 10), 0).toString();\n\n    if (this.#range.value !== value) {\n      this.#range.value = value;\n    }\n\n    if (this.#number.value !== value) {\n      this.#number.value = value;\n    }\n\n    this.#listeners.forEach((listener) => listener());\n  }\n\n  value(): number {\n    return parseInt(this.#range.value, 10);\n  }\n}\n\nexport default LockedSlider;\n", "import LockedSlider from './LockedSlider';\n\nexport class LockedSliderGroup {\n  #sliders;\n\n  constructor(...sliders: LockedSlider[]) {\n    this.#sliders = sliders;\n\n    this.#sliders.forEach((slider) =>\n      slider.onInput(() => {\n        if (this.total() === 100) {\n          return;\n        }\n\n        const otherSliders = this.#sliders.filter(\n            (otherSlider) => otherSlider !== slider\n          ),\n          otherActiveSliders = otherSliders.filter(\n            (slider) => !slider.isLocked()\n          );\n\n        if (this.total() !== 100 && otherActiveSliders.length === 0) {\n          slider.set((100 - this.total(otherSliders)).toString());\n\n          return;\n        }\n\n        if (this.total() > 100) {\n          let overage = this.total() - 100,\n            chunk = Math.ceil(overage / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() - Math.min(chunk, overage)).toString()\n            );\n\n            overage -= chunk;\n          });\n\n          if (this.total() > 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n\n        if (this.total() < 100) {\n          let remaining = 100 - this.total(),\n            chunk = Math.ceil(remaining / otherActiveSliders.length);\n\n          otherActiveSliders.forEach((otherSlider) => {\n            otherSlider.set(\n              (otherSlider.value() + Math.min(chunk, remaining)).toString()\n            );\n\n            remaining -= chunk;\n          });\n\n          if (this.total() < 100) {\n            slider.set((100 - this.total(otherSliders)).toString());\n          }\n        }\n      })\n    );\n  }\n\n  sliders(): LockedSlider[] {\n    return this.#sliders;\n  }\n\n  private total(sliders = this.#sliders): number {\n    return sliders.reduce((total, slider) => total + slider.value(), 0);\n  }\n}\n\nexport default LockedSliderGroup;\n", "import { CustomEventMap, Element, s } from '@dom111/element';\n\nexport interface ITransientElement {\n  display(): void;\n  parent(): HTMLElement;\n}\n\nexport class TransientElement<\n    T extends HTMLElement = HTMLElement,\n    M extends CustomEventMap = CustomEventMap\n  >\n  extends Element<T, M>\n  implements ITransientElement\n{\n  #parent: HTMLElement;\n\n  constructor(parent: HTMLElement, element: T = s('<div></div>')) {\n    super(element);\n\n    // capture keys in the notification window\n    this.on('keydown', (event: KeyboardEvent) => {\n      event.stopPropagation();\n    });\n\n    this.element().setAttribute('tabindex', '0');\n\n    this.#parent = parent;\n  }\n\n  build(): void {}\n\n  display(): void {\n    this.build();\n\n    this.#parent.append(this.element());\n  }\n\n  parent(): HTMLElement {\n    return this.#parent;\n  }\n}\n\nexport default TransientElement;\n", "import { TransientElement, ITransientElement } from './TransientElement';\nimport { off, on, s } from '@dom111/element';\nimport { Coordinate } from '../types';\nimport { h } from '../lib/html';\n\nexport interface IWindow extends ITransientElement {\n  close(): void;\n  maximise(): void;\n}\n\ntype WindowSize = {\n  height: number | string;\n  width: number | string;\n};\n\ntype WindowPosition = {\n  x: number;\n  y: number;\n};\n\nexport type WindowSettings = {\n  autoDisplay: boolean;\n  canClose: boolean;\n  canMaximise: boolean;\n  canResize: boolean;\n  classes: string | string[];\n  parent: HTMLElement;\n  position: WindowPosition | 'auto';\n  size: WindowSize | 'auto' | 'maximised';\n};\n\nexport type WindowOptions = { [K in keyof WindowSettings]?: WindowSettings[K] };\n\nconst defaultOptions: WindowSettings = {\n  autoDisplay: true,\n  canClose: true,\n  canMaximise: false,\n  canResize: false,\n  classes: '',\n  parent: document.body,\n  position: 'auto',\n  size: 'auto',\n};\n\nexport class Window\n  extends TransientElement<\n    HTMLDivElement,\n    {\n      close: [];\n    }\n  >\n  implements IWindow\n{\n  private options: WindowSettings;\n  #body: string | Node;\n  #title: string;\n\n  constructor(title: string, body: string | Node, options: WindowOptions = {}) {\n    super(\n      options.parent ?? defaultOptions.parent,\n      s<HTMLDivElement>('<div class=\"window\"></div>')\n    );\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.#body = body;\n    this.#title = title;\n\n    if (this.options.size === 'auto') {\n      this.addClass('size-auto');\n    }\n\n    if (this.options.size === 'maximised') {\n      this.addClass('maximised');\n    }\n\n    if (this.options.size !== 'auto') {\n      (['height', 'width'] as ('height' | 'width')[]).forEach((dimension) => {\n        const value = (this.options.size as WindowSize)[dimension];\n\n        if (typeof value === 'number') {\n          this.element().style[dimension] = value + 'px';\n\n          return;\n        }\n\n        this.element().style[dimension] = value;\n      });\n    }\n\n    if (this.options.position === 'auto') {\n      this.addClass('position-auto');\n    }\n\n    if (this.options.position !== 'auto') {\n      (\n        [\n          ['x', 'left'],\n          ['y', 'top'],\n        ] as ['x' | 'y', 'left' | 'top'][]\n      ).forEach(([axis, property]) => {\n        this.element().style[property] =\n          Math.min(\n            0,\n            Math.max(\n              document.body.clientHeight - 20,\n              (this.options.position as WindowPosition)[axis]\n            )\n          ) + 'px';\n      });\n    }\n\n    if (this.options.classes) {\n      this.addClass(\n        ...(Array.isArray(this.options.classes)\n          ? this.options.classes\n          : [this.options.classes])\n      );\n    }\n\n    if (this.options.autoDisplay) {\n      this.display();\n\n      return;\n    }\n\n    this.build();\n  }\n\n  build(): void {\n    this.empty();\n\n    const headerActions: HTMLElement[] = (\n      [\n        [\n          this.options.canMaximise,\n          h(\n            s(\n              `<button class=\"maximise\" aria-label=\"Maximise\">Maximise</button>`\n            ),\n            {\n              click: () => this.maximise(),\n            }\n          ),\n        ],\n        [\n          this.options.canClose,\n          h(s(`<button class=\"close\" aria-label=\"Close\">Maximise</button>`), {\n            click: () => this.close(),\n          }),\n        ],\n      ] as [boolean, HTMLElement][]\n    )\n      .filter(([show]: [boolean, HTMLElement]) => show)\n      .map(([, element]) => element);\n\n    let isDragging = false;\n\n    this.append(\n      h(s(`<header><h3>${this.#title}</h3></header>`, ...headerActions), {\n        dblclick: () => this.maximise(),\n        mousedown: (event) => {\n          if (event.target.matches('button, button img')) {\n            return;\n          }\n\n          isDragging = true;\n\n          const moveHandler = (event: MouseEvent) => {\n            if (!isDragging) {\n              return;\n            }\n\n            this.move({\n              x: event.movementX,\n              y: event.movementY,\n            });\n          };\n\n          on(document, 'mousemove', moveHandler);\n\n          on(\n            document,\n            'mouseup',\n            () => {\n              off(document, 'mousemove', moveHandler);\n\n              isDragging = false;\n            },\n            {\n              once: true,\n            }\n          );\n        },\n      }),\n      s(\n        '<div class=\"body\"></div>',\n        this.#body instanceof Node ? this.#body : s(`<p>${this.#body}</p>`)\n      )\n    );\n\n    this.on('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && this.options.canClose) {\n        this.close();\n      }\n\n      // Capture all keypresses whilst this is focused\n      event.stopPropagation();\n    });\n  }\n\n  close(): void {\n    this.remove();\n\n    this.emit(new CustomEvent('close'));\n  }\n\n  display(focus = true): void {\n    super.display();\n\n    if (!focus) {\n      return;\n    }\n\n    this.element().focus();\n  }\n\n  maximise(): void {\n    if (!this.options.canMaximise) {\n      return;\n    }\n\n    this.element().classList.toggle('maximised');\n\n    this.emit(\n      new CustomEvent('resize', {\n        bubbles: false,\n      })\n    );\n  }\n\n  move({ x, y }: Coordinate): void {\n    if (this.hasClass('position-auto')) {\n      // Ensure the auto position is accounted for\n      x += this.element().offsetLeft;\n      y += this.element().offsetTop;\n\n      this.removeClass('position-auto');\n\n      this.element().style.setProperty('top', y + 'px');\n      this.element().style.setProperty('left', x + 'px');\n\n      return;\n    }\n\n    const elementComputedStyle = getComputedStyle(this.element()),\n      currentTop = parseInt(elementComputedStyle.getPropertyValue('top'), 10),\n      currentLeft = parseInt(elementComputedStyle.getPropertyValue('left'), 10);\n\n    this.element().style.setProperty('top', currentTop + y + 'px');\n    this.element().style.setProperty('left', currentLeft + x + 'px');\n  }\n\n  update(content: string | Node): void {\n    this.element().lastElementChild!.remove();\n\n    this.append(content instanceof Node ? content : s(`<p>${content}</p>`));\n  }\n}\n\nexport default Window;\n", "export const h = <T extends HTMLElement>(\n  element: T,\n  handlers: { [key: string]: (event: any) => void }\n): T => {\n  Object.entries(handlers).forEach(([eventName, handler]): void =>\n    element.addEventListener(eventName, handler)\n  );\n\n  return element;\n};\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "import {\n  DBSchema,\n  IDBPDatabase,\n  StoreKey,\n  StoreNames,\n  StoreValue,\n} from 'idb/build/entry';\nimport { openDB } from 'idb';\n\nexport interface Record {\n  [key: string]: any;\n}\n\nexport class Store<Types extends DBSchema> {\n  #connection: Promise<IDBPDatabase<Types>>;\n  #store: StoreNames<Types>;\n\n  constructor(\n    db: string,\n    store: StoreNames<Types>,\n    options?: IDBObjectStoreParameters\n  ) {\n    this.#store = store;\n\n    this.#connection = openDB(db, 1, {\n      upgrade: (db) => db.createObjectStore(this.#store, options),\n    });\n  }\n\n  async get(key: StoreKey<Types, StoreNames<Types>>) {\n    return (await this.#connection).get(this.#store, key);\n  }\n\n  async getAll(\n    query?: StoreKey<Types, StoreNames<Types>> | IDBKeyRange | null,\n    count?: number\n  ) {\n    return (await this.#connection).getAll(this.#store, query, count);\n  }\n\n  async set(\n    record: StoreValue<Types, StoreNames<Types>>,\n    key?: StoreKey<Types, StoreNames<Types>>\n  ) {\n    return (await this.#connection).put(this.#store, record, key);\n  }\n\n  async clear() {\n    return (await this.#connection).clear(this.#store);\n  }\n\n  async keys() {\n    return (await this.#connection).getAllKeys(this.#store);\n  }\n}\n", "type ScalingOptions = {\n  smoothing?: boolean;\n};\n\nexport const scaleImage = (\n  image: CanvasImageSource,\n  scale: number,\n  options?: ScalingOptions\n): HTMLCanvasElement => {\n  const newCanvas = document.createElement('canvas')!,\n    context = newCanvas.getContext('2d')!;\n\n  newCanvas.width = (image.width as number) * scale;\n  newCanvas.height = (image.height as number) * scale;\n\n  if (!options?.smoothing) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  context.drawImage(image, 0, 0, newCanvas.width, newCanvas.height);\n\n  return newCanvas;\n};\n\nexport default scaleImage;\n", "import { Record, Store } from './Store';\nimport scaleImage from './lib/scaleImage';\n\ninterface Asset extends Record {\n  name: string;\n  uri: string;\n}\n\nexport class AssetStore extends Store<{\n  assets: {\n    key: string;\n    value: Asset;\n  };\n}> {\n  #cachedAssets = new Map<string, Asset>();\n  #cachedImages = new Map<string, HTMLImageElement>();\n  #cachedScaledImages = new Map<string, HTMLCanvasElement>();\n  #requiredAssets: string[] = [\n    './assets/city/bulb.png',\n    './assets/city/food.png',\n    './assets/city/gold.png',\n    './assets/city/luxury.png',\n    './assets/city/people_content_f.png',\n    './assets/city/people_content_m.png',\n    './assets/city/people_happy_f.png',\n    './assets/city/people_happy_m.png',\n    './assets/city/people_luxury.png',\n    './assets/city/people_science.png',\n    './assets/city/people_tax.png',\n    './assets/city/people_unhappy_f.png',\n    './assets/city/people_unhappy_m.png',\n    './assets/city/pollution.png',\n    './assets/city/sad.png',\n    './assets/city/production.png',\n    './assets/city/trade.png',\n    './assets/cursor/go.png',\n    './assets/cursor/torch.png',\n    './assets/general/texture_1.png',\n    './assets/general/texture_2.png',\n    './assets/improvements/irrigation.png',\n    './assets/improvements/mine.png',\n    './assets/improvements/pollution.png',\n    './assets/improvements/railroad_e.png',\n    './assets/improvements/railroad_se.png',\n    './assets/improvements/railroad_n.png',\n    './assets/improvements/railroad_ne.png',\n    './assets/improvements/railroad_nw.png',\n    './assets/improvements/railroad_s.png',\n    './assets/improvements/railroad_sw.png',\n    './assets/improvements/railroad_w.png',\n    './assets/improvements/road_e.png',\n    './assets/improvements/road_n.png',\n    './assets/improvements/road_ne.png',\n    './assets/improvements/road_nw.png',\n    './assets/improvements/road_s.png',\n    './assets/improvements/road_se.png',\n    './assets/improvements/road_sw.png',\n    './assets/improvements/road_w.png',\n    './assets/map/city.png',\n    './assets/map/fog_e.png',\n    './assets/map/fog_n.png',\n    './assets/map/fog_s.png',\n    './assets/map/fog_w.png',\n    './assets/map/fort.png',\n    './assets/map/fortify.png',\n    './assets/map/hut.png',\n    './assets/status/pollution_0.png',\n    './assets/status/pollution_25.png',\n    './assets/status/pollution_50.png',\n    './assets/status/pollution_75.png',\n    './assets/status/science_0.png',\n    './assets/status/science_25.png',\n    './assets/status/science_50.png',\n    './assets/status/science_75.png',\n    './assets/terrain/arctic.png',\n    './assets/terrain/arctic_e.png',\n    './assets/terrain/arctic_es.png',\n    './assets/terrain/arctic_esw.png',\n    './assets/terrain/arctic_ew.png',\n    './assets/terrain/arctic_n.png',\n    './assets/terrain/arctic_ne.png',\n    './assets/terrain/arctic_nes.png',\n    './assets/terrain/arctic_nesw.png',\n    './assets/terrain/arctic_new.png',\n    './assets/terrain/arctic_ns.png',\n    './assets/terrain/arctic_nsw.png',\n    './assets/terrain/arctic_nw.png',\n    './assets/terrain/arctic_s.png',\n    './assets/terrain/arctic_sw.png',\n    './assets/terrain/arctic_w.png',\n    './assets/terrain/coal.png',\n    './assets/terrain/coast_sprite.png',\n    './assets/terrain/desert.png',\n    './assets/terrain/desert_e.png',\n    './assets/terrain/desert_es.png',\n    './assets/terrain/desert_esw.png',\n    './assets/terrain/desert_ew.png',\n    './assets/terrain/desert_n.png',\n    './assets/terrain/desert_ne.png',\n    './assets/terrain/desert_nes.png',\n    './assets/terrain/desert_nesw.png',\n    './assets/terrain/desert_new.png',\n    './assets/terrain/desert_ns.png',\n    './assets/terrain/desert_nsw.png',\n    './assets/terrain/desert_nw.png',\n    './assets/terrain/desert_s.png',\n    './assets/terrain/desert_sw.png',\n    './assets/terrain/desert_w.png',\n    './assets/terrain/doe.png',\n    './assets/terrain/fish.png',\n    './assets/terrain/forest.png',\n    './assets/terrain/forest_e.png',\n    './assets/terrain/forest_es.png',\n    './assets/terrain/forest_esw.png',\n    './assets/terrain/forest_ew.png',\n    './assets/terrain/forest_n.png',\n    './assets/terrain/forest_ne.png',\n    './assets/terrain/forest_nes.png',\n    './assets/terrain/forest_nesw.png',\n    './assets/terrain/forest_new.png',\n    './assets/terrain/forest_ns.png',\n    './assets/terrain/forest_nsw.png',\n    './assets/terrain/forest_nw.png',\n    './assets/terrain/forest_s.png',\n    './assets/terrain/forest_sw.png',\n    './assets/terrain/forest_w.png',\n    './assets/terrain/gems.png',\n    './assets/terrain/gold.png',\n    './assets/terrain/grassland.png',\n    './assets/terrain/grassland_e.png',\n    './assets/terrain/grassland_es.png',\n    './assets/terrain/grassland_esw.png',\n    './assets/terrain/grassland_ew.png',\n    './assets/terrain/grassland_n.png',\n    './assets/terrain/grassland_ne.png',\n    './assets/terrain/grassland_nes.png',\n    './assets/terrain/grassland_nesw.png',\n    './assets/terrain/grassland_new.png',\n    './assets/terrain/grassland_ns.png',\n    './assets/terrain/grassland_nsw.png',\n    './assets/terrain/grassland_nw.png',\n    './assets/terrain/grassland_s.png',\n    './assets/terrain/grassland_sw.png',\n    './assets/terrain/grassland_w.png',\n    './assets/terrain/hills.png',\n    './assets/terrain/hills_e.png',\n    './assets/terrain/hills_es.png',\n    './assets/terrain/hills_esw.png',\n    './assets/terrain/hills_ew.png',\n    './assets/terrain/hills_n.png',\n    './assets/terrain/hills_ne.png',\n    './assets/terrain/hills_nes.png',\n    './assets/terrain/hills_nesw.png',\n    './assets/terrain/hills_new.png',\n    './assets/terrain/hills_ns.png',\n    './assets/terrain/hills_nsw.png',\n    './assets/terrain/hills_nw.png',\n    './assets/terrain/hills_s.png',\n    './assets/terrain/hills_sw.png',\n    './assets/terrain/hills_w.png',\n    './assets/terrain/horse.png',\n    './assets/terrain/jungle.png',\n    './assets/terrain/jungle_e.png',\n    './assets/terrain/jungle_es.png',\n    './assets/terrain/jungle_esw.png',\n    './assets/terrain/jungle_ew.png',\n    './assets/terrain/jungle_n.png',\n    './assets/terrain/jungle_ne.png',\n    './assets/terrain/jungle_nes.png',\n    './assets/terrain/jungle_nesw.png',\n    './assets/terrain/jungle_new.png',\n    './assets/terrain/jungle_ns.png',\n    './assets/terrain/jungle_nsw.png',\n    './assets/terrain/jungle_nw.png',\n    './assets/terrain/jungle_s.png',\n    './assets/terrain/jungle_sw.png',\n    './assets/terrain/jungle_w.png',\n    './assets/terrain/land.png',\n    './assets/terrain/mountains.png',\n    './assets/terrain/mountains_e.png',\n    './assets/terrain/mountains_es.png',\n    './assets/terrain/mountains_esw.png',\n    './assets/terrain/mountains_ew.png',\n    './assets/terrain/mountains_n.png',\n    './assets/terrain/mountains_ne.png',\n    './assets/terrain/mountains_nes.png',\n    './assets/terrain/mountains_nesw.png',\n    './assets/terrain/mountains_new.png',\n    './assets/terrain/mountains_ns.png',\n    './assets/terrain/mountains_nsw.png',\n    './assets/terrain/mountains_nw.png',\n    './assets/terrain/mountains_s.png',\n    './assets/terrain/mountains_sw.png',\n    './assets/terrain/mountains_w.png',\n    './assets/terrain/oasis.png',\n    './assets/terrain/ocean.png',\n    './assets/terrain/oil.png',\n    './assets/terrain/plains.png',\n    './assets/terrain/plains_e.png',\n    './assets/terrain/plains_es.png',\n    './assets/terrain/plains_esw.png',\n    './assets/terrain/plains_ew.png',\n    './assets/terrain/plains_n.png',\n    './assets/terrain/plains_ne.png',\n    './assets/terrain/plains_nes.png',\n    './assets/terrain/plains_nesw.png',\n    './assets/terrain/plains_new.png',\n    './assets/terrain/plains_ns.png',\n    './assets/terrain/plains_nsw.png',\n    './assets/terrain/plains_nw.png',\n    './assets/terrain/plains_s.png',\n    './assets/terrain/plains_sw.png',\n    './assets/terrain/plains_w.png',\n    './assets/terrain/river_e.png',\n    './assets/terrain/river_es.png',\n    './assets/terrain/river_esw.png',\n    './assets/terrain/river_ew.png',\n    './assets/terrain/river_mouth_e.png',\n    './assets/terrain/river_mouth_n.png',\n    './assets/terrain/river_mouth_s.png',\n    './assets/terrain/river_mouth_w.png',\n    './assets/terrain/river.png',\n    './assets/terrain/river_n.png',\n    './assets/terrain/river_ne.png',\n    './assets/terrain/river_nes.png',\n    './assets/terrain/river_nesw.png',\n    './assets/terrain/river_new.png',\n    './assets/terrain/river_ns.png',\n    './assets/terrain/river_nsw.png',\n    './assets/terrain/river_nw.png',\n    './assets/terrain/river_s.png',\n    './assets/terrain/river_sw.png',\n    './assets/terrain/river_w.png',\n    './assets/terrain/seal.png',\n    './assets/terrain/shield.png',\n    './assets/terrain/game.png',\n    './assets/terrain/swamp.png',\n    './assets/terrain/swamp_e.png',\n    './assets/terrain/swamp_es.png',\n    './assets/terrain/swamp_esw.png',\n    './assets/terrain/swamp_ew.png',\n    './assets/terrain/swamp_n.png',\n    './assets/terrain/swamp_ne.png',\n    './assets/terrain/swamp_nes.png',\n    './assets/terrain/swamp_nesw.png',\n    './assets/terrain/swamp_new.png',\n    './assets/terrain/swamp_ns.png',\n    './assets/terrain/swamp_nsw.png',\n    './assets/terrain/swamp_nw.png',\n    './assets/terrain/swamp_s.png',\n    './assets/terrain/swamp_sw.png',\n    './assets/terrain/swamp_w.png',\n    './assets/terrain/tundra.png',\n    './assets/terrain/tundra_e.png',\n    './assets/terrain/tundra_es.png',\n    './assets/terrain/tundra_esw.png',\n    './assets/terrain/tundra_ew.png',\n    './assets/terrain/tundra_n.png',\n    './assets/terrain/tundra_ne.png',\n    './assets/terrain/tundra_nes.png',\n    './assets/terrain/tundra_nesw.png',\n    './assets/terrain/tundra_new.png',\n    './assets/terrain/tundra_ns.png',\n    './assets/terrain/tundra_nsw.png',\n    './assets/terrain/tundra_nw.png',\n    './assets/terrain/tundra_s.png',\n    './assets/terrain/tundra_sw.png',\n    './assets/terrain/tundra_w.png',\n    './assets/units/tank.png',\n    './assets/units/artillery.png',\n    './assets/units/battleship.png',\n    './assets/units/bomber.png',\n    './assets/units/cannon.png',\n    './assets/units/caravan.png',\n    './assets/units/carrier.png',\n    './assets/units/catapult.png',\n    './assets/units/horseman.png',\n    './assets/units/chariot.png',\n    './assets/units/combat_1.png',\n    './assets/units/combat_2.png',\n    './assets/units/combat_3.png',\n    './assets/units/combat_4.png',\n    './assets/units/combat_5.png',\n    './assets/units/combat_6.png',\n    './assets/units/combat_7.png',\n    './assets/units/combat_8.png',\n    './assets/units/cruiser.png',\n    './assets/units/diplomat.png',\n    './assets/units/fighter.png',\n    './assets/units/frigate.png',\n    './assets/units/ironclad.png',\n    './assets/units/knight.png',\n    './assets/units/swordman.png',\n    './assets/units/mechanizedinfantry.png',\n    './assets/units/warrior.png',\n    './assets/units/musketman.png',\n    './assets/units/nuclear.png',\n    './assets/units/spearman.png',\n    './assets/units/rifleman.png',\n    './assets/units/sail.png',\n    './assets/units/settlers.png',\n    './assets/units/submarine.png',\n    './assets/units/transport.png',\n    './assets/units/trireme.png',\n  ];\n\n  constructor() {\n    super('civ-clone-assets', 'assets', {\n      keyPath: 'name',\n    });\n  }\n\n  async get(path: string): Promise<Asset> {\n    if (!this.#cachedAssets.has(path)) {\n      this.#cachedAssets.set(path, (await super.get(path))!);\n    }\n\n    return this.#cachedAssets.get(path)!;\n  }\n\n  async getImage(path: string): Promise<HTMLImageElement> {\n    if (!this.#cachedImages.has(path)) {\n      const asset = await this.get(path),\n        image = document.createElement('img')!;\n\n      image.src = asset.uri;\n\n      this.#cachedImages.set(path, image);\n    }\n\n    return this.#cachedImages.get(path)!;\n  }\n\n  async getScaled(path: string, scale: number): Promise<HTMLCanvasElement> {\n    if (!this.#cachedScaledImages.has(path)) {\n      this.#cachedScaledImages.set(\n        path,\n        scaleImage(await this.getImage(path), scale)\n      );\n    }\n\n    return this.#cachedScaledImages.get(path)!;\n  }\n\n  async hasAllAssets(): Promise<boolean> {\n    return (await this.missingAssets()).length === 0;\n  }\n\n  async missingAssets(): Promise<string[]> {\n    const dbAssets = await this.keys();\n\n    return this.#requiredAssets.filter(\n      (requiredAsset) => !dbAssets.includes(requiredAsset)\n    );\n  }\n}\n\nexport const assetStore = new AssetStore();\n", "import Action from './Action';\nimport LockedSlider from '../LockedSlider';\nimport LockedSliderGroup from '../LockedSliderGroup';\nimport { PlayerTradeRates } from '../../types';\nimport Window from '../Window';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\n\nexport class AdjustTradeRates extends Action {\n  #sliderGroup: LockedSliderGroup | undefined;\n\n  activate(): void {\n    const sliders: LockedSlider[] = [];\n\n    const window = new Window(\n      'Adjust trade rates',\n      s(\n        '<div></div>',\n        ...this.value().all.map((tradeRate) => {\n          const slider = new LockedSlider(tradeRate._, tradeRate.value);\n\n          sliders.push(slider);\n\n          return slider;\n        })\n      )\n    );\n\n    window.on('close', () => {\n      const value = this.#sliderGroup!.sliders().map((slider) => [\n        slider.label(),\n        slider.value(),\n      ]);\n\n      this.transport().send('action', {\n        name: 'AdjustTradeRates',\n        id: this.value().id,\n        value,\n      });\n    });\n\n    this.#sliderGroup = new LockedSliderGroup(...sliders);\n  }\n\n  build(): void {\n    assetStore\n      .get('./assets/city/trade.png')\n      .then((asset) =>\n        this.append(\n          s(\n            `<button class=\"adjustTradeRates small\" title=\"Adjust trade rates\"><img src=\"${\n              asset!.uri\n            }\"></button>`\n          )\n        )\n      );\n  }\n\n  value(): PlayerTradeRates {\n    return super.value() as PlayerTradeRates;\n  }\n}\n\nexport default AdjustTradeRates;\n", "import { Window, IWindow, WindowOptions } from './Window';\n\nexport interface INotificationWindow extends IWindow {}\n\nconst notificationQueue: [\n  NotificationWindow,\n  boolean,\n  (...args: any[]) => void\n][] = [];\n\nexport interface NotificationWindowOptions extends WindowOptions {\n  queue?: boolean;\n}\n\nexport class NotificationWindow extends Window implements INotificationWindow {\n  #options: NotificationWindowOptions = {};\n\n  constructor(\n    title: string,\n    body: string | Node,\n    passedOptions: NotificationWindowOptions = {}\n  ) {\n    const options = {\n      classes: 'notificationWindow',\n      queue: true,\n      ...passedOptions,\n    };\n\n    super(title, body, options);\n\n    this.#options = options;\n\n    this.on('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.close();\n\n        event.stopPropagation();\n      }\n    });\n  }\n\n  close(): void {\n    super.close();\n\n    if (\n      this.#options.queue &&\n      notificationQueue.length &&\n      NotificationWindow.hasOpenWindow()\n    ) {\n      const [notification, focus, resolve] = notificationQueue.shift()!;\n\n      notification.display(focus);\n\n      resolve();\n    }\n  }\n\n  display(focus = true): Promise<any> {\n    return new Promise((resolve) => {\n      if (NotificationWindow.hasOpenWindow()) {\n        notificationQueue.push([this, focus, resolve]);\n\n        return;\n      }\n\n      super.display();\n\n      if (!focus) {\n        resolve(undefined);\n\n        return;\n      }\n\n      this.element().focus();\n\n      resolve(undefined);\n    });\n  }\n\n  static hasOpenWindow(): boolean {\n    return !!document.querySelector('div.notificationWindow');\n  }\n}\n\nexport default NotificationWindow;\n", "import {\n  INotificationWindow,\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\n\nexport interface ActionWindowAction {\n  label: string;\n  action: (window: INotificationWindow) => void;\n}\n\nexport interface ActionWindowActions {\n  [key: string]: ActionWindowAction;\n}\n\nexport interface ActionWindowOptions extends NotificationWindowOptions {\n  actions?: ActionWindowActions;\n}\n\nexport class ActionWindow extends NotificationWindow {\n  constructor(\n    title: string,\n    body: string | Node,\n    options: ActionWindowOptions = {}\n  ) {\n    options = {\n      ...options,\n      actions: {\n        primary: {\n          label: 'OK',\n          action: (actionWindow) => actionWindow.close(),\n          ...(options.actions?.primary ?? {}),\n        },\n        ...options.actions,\n      },\n    };\n\n    super(\n      title,\n      s(\n        '<div></div>',\n        ...(body instanceof Node\n          ? [body]\n          : body === null\n          ? []\n          : [s(`<p>${body}</p>`)]),\n        s(\n          '<footer></footer>',\n          ...Object.entries(options.actions!).map(([, { label, action }]) =>\n            h(s(`<button>${label}</button>`), {\n              click: () => action(this),\n              keydown: (event) => {\n                if (event.key === 'Enter') {\n                  action(this);\n                }\n              },\n            })\n          )\n        )\n      ),\n      options\n    );\n\n    this.addClass('actionWindow');\n  }\n}\n\nexport default ActionWindow;\n", "import { ActionWindow, ActionWindowOptions } from './ActionWindow';\nimport { off, on, s } from '@dom111/element';\nimport { h } from '../lib/html';\nimport { mappedKeyFromEvent } from '../lib/mappedKey';\nimport { INotificationWindow } from './NotificationWindow';\n\nexport interface ISelectionWindow extends INotificationWindow {\n  resize(): void;\n  selectionList(): HTMLSelectElement;\n}\n\nexport interface SelectionWindowOption {\n  label?: string;\n  value: any;\n}\n\nexport interface SelectionWindowOptions extends ActionWindowOptions {\n  autoFocus?: boolean;\n  displayAll?: boolean;\n}\n\nexport class SelectionWindow extends ActionWindow implements ISelectionWindow {\n  #resizeHandler = () => this.resize();\n  #selectionList: HTMLSelectElement;\n\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {}\n  ) {\n    options = {\n      autoFocus: true,\n      displayAll: false,\n      ...options,\n      actions: {\n        primary: {\n          label: 'OK',\n          action: () => chooseHandler(this.selectionList().value),\n          ...(options.actions?.primary ?? {}),\n        },\n        ...options.actions,\n      },\n    };\n\n    const chooseHandler = (selection: string): void => {\n        this.emit(\n          new CustomEvent<string>('selection', {\n            detail: selection,\n          })\n        );\n\n        this.close();\n\n        onChoose(selection);\n      },\n      selectionList: HTMLSelectElement = h(\n        s(\n          `<select>${optionList\n            .map(\n              (option) =>\n                `<option value=\"${option.value}\">${\n                  option.label || option.value\n                }</option>`\n            )\n            .join('')}</select>`\n        ),\n        {\n          keydown: (event: KeyboardEvent) => {\n            const key = mappedKeyFromEvent(event);\n\n            if (key === 'Enter') {\n              chooseHandler(selectionList.value);\n\n              event.preventDefault();\n            }\n\n            if (\n              [\n                'ArrowDown',\n                'ArrowUp',\n                'End',\n                'Home',\n                'PageDown',\n                'PageUp',\n              ].includes(key) &&\n              ![\n                'ArrowDown',\n                'ArrowUp',\n                'End',\n                'Home',\n                'PageDown',\n                'PageUp',\n              ].includes(event.key)\n            ) {\n              const currentIndex = selectionList.selectedIndex,\n                targetIndex = ['Home', 'PageUp'].includes(key)\n                  ? 0\n                  : ['End', 'PageDown'].includes(key)\n                  ? selectionList.length - 1\n                  : currentIndex + (key === 'ArrowUp' ? -1 : 1);\n\n              if (targetIndex > -1 && targetIndex < selectionList.length) {\n                selectionList.selectedIndex = targetIndex;\n              }\n\n              event.preventDefault();\n            }\n          },\n          dblclick: () => chooseHandler(selectionList.value),\n        }\n      );\n\n    if (options.displayAll && optionList.length > 1) {\n      selectionList.setAttribute('size', optionList.length.toString());\n    }\n\n    if (options.autoFocus && optionList.length > 1) {\n      selectionList.setAttribute('autofocus', '');\n    }\n\n    if (options.autoFocus && optionList.length === 1) {\n      selectionList.setAttribute('autofocus', '');\n    }\n\n    super(\n      title,\n      s(\n        '<div></div>',\n        ...(body instanceof Node\n          ? [body]\n          : body === null\n          ? []\n          : [s(`<p>${body}</p>`)]),\n        selectionList\n      ),\n      options\n    );\n\n    this.addClass('selectionWindow');\n    this.#selectionList = selectionList;\n\n    this.resize();\n\n    on(window, 'resize', this.#resizeHandler);\n  }\n\n  close() {\n    off(window, 'resize', this.#resizeHandler);\n\n    super.close();\n  }\n\n  display(): Promise<any> {\n    return super.display(false).then(() => {\n      const select = this.query('select');\n\n      if (select && select.hasAttribute('autofocus')) {\n        select.focus();\n      }\n    });\n  }\n\n  resize(): void {\n    // TODO: I'd like to have this height scaled automatically.\n    //  Feels like it should be possible using CSS flexbox, but can't get it to work...\n    try {\n      this.selectionList().style.maxHeight = 'none';\n      this.selectionList().style.maxHeight = `calc(${\n        this.element().offsetHeight -\n        (this.element().firstElementChild! as HTMLElement).offsetHeight -\n        ((this.selectionList().previousElementSibling as HTMLElement)\n          ?.offsetHeight ?? 0) -\n        ((this.selectionList().parentElement?.nextElementSibling as HTMLElement)\n          ?.offsetHeight ?? 0)\n      }px - 2.1em)`;\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  selectionList(): HTMLSelectElement {\n    return this.#selectionList;\n  }\n}\n\nexport default SelectionWindow;\n", "const numpadMap: { [key: string]: string } = {\n  '0': 'Insert',\n  '1': 'End',\n  '2': 'ArrowDown',\n  '3': 'PageDown',\n  '4': 'ArrowLeft',\n  '6': 'ArrowRight',\n  '7': 'Home',\n  '8': 'ArrowUp',\n  '9': 'PageUp',\n  '.': 'Delete',\n};\n\nexport const mappedKeyFromEvent = (\n  event: KeyboardEvent,\n  numpadAsArrows: boolean = true\n): string => {\n  if (\n    numpadAsArrows &&\n    event.location === KeyboardEvent.DOM_KEY_LOCATION_NUMPAD &&\n    event.key in numpadMap\n  ) {\n    return numpadMap[event.key];\n  }\n\n  return event.key;\n};\n", "import Action from './Action';\nimport { PlayerResearch } from '../../types';\nimport SelectionWindow from '../SelectionWindow';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\n\nexport class ChooseResearch extends Action {\n  activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose research',\n      this.value().available.map((advance) => ({\n        value: advance._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        this.transport().send('action', {\n          name: 'ChooseResearch',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which advance would you like to research next?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    assetStore\n      .get('./assets/city/bulb.png')\n      .then((asset) =>\n        this.append(\n          s(\n            `<button class=\"large chooseResearch\" title=\"Choose research\"><img src=\"${\n              asset!.uri\n            }\"></button>`\n          )\n        )\n      );\n  }\n\n  value(): PlayerResearch {\n    return super.value() as PlayerResearch;\n  }\n}\n\nexport default ChooseResearch;\n", "import { Entity, EntityInstance } from '../types';\n\ntype ClassNameStatus = {\n  [key: string]: boolean;\n};\n\n/**\n * Ensures the `__` property contains at least one of the passed in  `classNames`.\n */\nexport const instanceOf = (\n  object: Entity | EntityInstance,\n  ...classNames: string[]\n) =>\n  object.__.some((entityClassName: string) =>\n    classNames.includes(entityClassName)\n  );\n\n/**\n * Ensures the `__` property contains each of the passed in `classNames`.\n */\nexport const instanceOfAll = (\n  object: Entity | EntityInstance,\n  ...classNames: string[]\n) =>\n  Object.values(\n    object.__.reduce(\n      (classNameStatus: ClassNameStatus, className) => {\n        if (Object.prototype.hasOwnProperty.call(classNameStatus, className)) {\n          classNameStatus[className] = true;\n        }\n\n        return classNameStatus;\n      },\n      classNames.reduce((classNameStatus: ClassNameStatus, className) => {\n        classNameStatus[className] = false;\n\n        return classNameStatus;\n      }, {})\n    )\n  ).every((value) => value);\n\nexport default instanceOf;\n", "import { City, Yield } from '../types';\nimport instanceOf from './instanceOf';\n\nexport const knownGroupParents: string[] = [\n  'Food',\n  'Production',\n  'Trade',\n  'Gold',\n  'Research',\n  'Happiness',\n  'Unhappiness',\n];\nexport const knownGroups: { [key: string]: string } = {\n  Food: 'Food',\n  UnitSupportFood: 'Food',\n  PopulationSupportFood: 'Food',\n  Production: 'Production',\n  UnitSupportProduction: 'Production',\n  Trade: 'Trade',\n  Corruption: 'Trade',\n  Happiness: 'Happiness',\n  LuxuryHappiness: 'Happiness',\n  Unhappiness: 'Unhappiness',\n  MartialLaw: 'Unhappiness',\n  MilitaryUnhappiness: 'Unhappiness',\n  PopulationUnhappiness: 'Unhappiness',\n  CityImprovementContent: 'Unhappiness',\n  Research: 'Research',\n  Luxuries: 'Luxuries',\n  Gold: 'Gold',\n  CityImprovementMaintenanceGold: 'Gold',\n};\n\nexport const knownGroupLookup = Object.entries(knownGroups).reduce(\n  (object, [yieldName, group]) => {\n    if (!Object.prototype.hasOwnProperty.call(object, group)) {\n      object[group] = [];\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(object, yieldName)) {\n      object[yieldName] = [];\n    }\n\n    object[group].push(yieldName);\n    object[yieldName].push(yieldName);\n\n    return object;\n  },\n  {} as { [key: string]: string[] }\n);\n\nexport const reduceKnownYields = (\n  yields: Yield[],\n  ...yieldNames: string[]\n): number[] =>\n  yields.reduce(\n    (yields, cityYield) => {\n      yieldNames.forEach((yieldName, index) => {\n        if (instanceOf(cityYield, yieldName)) {\n          yields[index] += cityYield.value;\n        }\n      });\n\n      return yields;\n    },\n    yieldNames.map(() => 0)\n  );\n\nexport const reduceKnownYield = (yields: Yield[], yieldName: string): number =>\n  reduceKnownYields(yields, yieldName)[0];\n\nexport const knownIcons: { [key: string]: string } = {\n  Food: 'city/food.png',\n  Production: 'city/production.png',\n  Trade: 'city/trade.png',\n  Gold: 'city/gold.png',\n  Luxuries: 'city/luxury.png',\n  Pollution: 'city/pollution.png',\n  Research: 'city/bulb.png',\n  Unhappiness: 'city/sad.png',\n};\n", "import { BuildItem, City as CityData, CityBuild } from '../types';\nimport { ActionWindowActions } from './ActionWindow';\nimport City from './City';\nimport Portal from './Portal';\nimport SelectionWindow, { ISelectionWindow } from './SelectionWindow';\nimport Transport from '../Transport';\nimport { reduceKnownYield } from '../lib/yieldMap';\nimport { INotificationWindow } from './NotificationWindow';\n\ntype onCompleteHandler = (hasSelected: boolean, ...args: any[]) => void;\n\nexport class CityBuildSelectionWindow extends SelectionWindow {\n  #onComplete: onCompleteHandler;\n  #transport: Transport;\n\n  constructor(\n    cityBuild: CityBuild,\n    transport: Transport,\n    onComplete: onCompleteHandler = () => {},\n    additionalActions: ActionWindowActions = {}\n  ) {\n    const turns = (buildItem: BuildItem) =>\n      Math.max(\n        1,\n        Math.ceil(\n          (buildItem.cost.value - cityBuild.progress.value) /\n            reduceKnownYield(cityBuild.city.yields, 'Production')\n        )\n      );\n\n    super(\n      `What would you like to build in ${cityBuild.city.name}?`,\n      cityBuild.available.map((buildItem) => ({\n        label: `${buildItem.item._} (Cost: ${buildItem.cost.value} / ${turns(\n          buildItem\n        )} turn${turns(buildItem) === 1 ? '' : 's'})`,\n        value: buildItem.item._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        transport.send('action', {\n          name: cityBuild.building === null ? 'CityBuild' : 'ChangeProduction',\n          id: cityBuild.id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.close(true);\n      },\n      null,\n      {\n        actions: additionalActions,\n        displayAll: true,\n      }\n    );\n\n    this.#onComplete = onComplete;\n    this.#transport = transport;\n  }\n\n  close(hasSelected: boolean = false): void {\n    super.close();\n\n    if (hasSelected) {\n      this.#onComplete(hasSelected);\n    }\n  }\n}\n\nexport default CityBuildSelectionWindow;\n", "import { CityBuild as CityBuildObject, PlayerAction } from '../../types';\nimport Action from './Action';\nimport CityBuildSelectionWindow from '../CityBuildSelectionWindow';\nimport Portal from '../Portal';\nimport Transport from '../../Transport';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\nimport showCityAction from '../lib/showCityAction';\nimport showCityOnMapAction from '../lib/showCityOnMap';\n\nexport class CityBuild extends Action {\n  #portal: Portal;\n\n  constructor(action: PlayerAction, portal: Portal, transport: Transport) {\n    super(action, transport);\n\n    this.#portal = portal;\n  }\n\n  activate(): void {\n    new CityBuildSelectionWindow(\n      this.value(),\n      this.transport(),\n      () => this.complete(),\n      {\n        showCity: showCityAction(\n          this.value().city,\n          this.#portal,\n          this.transport()\n        ),\n        showCityOnMap: showCityOnMapAction(this.value().city, this.#portal),\n      }\n    );\n  }\n\n  build(): void {\n    const cityBuild = this.value();\n\n    assetStore\n      .get('./assets/city/production.png')\n      .then((asset) =>\n        this.append(\n          s(\n            `<button class=\"large cityBuild\" title=\"What would you like to build in ${\n              cityBuild.city.name\n            }?\"><img src=\"${asset!.uri}\"></button>`\n          )\n        )\n      );\n  }\n\n  value(): CityBuildObject {\n    return super.value() as CityBuildObject;\n  }\n}\n\nexport default CityBuild;\n", "import {\n  City as CityData,\n  City,\n  CityBuild,\n  CityGrowth,\n  PlayerResearch,\n  Yield,\n} from '../../types';\nimport {\n  knownGroupLookup,\n  knownGroups,\n  knownIcons,\n  reduceKnownYield,\n  reduceKnownYields,\n} from '../../lib/yieldMap';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\n\nexport const buildTurns = (city: City) =>\n  turnsLeft(city.build, city.yields, 'Production');\n\nexport const growthTurns = (city: City) =>\n  turnsLeft(city.growth, city.yields, 'Food');\n\nexport const renderPopulation = (\n  city: CityData,\n  yields: Yield[] = city.yields\n): Node => {\n  const growth = city.growth,\n    mask = parseInt(city.name.replace(/[^a-z]/gi, ''), 36).toString(2),\n    state = new Array(growth.size).fill(1),\n    population = s('<div class=\"population\"></div>');\n\n  let [happiness, unhappiness] = reduceKnownYields(\n      yields,\n      'Happiness',\n      'Unhappiness'\n    ),\n    currentIndex = state.length - 1;\n\n  while (unhappiness > 0 && currentIndex > -1) {\n    state[currentIndex--] = 0;\n    unhappiness--;\n  }\n\n  currentIndex = 0;\n\n  while (happiness > 0 && currentIndex < state.length) {\n    if (state[currentIndex] === 0) {\n      state[currentIndex]++;\n      happiness--;\n    }\n\n    if (state[currentIndex] === 1) {\n      state[currentIndex++]++;\n      happiness--;\n    }\n\n    if (state[currentIndex] === 2) {\n      currentIndex++;\n    }\n  }\n\n  state.forEach((status, index) =>\n    assetStore\n      .getScaled(\n        `./assets/city/people_${['unhappy', 'content', 'happy'][status]}_${\n          ['f', 'm'][parseInt(mask[index % mask.length], 10)]\n        }.png`,\n        2\n      )\n      .then((image) =>\n        population.append(\n          s(\n            '<span class=\"citizen\"></span>',\n            s(`<img src=\"${image.toDataURL('image/png')}\">`)\n          )\n        )\n      )\n  );\n\n  return population;\n};\n\nexport const renderProgress = (\n  cityData: CityGrowth | CityBuild | PlayerResearch,\n  yields: Yield[],\n  yieldName: string\n) =>\n  `Progress ${cityData.progress.value} / ${cityData.cost.value} (${turnsText(\n    turnsLeft(cityData, yields, yieldName)\n  )})`;\n\nexport const turnsLeft = (\n  data: CityGrowth | CityBuild | PlayerResearch,\n  yields: Yield[],\n  yieldName: string\n) =>\n  Math.max(\n    1,\n    Math.ceil(\n      (data.cost.value - data.progress.value) /\n        reduceKnownYield(yields, yieldName)\n    )\n  );\n\nexport const turnsText = (turns: number) =>\n  turns + ' turn' + (turns === 1 ? '' : 's');\n\nexport const yieldData = (city: CityData, yieldName: string) =>\n  city.yields.reduce(\n    ([total, used, free], cityYield) => {\n      const isKnown = knownGroupLookup[yieldName]?.includes(cityYield._);\n\n      if (isKnown && cityYield.value > 0) {\n        total += cityYield.value;\n      }\n\n      if (isKnown && cityYield.value < 0) {\n        used += cityYield.value;\n      }\n\n      if (isKnown) {\n        free += cityYield.value;\n      }\n\n      return [total, used, free];\n    },\n    [0, 0, 0]\n  );\n\nexport const yieldImages = (cityYield: { _: string; value: number }): Node[] =>\n  new Array(Math.trunc(Math.abs(cityYield.value))).fill(0).map(() => {\n    const icon = s('<span class=\"yield-icon\"></span>');\n\n    assetStore\n      .getScaled(`./assets/${knownIcons[knownGroups[cityYield._]]}`, 2)\n      .then((image) =>\n        icon.append(s(`<img src=\"${image.toDataURL('image/png')}\">`))\n      );\n\n    return icon;\n  });\n", "import { s } from '@dom111/element';\n\nexport let preloadContainer: HTMLElement;\n\nexport const setPreloadContainer = (preloadContainerElement: HTMLElement) =>\n  (preloadContainer = preloadContainerElement);\n\nexport const getPreloadedImage = (path: string): CanvasImageSource => {\n  const image = preloadContainer.querySelector(`[data-path$=\"${path}.png\"]`);\n\n  if (image === null) {\n    console.error(`Missing image: ${path}.`);\n\n    return s<HTMLCanvasElement>('<canvas></canvas>');\n  }\n\n  return image as HTMLImageElement;\n};\n\nexport default getPreloadedImage;\n", "import { s } from '@dom111/element';\n\nexport const replaceColours = (\n  image: CanvasImageSource,\n  source: string[],\n  replacement: string[]\n) => {\n  const canvas = s<HTMLCanvasElement>('<canvas></canvas>'),\n    context = canvas.getContext('2d')!;\n\n  canvas.width = image.width as number;\n  canvas.height = image.height as number;\n\n  context.drawImage(image, 0, 0, image.width as number, image.height as number);\n\n  const imageData = context.getImageData(0, 0, canvas.width, canvas.height),\n    getColor = (input: string | number[]) => {\n      let match: RegExpMatchArray | null = null,\n        color: { r: number; g: number; b: number; a: number } = {\n          r: 0,\n          g: 0,\n          b: 0,\n          a: 0,\n        };\n\n      if (typeof input === 'string') {\n        if (\n          (match = input.match(\n            /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1], 16),\n            g: parseInt(match[2], 16),\n            b: parseInt(match[3], 16),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1] + match[1], 16),\n            g: parseInt(match[2] + match[2], 16),\n            b: parseInt(match[3] + match[3], 16),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1]),\n            g: parseInt(match[2]),\n            b: parseInt(match[3]),\n            a: 1,\n          };\n        } else if (\n          (match = input.match(\n            /^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)\\s*\\)\\s*$/\n          )) !== null\n        ) {\n          color = {\n            r: parseInt(match[1]),\n            g: parseInt(match[2]),\n            b: parseInt(match[3]),\n            a: parseFloat(match[4] ?? 1),\n          };\n        }\n      } else if ('length' in input) {\n        color = {\n          r: input[0] || 0,\n          g: input[1] || 0,\n          b: input[2] || 0,\n          a: input[3] || 1,\n        };\n      }\n\n      return color;\n    };\n\n  let sourceColors = source.map(getColor),\n    replaceColors = replacement.map(getColor);\n\n  for (let i = 0; i < imageData.data.length; i += 4) {\n    sourceColors.forEach((color, n) => {\n      if (\n        imageData.data[i] === color.r &&\n        imageData.data[i + 1] === color.g &&\n        imageData.data[i + 2] === color.b &&\n        imageData.data[i + 3] === color.a * 255\n      ) {\n        imageData.data[i] = (replaceColors[n] || replaceColors[0]).r;\n        imageData.data[i + 1] = (replaceColors[n] || replaceColors[0]).g;\n        imageData.data[i + 2] = (replaceColors[n] || replaceColors[0]).b;\n        imageData.data[i + 3] = Math.trunc(\n          (replaceColors[n] || replaceColors[0]).a * 255\n        );\n      }\n    });\n  }\n\n  context.putImageData(imageData, 0, 0);\n\n  return canvas;\n};\n\nexport default replaceColours;\n", "import { NeighbourDirection, Tile } from '../types';\nimport {\n  getPreloadedImage,\n  setPreloadContainer,\n} from '../lib/getPreloadedImage';\nimport World from './World';\nimport replaceColours from '../lib/replaceColours';\nimport { s } from '@dom111/element';\n\nexport interface IMap {\n  context(): CanvasRenderingContext2D;\n  render(...args: any[]): void;\n  scale(): number;\n  tileSize(): number;\n  world(): World;\n}\n\ninterface DrawImageOptions {\n  augment?: (image: CanvasImageSource) => CanvasImageSource;\n  offsetX?: number;\n  offsetY?: number;\n}\n\nexport class Map implements IMap {\n  #canvas: HTMLCanvasElement;\n  #context: CanvasRenderingContext2D;\n  #visible: boolean = true;\n  #scale: number;\n  #tileSize: number;\n  #world: World;\n\n  constructor(\n    world: World,\n    scale: number = 2,\n    tileSize: number = 16,\n    canvas: HTMLCanvasElement = s<HTMLCanvasElement>('<canvas></canvas>')\n  ) {\n    this.#canvas = canvas;\n    this.#world = world;\n    this.#tileSize = tileSize;\n    this.#scale = scale;\n\n    this.setCanvasSize();\n\n    this.#context = this.#canvas.getContext('2d') as CanvasRenderingContext2D;\n    setPreloadContainer(document.querySelector('#preload')!);\n  }\n\n  canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  clear(): void {\n    this.context().clearRect(0, 0, this.canvas().width, this.canvas().height);\n  }\n\n  context(): CanvasRenderingContext2D {\n    return this.#context;\n  }\n\n  render(tiles: Tile[] = this.world().tiles()): void {\n    this.clear();\n\n    tiles.forEach(({ x, y }: Tile) => this.renderTile(this.world().get(x, y)));\n  }\n\n  renderTile({ x, y }: Tile): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    this.context().clearRect(offsetX, offsetY, size, size);\n  }\n\n  scale(): number {\n    return this.#scale;\n  }\n\n  tileSize(): number {\n    return this.#tileSize * this.#scale;\n  }\n\n  update(tilesToUpdate: Tile[]): void {\n    tilesToUpdate.forEach(({ x, y }: Tile) =>\n      this.renderTile(this.world().get(x, y))\n    );\n  }\n\n  world(): World {\n    return this.#world;\n  }\n\n  protected drawImage(\n    path: string,\n    x: number,\n    y: number,\n    options: DrawImageOptions = {}\n  ): void {\n    const size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.getPreloadedImage(path);\n\n    this.putImage(\n      options.augment ? options.augment(image) : image,\n      offsetX + (options.offsetX ?? 0),\n      offsetY + (options.offsetY ?? 0)\n    );\n  }\n\n  protected filterNeighbours(\n    tile: Tile,\n    filter: (tile: Tile) => boolean,\n    directions: NeighbourDirection[] = ['n', 'e', 's', 'w']\n  ): NeighbourDirection[] {\n    return directions.filter((direction: NeighbourDirection): boolean =>\n      filter(this.#world.getNeighbour(tile, direction))\n    );\n  }\n\n  protected getPreloadedImage(path: string): CanvasImageSource {\n    return getPreloadedImage(path);\n  }\n\n  protected putImage(\n    image: CanvasImageSource,\n    offsetX: number,\n    offsetY: number\n  ): void {\n    this.#context.imageSmoothingEnabled = false;\n\n    this.#context.drawImage(\n      image,\n      offsetX,\n      offsetY,\n      (image.width as number) * this.#scale,\n      (image.height as number) * this.#scale\n    );\n  }\n\n  protected replaceColours(\n    image: CanvasImageSource,\n    source: string[],\n    replacement: string[]\n  ) {\n    return replaceColours(image, source, replacement);\n  }\n\n  protected setCanvasSize(): void {\n    this.#canvas.height = this.#world.height() * this.tileSize();\n    this.#canvas.width = this.#world.width() * this.tileSize();\n    // this.#canvas.setAttribute('height', this.#canvas.height.toString());\n    // this.#canvas.setAttribute('width',this.#canvas.width.toString());\n  }\n\n  isVisible(): boolean {\n    return this.#visible;\n  }\n\n  setVisible(visible: boolean): void {\n    this.#visible = visible;\n  }\n}\n\nexport default Map;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class Cities extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.city) {\n      const city = tile.city,\n        player = city.player,\n        civilization = player.civilization,\n        [colors] = civilization.attributes.filter(\n          (attribute) => attribute.name === 'colors'\n        );\n\n      if (tile.units.length > 0) {\n        this.context().fillStyle = '#000';\n        this.context().fillRect(offsetX, offsetY, size, size);\n      }\n\n      this.context().fillStyle = colors.value[0];\n      this.context().fillRect(\n        offsetX + this.scale(),\n        offsetY + this.scale(),\n        size - this.scale() * 2,\n        size - this.scale() * 2\n      );\n\n      this.drawImage(`map/city`, x, y, {\n        augment: (image) =>\n          this.replaceColours(\n            image,\n            // To come from theme manifest\n            ['#000'],\n            [colors.value[1]]\n          ),\n        offsetX: this.scale(),\n        offsetY: this.scale(),\n      });\n    }\n  }\n}\n\nexport default Cities;\n", "import {\n  NotificationWindow,\n  NotificationWindowOptions,\n} from './NotificationWindow';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\n\nexport interface ConfirmationWindowOptions extends NotificationWindowOptions {\n  okLabel?: string;\n  cancelLabel?: string;\n}\n\nexport class ConfirmationWindow extends NotificationWindow {\n  constructor(\n    title: string,\n    details: string,\n    onOK: () => void,\n    options: ConfirmationWindowOptions = {}\n  ) {\n    const confirmationButton = h(\n      s(`<button>${options.okLabel ?? 'OK'}</button>`),\n      {\n        click: () => {\n          onOK();\n\n          this.close();\n        },\n        keydown: (event) => {\n          if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            event.stopPropagation();\n\n            onOK();\n\n            this.close();\n          }\n        },\n      }\n    );\n\n    super(\n      title,\n      s(\n        `<div class=\"content\"><p>${details}</p></div>`,\n        s(\n          '<footer></footer>',\n          confirmationButton,\n          h(s(`<button>${options.cancelLabel ?? 'Cancel'}</button>`), {\n            click: () => this.close(),\n            keydown: (event) => {\n              if (event.key === 'Enter' || event.key === ' ') {\n                event.preventDefault();\n                event.stopPropagation();\n\n                this.close();\n              }\n            },\n          })\n        )\n      ),\n      {\n        ...options,\n        queue: false,\n      }\n    );\n\n    confirmationButton.focus();\n  }\n}\n\nexport default ConfirmationWindow;\n", "import { GameData, PlainObject } from './types';\nimport { ObjectMap } from './lib/reconstituteData';\n\nexport type dataUpdatedEvent = CustomEvent<{ data: PlainObject }>;\nexport type dataUpdatedHandler = (data: GameData) => void;\nexport type patchDataReceivedEvent = CustomEvent<{ value: ObjectMap }>;\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    dataupdated: dataUpdatedEvent;\n    patchdatareceived: patchDataReceivedEvent;\n  }\n}\n\nexport class DataObserver {\n  #handler: (event: patchDataReceivedEvent) => void;\n  #ids: string[] = [];\n\n  constructor(ids: string[], handler: dataUpdatedHandler) {\n    this.setIds(ids);\n\n    this.#handler = (event) => {\n      const { detail } = event,\n        objects = detail.value.objects;\n\n      if (!objects) {\n        return;\n      }\n\n      if (this.#ids.some((id) => id in objects)) {\n        document.addEventListener(\n          'dataupdated',\n          (event) => handler(event.detail.data as GameData),\n          {\n            once: true,\n          }\n        );\n      }\n    };\n\n    document.addEventListener('patchdatareceived', this.#handler);\n  }\n\n  dispose(): void {\n    document.removeEventListener('patchdatareceived', this.#handler);\n  }\n\n  setIds(ids: string[]): void {\n    this.#ids.splice(0, this.#ids.length, ...ids);\n  }\n}\n\nexport default DataObserver;\n", "import { NeighbourDirection, Tile } from '../../types';\nimport { Map, IMap } from '../Map';\n\nexport class TerrainAbstract extends Map implements IMap {\n  update(tilesToUpdate: Tile[]): void {\n    // we need to redraw the surrounding tiles to prevent the hidden terrain showing up incorrectly.\n    const extendedTilesToUpdate = [...tilesToUpdate];\n\n    tilesToUpdate.forEach((tile) => {\n      (\n        ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'] as NeighbourDirection[]\n      ).forEach((direction) => {\n        const target = this.world().getNeighbour(tile, direction);\n\n        if (extendedTilesToUpdate.includes(target)) {\n          return;\n        }\n\n        extendedTilesToUpdate.push(target);\n      });\n    });\n\n    return super.update(extendedTilesToUpdate);\n  }\n}\n\nexport default TerrainAbstract;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Feature extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.terrain.features.length) {\n      tile.terrain.features.forEach((feature) =>\n        feature._ === 'Shield'\n          ? this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y, {\n              offsetX: 4 * this.scale(),\n              offsetY: 4 * this.scale(),\n            })\n          : this.drawImage(`terrain/${feature._.toLowerCase()}`, x, y)\n      );\n    }\n  }\n}\n\nexport default Feature;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Fog extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    this.filterNeighbours(tile, (tile) => tile.terrain._ === 'Unknown').forEach(\n      (direction) => this.drawImage(`map/fog_${direction}`, x, y)\n    );\n  }\n}\n\nexport default Fog;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\ntype Improvement = 'Mine' | 'Pollution' | 'Railroad' | 'Road';\n\ntype ImprovementLookup = {\n  [key in Improvement]: boolean;\n};\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const improvements = tile.improvements.reduce(\n      (\n        state: ImprovementLookup,\n        improvement: EntityInstance\n      ): ImprovementLookup => {\n        const improvementType = improvement._ as Improvement;\n\n        if (!(improvementType in state)) {\n          return state;\n        }\n\n        state[improvementType] = true;\n\n        return state;\n      },\n      {\n        Mine: false,\n        Road: false,\n        Railroad: false,\n        Pollution: false,\n      }\n    );\n\n    (['Mine', 'Pollution'] as (keyof ImprovementLookup)[]).forEach(\n      (improvementName: keyof ImprovementLookup) => {\n        if (improvements[improvementName]) {\n          this.drawImage(`improvements/${improvementName.toLowerCase()}`, x, y);\n        }\n      }\n    );\n\n    // Can't have Railroad without Road!\n    if (improvements.Road) {\n      const neighbouringRoad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean => improvement._ === 'Road'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        ),\n        neighbouringRailroad = this.filterNeighbours(\n          tile,\n          (adjoiningTile: Tile): boolean =>\n            !!adjoiningTile.city ||\n            adjoiningTile.improvements.some(\n              (improvement: EntityInstance): boolean =>\n                improvement._ === 'Railroad'\n            ),\n          ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']\n        );\n\n      neighbouringRoad.forEach((direction: NeighbourDirection): void => {\n        if (\n          !improvements.Railroad ||\n          !neighbouringRailroad.includes(direction)\n        ) {\n          this.drawImage(`improvements/road_${direction}`, x, y);\n        }\n      });\n\n      if (improvements.Railroad) {\n        neighbouringRailroad.forEach((direction: NeighbourDirection): void =>\n          this.drawImage(`improvements/railroad_${direction}`, x, y)\n        );\n      }\n\n      if (neighbouringRoad.length === 0 && neighbouringRailroad.length === 0) {\n        const size = this.tileSize(),\n          offsetX = x * size,\n          offsetY = y * size,\n          center = Math.floor(this.tileSize() / 2) - this.scale();\n\n        this.context().fillStyle = improvements.Railroad ? '#000' : '#8c5828';\n        this.context().rect(\n          offsetX + center,\n          offsetY + center,\n          this.scale() * 2,\n          this.scale() * 2\n        );\n        this.context().fill();\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import { EntityInstance, NeighbourDirection, Tile } from '../../types';\nimport TerrainAbstract from './TerrainAbstract';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile,\n      hasIrrigation = tile.improvements.some(\n        (improvement: EntityInstance): boolean => improvement._ === 'Irrigation'\n      );\n\n    if (!hasIrrigation) {\n      return;\n    }\n\n    this.drawImage(`improvements/irrigation`, x, y);\n  }\n}\n\nexport default Terrain;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\nimport { s } from '@dom111/element';\n\nexport class Land extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    if (tile.isLand) {\n      this.drawImage('terrain/land', x, y);\n    } else if (tile.isWater) {\n      this.drawImage('terrain/ocean', x, y);\n\n      if (tile.isCoast) {\n        const sprite = this.getPreloadedImage(\n            'terrain/coast_sprite'\n          ) as HTMLImageElement,\n          // formula from: http://forums.civfanatics.com/showpost.php?p=13507808&postcount=40\n          // Build a bit mask of all 8 surrounding tiles, setting the bit if the tile is not an\n          // ocean tile. Starting with the tile to the left as the least significant bit and\n          // going clockwise\n          bitmask =\n            (this.world().getNeighbour(tile, 'w').isLand ? 1 : 0) |\n            (this.world().getNeighbour(tile, 'nw').isLand ? 2 : 0) |\n            (this.world().getNeighbour(tile, 'n').isLand ? 4 : 0) |\n            (this.world().getNeighbour(tile, 'ne').isLand ? 8 : 0) |\n            (this.world().getNeighbour(tile, 'e').isLand ? 16 : 0) |\n            (this.world().getNeighbour(tile, 'se').isLand ? 32 : 0) |\n            (this.world().getNeighbour(tile, 's').isLand ? 64 : 0) |\n            (this.world().getNeighbour(tile, 'sw').isLand ? 128 : 0);\n\n        if (bitmask > 0) {\n          // There are at least one surrounding tile that is not ocean, so we need to render\n          // coast. We divide the tile into four 8x8 subtiles and for each of these we want\n          // a 3 bit bitmask of the surrounding tiles. We do this by looking at the 3 least\n          // significant bits for the top left subtile and shift the mask to the right as we\n          // are going around the tile. This way we are \"rotating\" our bitmask. The result\n          // are our x offsets into ter257.pic\n          let topLeftSubtileOffset = bitmask & 7,\n            topRightSubtileOffset = (bitmask >> 2) & 7,\n            bottomRightSubtileOffset = (bitmask >> 4) & 7,\n            bottomLeftSubtileOffset =\n              ((bitmask >> 6) & 7) | ((bitmask & 1) << 2);\n\n          const image = s<HTMLCanvasElement>(\n              '<canvas height=\"16\" width=\"16\"></canvas>'\n            ),\n            imageContext = image.getContext('2d') as CanvasRenderingContext2D;\n\n          imageContext.drawImage(\n            sprite,\n            topLeftSubtileOffset << 4,\n            0,\n            8,\n            8,\n            0,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (topRightSubtileOffset << 4) + 8,\n            0,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            (bottomRightSubtileOffset << 4) + 8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8,\n            8\n          );\n          imageContext.drawImage(\n            sprite,\n            bottomLeftSubtileOffset << 4,\n            8,\n            8,\n            8,\n            0,\n            8,\n            8,\n            8\n          );\n\n          this.putImage(image, offsetX, offsetY);\n        }\n\n        this.filterNeighbours(\n          tile,\n          (tile: Tile): boolean => tile.terrain._ === 'River'\n        ).forEach((direction) =>\n          this.drawImage(`terrain/river_mouth_${direction}`, x, y)\n        );\n      }\n    }\n  }\n}\n\nexport default Land;\n", "import { Coordinate, Tile, Unit } from '../types';\nimport { EventEmitter } from '@dom111/typed-event-emitter';\nimport Map from './Map';\nimport Transport from '../Transport';\nimport World from './World';\nimport { s } from '@dom111/element';\nimport { IConstructor } from '@civ-clone/core-registry/Registry';\n\nexport interface IPortal {\n  build(updatedTiles: Tile[]): void;\n  canvas(): HTMLCanvasElement;\n  center(): Coordinate;\n  getLayer(LayerType: typeof Map): Map | null;\n  getLayers(LayerType: typeof Map): Map[];\n  isVisible(x: number, y: number): boolean;\n  playerId(): string | null;\n  render(): void;\n  scale(): number;\n  setCenter(x: number, y: number): void;\n  tileSize(): number;\n  transport(): Transport;\n  visibleBounds(): [number, number, number, number];\n  visibleRange(): [Coordinate, Coordinate];\n  world(): World;\n}\n\nexport interface PortalSettings {\n  playerId: string | null;\n  scale: number;\n  tileSize: number;\n}\n\ntype PortalOptions = {\n  [K in keyof PortalSettings]?: PortalSettings[K];\n};\n\nconst defaultPortalOptions: PortalSettings = {\n  playerId: null,\n  scale: 2,\n  tileSize: 16,\n};\n\nexport class Portal\n  extends EventEmitter<{\n    ['activate-unit']: [Unit];\n    ['focus-changed']: [number, number];\n  }>\n  implements IPortal\n{\n  #canvas: HTMLCanvasElement;\n  #center: Coordinate = { x: 0, y: 0 };\n  #context: CanvasRenderingContext2D;\n  #layers: Map[] = [];\n  #playerId: string | null = null;\n  #scale: number;\n  #tileSize: number;\n  #transport: Transport;\n  #world: World;\n\n  constructor(\n    world: World,\n    transport: Transport,\n    canvas: HTMLCanvasElement = s<HTMLCanvasElement>('<canvas></canvas>'),\n    options: PortalOptions = {\n      playerId: null,\n      scale: 2,\n    },\n    ...layers: (typeof Map)[]\n  ) {\n    const settings: PortalSettings = {\n      ...defaultPortalOptions,\n      ...options,\n    };\n\n    super();\n\n    this.#world = world;\n    this.#canvas = canvas;\n    this.#playerId = settings.playerId;\n    this.#tileSize = settings.tileSize;\n    this.#scale = settings.scale;\n    this.#transport = transport;\n\n    layers.forEach((MapType) =>\n      this.#layers.push(new MapType(this.#world, this.scale(), this.#tileSize))\n    );\n\n    this.#context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    this.bindEvents();\n  }\n\n  protected bindEvents(): void {}\n\n  build(updatedTiles: Tile[]): void {\n    this.#layers.forEach((layer: Map) => layer.update(updatedTiles));\n  }\n\n  canvas(): HTMLCanvasElement {\n    return this.#canvas;\n  }\n\n  center(): Coordinate {\n    return this.#center;\n  }\n\n  getLayer<T extends Map>(LayerType: IConstructor<T>): T | null {\n    return (this.getLayers(LayerType).shift() as T) ?? null;\n  }\n\n  getLayers(LayerType: typeof Map): Map[] {\n    return this.#layers.filter((layer) => layer instanceof LayerType);\n  }\n\n  isVisible(x: number, y: number): boolean {\n    const visibleHorizontal = Math.floor(this.#canvas.width / this.tileSize()),\n      visibleVertical = Math.floor(this.#canvas.height / this.tileSize());\n\n    if (\n      visibleHorizontal >= this.#world.width() &&\n      visibleVertical >= this.#world.height()\n    ) {\n      return true;\n    }\n\n    const [xLowerBound, xUpperBound, yLowerBound, yUpperBound] =\n      this.visibleBounds();\n\n    // I _think_ this logic is correct now...\n    return (\n      (visibleHorizontal >= this.#world.width() ||\n        (xLowerBound > xUpperBound\n          ? x < xUpperBound || x > xLowerBound\n          : x < xUpperBound && x > xLowerBound)) &&\n      (visibleVertical >= this.#world.height() ||\n        (yLowerBound > yUpperBound\n          ? y < yUpperBound || y > yLowerBound\n          : y < yUpperBound && y > yLowerBound))\n    );\n  }\n\n  playerId(): string | null {\n    return this.#playerId;\n  }\n\n  render(): void {\n    const tileSize = this.tileSize(),\n      layerWidth = this.#world.width() * tileSize,\n      centerX = this.#center.x * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterX = Math.trunc(this.#canvas.width / 2),\n      layerHeight = this.#world.height() * tileSize,\n      centerY = this.#center.y * tileSize + Math.trunc(tileSize / this.scale()),\n      portalCenterY = Math.trunc(this.#canvas.height / 2);\n\n    let startX = portalCenterX - centerX,\n      endX = portalCenterX + layerWidth,\n      startY = portalCenterY - centerY,\n      endY = portalCenterY + layerHeight;\n\n    while (startX > 0) {\n      startX -= layerWidth;\n    }\n\n    while (startY > 0) {\n      startY -= layerHeight;\n    }\n\n    while (endX < this.#canvas.width) {\n      endX += layerWidth;\n    }\n\n    while (endY < this.#canvas.height) {\n      endY += layerHeight;\n    }\n\n    this.#context.fillStyle = '#000';\n    this.#context.fillRect(\n      0,\n      0,\n      Math.max(this.#world.width() * tileSize, this.#canvas.width),\n      Math.max(this.#world.height() * tileSize, this.#canvas.height)\n    );\n\n    for (let x = startX; x < endX; x += layerWidth) {\n      for (let y = startY; y < endY; y += layerHeight) {\n        this.#layers.forEach((layer) => {\n          if (!layer.isVisible()) {\n            return;\n          }\n\n          const canvas = layer.canvas();\n\n          this.#context.drawImage(canvas, x, y, canvas.width, canvas.height);\n        });\n      }\n    }\n  }\n\n  scale(): number {\n    return this.#scale;\n  }\n\n  setCenter(x: number, y: number): void {\n    this.#center.x = x;\n    this.#center.y = y;\n\n    this.render();\n\n    this.emit('focus-changed', x, y);\n  }\n\n  tileSize(): number {\n    return this.#tileSize * this.#scale;\n  }\n\n  transport(): Transport {\n    return this.#transport;\n  }\n\n  visibleBounds(): [number, number, number, number] {\n    const [\n      { x: xLowerBound, y: yLowerBound },\n      { x: xUpperBound, y: yUpperBound },\n    ] = this.visibleRange();\n\n    return [xLowerBound, xUpperBound, yLowerBound, yUpperBound];\n  }\n\n  visibleRange(): [Coordinate, Coordinate] {\n    const tileRangeX = Math.floor(\n        Math.floor(this.#canvas.width / this.tileSize()) / 2\n      ),\n      tileRangeY = Math.floor(\n        Math.floor(this.#canvas.height / this.tileSize()) / 2\n      );\n\n    return [\n      {\n        x:\n          (this.#center.x - tileRangeX + this.#world.width()) %\n          this.#world.width(),\n        y:\n          (this.#center.y - tileRangeY + this.#world.height()) %\n          this.#world.height(),\n      },\n      {\n        x: (this.#center.x + tileRangeX) % this.#world.width(),\n        y: (this.#center.y + tileRangeY) % this.#world.height(),\n      },\n    ];\n  }\n\n  rawVisibleRange(): [Coordinate, Coordinate] {\n    const tileRangeX = Math.floor(\n        Math.floor(this.#canvas.width / this.tileSize()) / 2\n      ),\n      tileRangeY = Math.floor(\n        Math.floor(this.#canvas.height / this.tileSize()) / 2\n      );\n\n    return [\n      {\n        x: this.#center.x - tileRangeX,\n        y: this.#center.y - tileRangeY,\n      },\n      {\n        x: this.#center.x + tileRangeX,\n        y: this.#center.y + tileRangeY,\n      },\n    ];\n  }\n\n  world(): World {\n    return this.#world;\n  }\n}\n\nexport default Portal;\n", "import {\n  City,\n  MilitaryUnhappiness,\n  Unit as UnitData,\n  UnitSupportFood,\n  UnitSupportProduction,\n  Yield,\n} from '../types';\nimport { Element, s } from '@dom111/element';\nimport Unit from './Unit';\nimport { yieldImages } from './lib/cityYields';\n\ntype YieldWithUnit = Yield & { unit: UnitData };\n\nexport class SupportedUnit extends Element {\n  constructor(\n    city: City,\n    unit: UnitData,\n    yieldsToInclude: string[] = [\n      'UnitSupportFood',\n      'UnitSupportProduction',\n      'MilitaryUnhappiness',\n    ]\n  ) {\n    super(\n      s(\n        '<span class=\"supported-unit\"></span>',\n        new Unit(unit),\n        ...city.yields\n          .filter((cityYield): cityYield is YieldWithUnit =>\n            yieldsToInclude.includes(cityYield._)\n          )\n          .filter((cityYield) => cityYield.unit.id === unit.id)\n          .flatMap((cityYield) => yieldImages(cityYield))\n      )\n    );\n  }\n}\n\nexport default SupportedUnit;\n", "import { Element, s } from '@dom111/element';\nimport { Unit as UnitData } from '../types';\nimport renderUnit from '../lib/renderUnit';\n\nexport class Unit extends Element {\n  #scale: number = 2;\n\n  constructor(unit: UnitData, scale: number = 2) {\n    super(s<HTMLCanvasElement>('<canvas width=\"32\" height=\"32\"></canvas>'));\n\n    this.#scale = scale;\n\n    this.build(unit);\n  }\n\n  build(unit: UnitData) {\n    const unitCanvas = renderUnit(unit),\n      context = this.element().getContext('2d')!,\n      sizeX = this.size(unitCanvas.width as number),\n      sizeY = this.size(unitCanvas.height as number),\n      offsetX = Math.floor((this.size(16) - sizeX) / 2),\n      offsetY = Math.floor((this.size(16) - sizeY) / 2);\n\n    context.imageSmoothingEnabled = false;\n\n    context.drawImage(unitCanvas, offsetX, offsetY, sizeX, sizeY);\n  }\n\n  element(): HTMLCanvasElement {\n    return super.element() as HTMLCanvasElement;\n  }\n\n  size(size: number): number {\n    return size * this.#scale;\n  }\n}\n\nexport default Unit;\n", "import { Unit } from '../types';\nimport getPreloadedImage from './getPreloadedImage';\nimport replaceColours from './replaceColours';\n\nconst busyLookup: { [key: string]: string } = {\n  BuildingIrrigation: 'I',\n  BuildingMine: 'M',\n  BuildingRoad: 'R',\n  BuildingRailroad: 'RR',\n  // 'ClearingForest': 'CF',\n  // 'ClearingJungle': 'CJ',\n  // 'ClearingSwamp': 'CS',\n  // 'Fortifying': 'F',\n  // 'Sleeping': 'S',\n  // 'PlantingForest': 'PF',\n};\n\nexport const renderUnit = (\n  unit: Unit,\n  // scale: number = 2,\n  tileSize: number = 16\n): CanvasImageSource => {\n  const player = unit.player,\n    civilization = player.civilization,\n    [colors] = civilization.attributes.filter(\n      (attribute) => attribute.name === 'colors'\n    ),\n    unitCanvas = replaceColours(\n      getPreloadedImage(`units/${unit._.toLowerCase()}`),\n      // To come from theme manifest\n      ['#60E064', '#2C7800'],\n      colors.value\n    ),\n    context = unitCanvas.getContext('2d')!;\n\n  context.imageSmoothingEnabled = false;\n\n  if (unit.improvements?.some((improvement) => improvement._ === 'Fortified')) {\n    context.drawImage(getPreloadedImage('map/fortify'), 0, 0);\n  }\n\n  if (unit.busy) {\n    // if (unit.busy._ === 'Sleeping') {} // TODO: fade the unit like in Civ 1\n    const sizeOffsetX = tileSize / 2,\n      sizeOffsetY = tileSize * 0.75,\n      identifier =\n        busyLookup[unit.busy._] ?? unit.busy._.replace(/[a-z]+/g, '');\n\n    context.font = `bold 8px sans-serif`;\n    context.fillStyle = 'black';\n    context.textAlign = 'center';\n    context.fillText(identifier, sizeOffsetX, sizeOffsetY);\n    context.fillStyle = 'white';\n    context.fillText(identifier, sizeOffsetX, sizeOffsetY);\n  }\n\n  return unitCanvas;\n};\n\nexport default renderUnit;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    const adjoining = this.filterNeighbours(\n      tile,\n      (adjoiningTile: Tile): boolean =>\n        (tile.terrain._ === 'River' && adjoiningTile.isWater) ||\n        tile.terrain._ === adjoiningTile.terrain._\n    ).join('');\n\n    // Ocean is covered with the land/ocean stuff above and if we re-do here, we lose the coastline\n    if (tile.terrain._ !== 'Ocean') {\n      if (adjoining) {\n        this.drawImage(\n          `terrain/${tile.terrain._.toLowerCase()}_${adjoining}`,\n          x,\n          y\n        );\n      } else {\n        this.drawImage(`terrain/${tile.terrain._.toLowerCase()}`, x, y);\n      }\n    }\n  }\n}\n\nexport default Terrain;\n", "import SelectionWindow from './SelectionWindow';\nimport Transport from '../Transport';\nimport { Unit } from '../types';\n\nexport class UnitSelectionWindow extends SelectionWindow {\n  constructor(\n    units: Unit[],\n    transport: Transport,\n    onComplete: (unit: Unit) => void = () => {}\n  ) {\n    super(\n      // TODO: i18n\n      'Activate unit',\n      units.map((unit: Unit) => ({\n        label:\n          unit._ +\n          ' [' +\n          (unit.city?.name ?? 'NONE') +\n          ']' +\n          (unit.busy ? ` (${unit.busy!._})` : ''),\n        value: unit.id,\n      })),\n      (selection: string) => {\n        const [unit] = units.filter((tileUnit) => tileUnit.id === selection);\n\n        if (!unit) {\n          return;\n        }\n\n        if (!unit.active) {\n          transport.send('action', {\n            name: 'InactiveUnit',\n            id: selection,\n          });\n\n          return;\n        }\n\n        onComplete(unit);\n      },\n      null\n    );\n  }\n}\n\nexport default UnitSelectionWindow;\n", "import { NeighbourDirection, Tile, World as WorldData } from '../types';\n\nexport class World {\n  #unknown = (x: number, y: number): Tile => ({\n    _: 'Tile',\n    __: ['Tile', 'DataObject'],\n    id: `Tile-${x}--${y}`,\n    city: null,\n    goodyHut: null,\n    improvements: [],\n    isCoast: false,\n    isLand: false,\n    isWater: false,\n    terrain: {\n      _: 'Unknown',\n      __: ['Unknown', 'Terrain', 'DataObject'],\n      id: `UnknownTerrain-${x}--${y}`,\n      features: [],\n    },\n    units: [],\n    workedBy: null,\n    x,\n    y,\n    yields: [],\n  });\n  #lookupCache: { [key: string]: number } = {};\n  #tiles: Tile[];\n  #height: number;\n  #width: number;\n\n  constructor(world: WorldData) {\n    this.#height = world.height;\n    this.#width = world.width;\n    this.#tiles = world.tiles || [];\n  }\n\n  get(x: number, y: number): Tile {\n    while (x < 0) {\n      x += this.#width;\n    }\n\n    while (y < 0) {\n      y += this.#height;\n    }\n\n    while (x >= this.#width) {\n      x -= this.#width;\n    }\n\n    while (y >= this.#height) {\n      y -= this.#height;\n    }\n\n    const key = [x, y].toString();\n\n    if (!(key in this.#lookupCache)) {\n      const index = this.#tiles.findIndex(\n        (tile) => tile.x === x && tile.y === y\n      );\n\n      if (index === -1) {\n        return this.#unknown(x, y);\n      }\n\n      this.#lookupCache[key] = index;\n    }\n\n    return this.#tiles[this.#lookupCache[key]];\n  }\n\n  getNeighbour(tile: Tile, direction: NeighbourDirection): Tile {\n    if (direction === 'n') {\n      return this.get(tile.x, tile.y - 1);\n    }\n\n    if (direction === 'ne') {\n      return this.get(tile.x + 1, tile.y - 1);\n    }\n\n    if (direction === 'e') {\n      return this.get(tile.x + 1, tile.y);\n    }\n\n    if (direction === 'se') {\n      return this.get(tile.x + 1, tile.y + 1);\n    }\n\n    if (direction === 's') {\n      return this.get(tile.x, tile.y + 1);\n    }\n\n    if (direction === 'sw') {\n      return this.get(tile.x - 1, tile.y + 1);\n    }\n\n    if (direction === 'w') {\n      return this.get(tile.x - 1, tile.y);\n    }\n\n    if (direction === 'nw') {\n      return this.get(tile.x - 1, tile.y - 1);\n    }\n\n    throw new TypeError('Invalid direction.');\n  }\n\n  height(): number {\n    return this.#height;\n  }\n\n  tiles(): Tile[] {\n    return this.#tiles;\n  }\n\n  width(): number {\n    return this.#width;\n  }\n\n  setTiles(tiles: Tile[]): void {\n    this.#tiles = tiles;\n  }\n}\n\nexport default World;\n", "import Map from '../Map';\nimport { Tile } from '../../types';\n\nexport class Yields extends Map {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      total = tile.yields.reduce(\n        (total, tileYield) => total + tileYield.value,\n        0\n      ),\n      // TODO: use a more effective sort than this, this only works by luck (Food -> Production -> Trade)\n      yields = tile.yields.sort(\n        (a, b) => a._.charCodeAt(0) - b._.charCodeAt(0)\n      );\n\n    let i = 0;\n\n    if (total < 5) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 7) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 3, offsetY],\n        [offsetX + (size / 3) * 2, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 3, offsetY + size / 2],\n        [offsetX + (size / 3) * 2, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            offsets[i][0],\n            offsets[i++][1]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 9) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 4, offsetY],\n        [offsetX + (size / 4) * 2, offsetY],\n        [offsetX + (size / 4) * 3, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 4, offsetY + size / 2],\n        [offsetX + (size / 4) * 2, offsetY + size / 2],\n        [offsetX + (size / 4) * 3, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    if (total < 11) {\n      const offsets: [number, number][] = [\n        [offsetX, offsetY],\n        [offsetX + size / 5, offsetY],\n        [offsetX + (size / 5) * 2, offsetY],\n        [offsetX + (size / 5) * 3, offsetY],\n        [offsetX + (size / 5) * 4, offsetY],\n        [offsetX, offsetY + size / 2],\n        [offsetX + size / 5, offsetY + size / 2],\n        [offsetX + (size / 5) * 2, offsetY + size / 2],\n        [offsetX + (size / 5) * 3, offsetY + size / 2],\n        [offsetX + (size / 5) * 4, offsetY + size / 2],\n      ];\n\n      yields.forEach((tileYield) => {\n        for (let n = 0; n < tileYield.value; n++) {\n          this.putImage(\n            this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n            ...offsets[i++]\n          );\n        }\n      });\n\n      return;\n    }\n\n    const offsets: [number, number][] = [\n      [offsetX, offsetY],\n      [offsetX + size / 6, offsetY],\n      [offsetX + (size / 6) * 2, offsetY],\n      [offsetX + (size / 6) * 3, offsetY],\n      [offsetX + (size / 6) * 4, offsetY],\n      [offsetX + (size / 6) * 5, offsetY],\n      [offsetX, offsetY + size / 2],\n      [offsetX + size / 6, offsetY + size / 2],\n      [offsetX + (size / 6) * 2, offsetY + size / 2],\n      [offsetX + (size / 6) * 3, offsetY + size / 2],\n      [offsetX + (size / 6) * 4, offsetY + size / 2],\n      [offsetX + (size / 6) * 5, offsetY + size / 2],\n    ];\n\n    yields.forEach((tileYield) => {\n      for (let n = 0; n < tileYield.value; n++) {\n        this.putImage(\n          this.getPreloadedImage(`city/${tileYield._.toLowerCase()}`),\n          ...offsets[i++]\n        );\n      }\n    });\n  }\n}\nexport default Yields;\n", "export class LocaleProvider {\n  #defaultLocale: string;\n  #locale: string;\n  #locales: string[];\n\n  constructor(\n    locale: string = navigator.language,\n    locales: string[] = [...navigator.languages],\n    defaultLocale = 'en'\n  ) {\n    this.#locale = locale || defaultLocale;\n    this.#locales =\n      locales.length > 0\n        ? locales.includes(defaultLocale)\n          ? locales\n          : [...locales, defaultLocale]\n        : locale\n        ? [locale, defaultLocale]\n        : [defaultLocale];\n    this.#defaultLocale = defaultLocale;\n  }\n\n  locale(): string {\n    return this.#locale;\n  }\n\n  locales(): string[] {\n    return this.#locales;\n  }\n\n  list(list: Iterable<string>, options?: Intl.ListFormatOptions): string {\n    const formatter = new Intl.ListFormat(this.locales(), {\n      style: 'long',\n      type: 'conjunction',\n      ...options,\n    });\n\n    return formatter.format(list);\n  }\n\n  number(number: number, options?: Intl.NumberFormatOptions): string {\n    const formatter = new Intl.NumberFormat(this.locales(), {\n      maximumFractionDigits: 0,\n      ...options,\n    });\n\n    return formatter.format(number);\n  }\n\n  percent(number: number, options?: Intl.NumberFormatOptions): string {\n    return this.number(number, {\n      style: 'percent',\n      maximumFractionDigits: 0,\n      ...options,\n    });\n  }\n\n  timeSince(date: Date, options?: Intl.RelativeTimeFormatOptions): string {\n    const timeFormatter = new Intl.RelativeTimeFormat(this.locales(), options),\n      secondsDifference = Math.trunc((date.getTime() - Date.now()) / 1000);\n\n    if (Math.abs(secondsDifference) < 10) {\n      return 'just now';\n    }\n\n    const [value, unit] = (\n      [\n        [60, 'seconds'],\n        [60, 'minutes'],\n        [24, 'hours'],\n        [28, 'days'],\n        [12, 'months'],\n        [Infinity, 'years'],\n      ] as [number, Intl.RelativeTimeFormatUnit][]\n    ).reduce(\n      ([value, unit, resolved], [limit, currentUnit]) => {\n        if (resolved) {\n          return [value, unit, resolved];\n        }\n\n        if (Math.abs(value) <= limit) {\n          return [value, currentUnit, true];\n        }\n\n        return [Math.trunc(value / limit), currentUnit, false];\n      },\n      [secondsDifference, 'seconds' as Intl.RelativeTimeFormatUnit, false]\n    );\n\n    return timeFormatter.format(value, unit);\n  }\n}\n\nexport const instance = new LocaleProvider();\n\nexport default LocaleProvider;\n", "import {\n  City as CityData,\n  CityImprovementMaintenanceGold,\n  PlainObject,\n  Unit as UnitData,\n  Yield,\n} from '../types';\nimport { knownGroupLookup, knownGroups } from '../lib/yieldMap';\nimport {\n  renderPopulation,\n  renderProgress,\n  yieldImages,\n} from './lib/cityYields';\nimport Cities from './Map/Cities';\nimport CityBuildSelectionWindow from './CityBuildSelectionWindow';\nimport ConfirmationWindow from './ConfirmationWindow';\nimport DataObserver from '../DataObserver';\nimport Feature from './Map/Feature';\nimport Fog from './Map/Fog';\nimport Improvements from './Map/Improvements';\nimport Irrigation from './Map/Irrigation';\nimport Land from './Map/Land';\nimport Portal from './Portal';\nimport SupportedUnit from './SupportedUnit';\nimport Terrain from './Map/Terrain';\nimport Transport from '../Transport';\nimport Unit from './Unit';\nimport UnitSelectionWindow from './UnitSelectionWindow';\nimport Window from './Window';\nimport World from './World';\nimport Yields from './Map/Yields';\nimport { h } from '../lib/html';\nimport { instance as localeProvider } from '../LocaleProvider';\nimport { s } from '@dom111/element';\nimport Unworkable from './Map/Unworkable';\nimport Units from './Map/Units';\n\nconst reduceYield = (type: string, cityYields: Yield[]): [number, number] =>\n    cityYields\n      .filter((cityYield) => knownGroupLookup[type].includes(cityYield._))\n      .reduce(\n        ([used, free], cityYield) => [\n          used + (cityYield.value < 0 ? -cityYield.value : 0),\n          free + cityYield.value,\n        ],\n        [0, 0]\n      ),\n  renderYields = (city: CityData): Node => {\n    return s(\n      '<div class=\"yields-detail\"></div>',\n      ...[\n        ['Food'],\n        ['Production'],\n        ['Trade'],\n        ['Luxuries', 'Gold', 'Research'],\n      ].map((cityYieldNames) =>\n        s(\n          `<div class=\"yields\" data-yields=\"${cityYieldNames.join(\n            ' '\n          )}\"></div>`,\n          ...cityYieldNames.map((cityYieldName) =>\n            s(\n              `<span class=\"yield\" data-yield=\"${cityYieldName}\"></span>`,\n              ...reduceYield(cityYieldName, city.yields).map((n, i) =>\n                s(\n                  `<span class=\"${['used', 'free'][i]}\"></span>`,\n                  ...yieldImages({\n                    _: cityYieldName,\n                    value: n,\n                  })\n                )\n              )\n            )\n          )\n        )\n      ),\n      // Other, unknown yields\n      ...Object.entries(\n        city.yields\n          .filter(\n            (cityYield) => !Object.keys(knownGroups).includes(cityYield._)\n          )\n          .reduce((yieldObject, cityYield) => {\n            if (!(cityYield._ in yieldObject)) {\n              yieldObject[cityYield._] = 0;\n            }\n\n            yieldObject[cityYield._] += cityYield.value;\n\n            return yieldObject;\n          }, {} as PlainObject)\n      ).map(([label, value]) =>\n        s(`<div><div>${label}</div><div>${value}</div></div>`)\n      )\n    );\n  },\n  resizeYields = (element: HTMLElement) => {\n    const yieldWrappers = element.querySelectorAll('.yields-detail .yield')!;\n\n    Array.from(yieldWrappers).forEach((container) => {\n      const [used, free] = Array.from(container.children);\n\n      while (used.scrollWidth + free.scrollWidth > container.clientWidth) {\n        const currentMaxWidth = parseInt(\n          container.getAttribute('data-max-width') || '14',\n          10\n        );\n\n        if (currentMaxWidth === 0) {\n          break;\n        }\n\n        container.setAttribute(\n          'data-max-width',\n          (currentMaxWidth - 1).toString()\n        );\n      }\n    });\n  },\n  renderMap = (portal: Portal, city: CityData, transport: Transport): Node => {\n    const portalCanvas = s<HTMLCanvasElement>('<canvas></canvas>'),\n      cityPortal = new Portal(\n        new World({\n          ...city.player.world,\n          tiles: city.tiles,\n        }),\n        transport,\n        portalCanvas,\n        {\n          playerId: city.player.id,\n          scale: portal.scale(),\n          tileSize: portal.tileSize() / portal.scale(),\n        },\n        Land,\n        Irrigation,\n        Terrain,\n        Improvements,\n        Feature,\n        Fog,\n        Cities,\n        Units,\n        Yields,\n        Unworkable\n      );\n\n    portalCanvas.height = portal.tileSize() * 5;\n    portalCanvas.width = portal.tileSize() * 5;\n\n    cityPortal.setCenter(city.tile.x, city.tile.y);\n    cityPortal.build(city.tiles);\n\n    const unitMap = cityPortal.getLayer(Units)!;\n    unitMap.render(\n      city.tiles.filter((tile) =>\n        tile.units.some((unit) => unit.player.id !== city.player.id)\n      )\n    );\n\n    const yieldMap = cityPortal.getLayer(Yields)!;\n    yieldMap.render(city.tilesWorked);\n\n    const unworkable = cityPortal.getLayer(Unworkable)!;\n    unworkable.setCity(city);\n    unworkable.render(city.tiles);\n\n    cityPortal.render();\n\n    return h(s('<div class=\"city-map\"></div>', portalCanvas), {\n      click: () =>\n        transport.send('action', {\n          name: 'ReassignWorkers',\n          city: city.id,\n        }),\n    });\n  },\n  renderBuild = (\n    city: CityData,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ): HTMLElement =>\n    s(\n      `<div class=\"build\"><header>Building ${\n        city.build.building ? city.build.building.item._ : 'nothing'\n      }</header></div>`,\n      h(s(`<button>${city.build.building ? 'Change' : 'Choose'}</button>`), {\n        click() {\n          chooseProduction();\n        },\n      }),\n      h(s('<button>Buy</button>'), {\n        click() {\n          completeProduction();\n        },\n      }),\n      city.build.building\n        ? s(`<p>${renderProgress(city.build, city.yields, 'Production')}</p>`)\n        : ''\n    ),\n  renderGrowth = (city: CityData): Node =>\n    s(\n      `<div class=\"growth\"><header>Growth</header><p>Size ${city.growth.size.toString()}</p><p>${renderProgress(\n        city.growth,\n        city.yields,\n        'Food'\n      )}</p></div>`\n    ),\n  renderImprovements = (city: CityData): Node => {\n    return s(\n      `<div class=\"improvements\"></div>`,\n      s(\n        `<div></div>`,\n        ...city.improvements.map((improvement) =>\n          s(\n            `<div>${improvement._}</div>`,\n            ...city.yields\n              .filter(\n                (cityYield): cityYield is CityImprovementMaintenanceGold =>\n                  cityYield._ === 'CityImprovementMaintenanceGold'\n              )\n              .filter(\n                (cityYield) => cityYield.cityImprovement.id === improvement.id\n              )\n              .flatMap((cityYield) => yieldImages(cityYield))\n          )\n        )\n      )\n    );\n  },\n  renderGarrisonedUnits = (city: CityData, transport: Transport): Node => {\n    return h(\n      s(\n        `<div class=\"garrisoned-units\"><header>Garrisoned Units</header></div>`,\n        s(\n          '<div class=\"units\"></div>',\n          ...city.tile.units.map((unit) => new Unit(unit).element())\n        )\n      ),\n      {\n        click() {\n          const cityPlayerUnits = city.tile.units.filter(\n            (unit: UnitData) => unit.player.id === city.player.id\n          );\n\n          if (cityPlayerUnits.length === 0) {\n            return;\n          }\n\n          new UnitSelectionWindow(cityPlayerUnits, transport);\n        },\n      }\n    );\n  },\n  renderSupportedUnits = (city: CityData): Node => {\n    return s(\n      `<div class=\"supported-units\"><header>Supported units</header></div>`,\n      s(\n        '<div class=\"units\"></div>',\n        ...city.units.map((unit) => new SupportedUnit(city, unit))\n      )\n    );\n  },\n  cityDetails = (\n    city: CityData,\n    portal: Portal,\n    transport: Transport,\n    chooseProduction: () => void,\n    completeProduction: () => void\n  ) => {\n    return s(\n      '<div class=\"city-screen\"></div>',\n      s(\n        '<div class=\"top-row\"></div>',\n        s(\n          '<div class=\"yield-details\"></div>',\n          renderPopulation(city),\n          renderYields(city),\n          renderSupportedUnits(city)\n        ),\n        renderMap(portal, city, transport),\n        renderImprovements(city)\n      ),\n      s(\n        '<div class=\"bottom-row\"></div>',\n        renderGrowth(city),\n        s(\n          '<div class=\"tabbed-details\"></div>',\n          // TODO: add a tab bar\n          s('<div class=\"info\"></div>', renderGarrisonedUnits(city, transport))\n        ),\n        renderBuild(city, chooseProduction, completeProduction)\n      )\n    );\n  };\n\nexport class City extends Window {\n  #city: CityData;\n  #dataObserver: DataObserver;\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(city: CityData, portal: Portal, transport: Transport) {\n    super(\n      city.name,\n      cityDetails(\n        city,\n        portal,\n        transport,\n        () => this.changeProduction(),\n        () => this.completeProduction()\n      ),\n      {\n        canResize: true,\n        canMaximise: true,\n        classes: 'city-screen-window',\n        size: 'maximised',\n      }\n    );\n\n    setTimeout(() => resizeYields(this.element()), 200);\n\n    this.#city = city;\n    this.#portal = portal;\n    this.#transport = transport;\n    this.#dataObserver = new DataObserver(\n      [\n        city.id,\n        city.build.id,\n        city.growth.id,\n        ...city.units.map((unit) => unit.id),\n      ],\n      (data: PlainObject) => {\n        const [updatedCity] = (\n          (data.player?.cities ?? []) as CityData[]\n        ).filter((cityData: CityData) => city.id === cityData.id);\n\n        // City must have been captured or destroyed\n        if (!updatedCity) {\n          this.close();\n\n          return;\n        }\n\n        this.#city = updatedCity;\n\n        this.#dataObserver.setIds([\n          updatedCity.id,\n          updatedCity.build.id,\n          updatedCity.growth.id,\n          ...updatedCity.units.map((unit) => unit.id),\n        ]);\n\n        this.update(\n          cityDetails(\n            updatedCity,\n            this.#portal,\n            transport,\n            () => this.changeProduction(),\n            () => this.completeProduction()\n          )\n        );\n\n        this.element().focus();\n\n        setTimeout(() => resizeYields(this.element()), 200);\n      }\n    );\n\n    this.on('keydown', (event) => {\n      if (['c', 'C'].includes(event.key)) {\n        this.changeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['b', 'B'].includes(event.key)) {\n        this.completeProduction();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (['Enter', 'x', 'X'].includes(event.key)) {\n        this.close();\n      }\n    });\n\n    const resizeHandler = () =>\n      setTimeout(() => resizeYields(this.element()), 200);\n\n    this.on('close', () => window.removeEventListener('resize', resizeHandler));\n\n    window.addEventListener('resize', resizeHandler);\n\n    this.on('close', () => this.off('resize', resizeHandler));\n\n    this.on('resize', resizeHandler);\n  }\n\n  changeProduction(): void {\n    new CityBuildSelectionWindow(this.#city.build, this.#transport, () =>\n      this.element().focus()\n    );\n  }\n\n  close(): void {\n    this.#dataObserver.dispose();\n\n    super.close();\n  }\n\n  completeProduction(): void {\n    const cityBuild = this.#city.build;\n\n    if (!cityBuild.building) {\n      return;\n    }\n\n    // TODO: handle this better for alternative spend mechanisms.\n    const [spendCost] = cityBuild.spendCost;\n\n    new ConfirmationWindow(\n      'Are you sure?',\n      `Do you want to rush building of ${\n        cityBuild.building.item._\n      } for ${localeProvider.number(spendCost.value)} ${spendCost.resource._}?`,\n      () =>\n        this.#transport.send('action', {\n          name: 'CompleteProduction',\n          id: this.#city.build.id,\n        })\n    );\n  }\n}\n\nexport default City;\n", "import { City, Tile } from '../../types';\nimport Map from '../Map';\n\nexport class Unworkable extends Map {\n  #city: City | null = null;\n\n  setCity(city: City): void {\n    this.#city = city;\n  }\n\n  renderTile(tile: Tile): void {\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (\n      tile.workedBy !== null &&\n      this.#city !== null &&\n      tile.workedBy.id !== this.#city.id\n    ) {\n      this.context().fillStyle = 'rgba(200, 64, 64, 0.5)';\n      this.context().fillRect(offsetX, offsetY, size, size);\n    }\n  }\n}\n\nexport default Unworkable;\n", "import { Tile, Unit } from '../../types';\nimport { Map, IMap } from '../Map';\nimport renderUnit from '../../lib/renderUnit';\n\nexport class Units extends Map implements IMap {\n  #activeUnit: Unit | null = null;\n\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size;\n\n    if (\n      tile.units.length > 0 &&\n      (this.#activeUnit !== null ? this.#activeUnit.tile.id !== tile.id : true)\n    ) {\n      const [unit] = tile.units.sort(\n          (a: Unit, b: Unit): number => b.defence?.value - a.defence?.value\n        ),\n        image = this.renderUnit(unit);\n\n      if (tile.units.length > 1) {\n        this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n      }\n\n      this.putImage(image, offsetX, offsetY);\n    }\n  }\n\n  protected renderUnit(unit: Unit): CanvasImageSource {\n    return renderUnit(unit);\n  }\n\n  setActiveUnit(unit: Unit | null): void {\n    this.#activeUnit = unit;\n  }\n\n  protected activeUnit(): Unit | null {\n    return this.#activeUnit;\n  }\n}\n\nexport default Units;\n", "import City from '../City';\nimport { City as CityData } from '../../types';\nimport { INotificationWindow } from '../NotificationWindow';\nimport Portal from '../Portal';\nimport Transport from '../../Transport';\n\nexport const showCityAction = (\n  city: CityData,\n  portal: Portal,\n  transport: Transport\n) => ({\n  label: 'View city',\n  action(selectionWindow: INotificationWindow) {\n    selectionWindow.close();\n\n    new City(city, portal, transport);\n  },\n});\n\nexport default showCityAction;\n", "import { City as CityData } from '../../types';\nimport { INotificationWindow } from '../NotificationWindow';\nimport Portal from '../Portal';\n\nexport const showCityOnMapAction = (city: CityData, portal: Portal) => ({\n  label: 'Show on map',\n  action(selectionWindow: INotificationWindow) {\n    selectionWindow.close();\n\n    portal.setCenter(city.tile.x, city.tile.y);\n  },\n});\n\nexport default showCityOnMapAction;\n", "import { City, PlayerAction } from '../../types';\nimport Action from './Action';\nimport ActionWindow from '../ActionWindow';\nimport Portal from '../Portal';\nimport Transport from '../../Transport';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\nimport showCityAction from '../lib/showCityAction';\nimport showCityOnMapAction from '../lib/showCityOnMap';\n\nexport class CivilDisorder extends Action {\n  #portal: Portal;\n\n  constructor(action: PlayerAction, portal: Portal, transport: Transport) {\n    super(action, transport);\n\n    this.#portal = portal;\n  }\n\n  activate() {\n    const city = this.value() as unknown as City;\n\n    new ActionWindow(\n      `Civil disorder in ${city.name}!`,\n      `Civil disorder in ${city.name}, mayor flees in panic!`,\n      {\n        actions: {\n          showCity: showCityAction(city, this.#portal, this.transport()),\n          showCityOnMap: showCityOnMapAction(city, this.#portal),\n        },\n      }\n    );\n  }\n\n  build() {\n    const city = this.value() as unknown as City;\n\n    assetStore\n      .get('./assets/city/people_unhappy_m.png')\n      .then((asset) =>\n        this.append(\n          s(\n            `<button class=\"civilDisorder\" title=\"Civil disorder in ${\n              city.name\n            }!\"><img src=\"${asset!.uri}\"></button>`\n          )\n        )\n      );\n  }\n}\n\nexport default CivilDisorder;\n", "import Action from './Action';\nimport checkIcon from 'feather-icons/dist/icons/check-circle.svg';\nimport { s } from '@dom111/element';\n\nexport class EndTurn extends Action {\n  activate(): void {\n    this.transport().send('action', {\n      name: 'EndTurn',\n    });\n  }\n\n  build(): void {\n    this.append(\n      s(\n        `<button class=\"large gradient endTurn\" title=\"End turn\"><img src=\"${checkIcon}\"</button>`\n      )\n    );\n  }\n}\n\nexport default EndTurn;\n", "import Action from './Action';\nimport { PlayerGovernment } from '../../types';\nimport SelectionWindow from '../SelectionWindow';\nimport { assetStore } from '../../AssetStore';\nimport { s } from '@dom111/element';\n\nexport class Revolution extends Action {\n  activate(): void {\n    const chooseWindow = new SelectionWindow(\n      'Choose government',\n      this.value().available.map((government) => ({\n        value: government._,\n      })),\n      (selection) => {\n        if (!selection) {\n          return;\n        }\n\n        this.transport().send('action', {\n          name: 'Revolution',\n          id: this.value().id,\n          chosen: selection ? selection : '@',\n        });\n\n        this.complete();\n\n        chooseWindow.close();\n      },\n      'Which government would you like to convert to?',\n      {\n        displayAll: true,\n      }\n    );\n  }\n\n  build(): void {\n    assetStore\n      .get('./assets/city/sad.png')\n      .then((asset) =>\n        this.append(\n          s(\n            `<button class=\"chooseGovernment small\" title=\"Choose government\"><img src=\"${\n              asset!.uri\n            }\"></button>`\n          )\n        )\n      );\n  }\n\n  value(): PlayerGovernment {\n    return super.value() as PlayerGovernment;\n  }\n}\n\nexport default Revolution;\n", "import { Civilization } from '../../types';\n\nexport const civilizationAttribute = (\n  civilization: Civilization,\n  attributeName: string\n) => {\n  const [attribute] = civilization.attributes.filter(\n    (attribute) => attribute.name === attributeName\n  );\n\n  if (!attribute) {\n    return null;\n  }\n\n  return attribute.value;\n};\n\nexport default civilizationAttribute;\n", "import Action from './Action';\nimport { Spaceship as SpaceshipData } from '../../types';\nimport Window from '../Window';\nimport civilizationAttribute from '../lib/civilizationAttribute';\nimport globeIcon from 'feather-icons/dist/icons/globe.svg';\nimport { h } from '../../lib/html';\nimport { instance as localeProviderInstance } from '../../LocaleProvider';\nimport { s } from '@dom111/element';\n\ntype SpaceshipYieldMap = {\n  [key: string]: [number, number];\n};\n\nexport class Spaceship extends Action {\n  activate(): void {\n    const spaceship = this.value(),\n      yields = spaceship.yields.reduce(\n        (yieldMap: SpaceshipYieldMap, spaceshipYield) => {\n          if (!(spaceshipYield._ in yieldMap)) {\n            return yieldMap;\n          }\n\n          if (spaceshipYield.value < 0) {\n            yieldMap[spaceshipYield._][1] += Math.abs(spaceshipYield.value);\n\n            return yieldMap;\n          }\n\n          yieldMap[spaceshipYield._][0] += spaceshipYield.value;\n\n          return yieldMap;\n        },\n        {\n          Energy: [0, 0],\n          LifeSupport: [0, 0],\n          Mass: [0, 0],\n          Population: [0, 0],\n        } as SpaceshipYieldMap\n      ),\n      activeParts = spaceship.activeParts.reduce(\n        (partMap: { [key: string]: number }, part) => {\n          if (!(part._ in partMap)) {\n            return partMap;\n          }\n\n          partMap[part._]++;\n\n          return partMap;\n        },\n        {\n          Structural: 0,\n          Fuel: 0,\n          Propulsion: 0,\n          Habitation: 0,\n          LifeSupport: 0,\n          Power: 0,\n        }\n      ),\n      inactiveParts = spaceship.inactiveParts.reduce(\n        (partMap: { [key: string]: number }, part) => {\n          if (!(part._ in partMap)) {\n            return partMap;\n          }\n\n          partMap[part._]++;\n\n          return partMap;\n        },\n        {\n          Structural: 0,\n          Fuel: 0,\n          Propulsion: 0,\n          Habitation: 0,\n          LifeSupport: 0,\n          Power: 0,\n        }\n      ),\n      values = [\n        [\n          'Chance of success',\n          localeProviderInstance.percent(spaceship.chanceOfSuccess),\n        ],\n        [\n          'Flight time',\n          localeProviderInstance.number(spaceship.flightTime, {\n            style: 'unit',\n            unit: 'year',\n            unitDisplay: 'long',\n          }),\n        ],\n        ['Launched?', spaceship.launched ? 'Yes' : 'No'],\n        [\n          'Mass',\n          localeProviderInstance.number(yields.Mass[0] * 1000, {\n            style: 'unit',\n            unit: 'kilogram',\n          }),\n        ],\n        ['Population', localeProviderInstance.number(yields.Population[0])],\n        [\n          'Energy',\n          localeProviderInstance.percent(\n            yields.Energy[1] > 0 ? yields.Energy[0] / yields.Energy[1] : 0\n          ),\n        ],\n        [\n          'Life Support',\n          localeProviderInstance.percent(\n            yields.LifeSupport[1] > 0\n              ? yields.LifeSupport[0] / yields.LifeSupport[1]\n              : 0\n          ),\n        ],\n      ],\n      launch = () => {\n        // TODO: could highlight the button? Red for < 50%, Yellow for < 80%, otherwise Green?\n        this.transport().send('action', {\n          name: 'LaunchSpaceship',\n          id: spaceship.id,\n        });\n\n        window.close();\n      },\n      window = new Window(\n        `${civilizationAttribute(\n          spaceship.player.civilization,\n          'people'\n        )} spaceship`,\n        s(\n          '<div></div>',\n          s(\n            `<dl>${Object.entries(activeParts)\n              .map(\n                ([key, value]) =>\n                  `<dd>${key}</dd><dt>${localeProviderInstance.number(value)}${\n                    inactiveParts[key] === 0\n                      ? ''\n                      : ` <span class=\"inactive\">(${inactiveParts[key]} inactive)</span>`\n                  }</dt>`\n              )\n              .join('')}</dl>`\n          ),\n          s(\n            `<dl>${values\n              .map(([label, value]) => `<dd>${label}</dd><dt>${value}</dt>`)\n              .join('')}</dl>`\n          ),\n          s(\n            '<footer></footer>',\n            h(\n              s<HTMLButtonElement>(\n                `<button${\n                  spaceship.launched || spaceship.chanceOfSuccess === 0\n                    ? ' disabled'\n                    : ''\n                }>${spaceship.launched ? 'Launched' : 'Launch'}</button>`\n              ),\n              {\n                keydown(event: KeyboardEvent) {\n                  if (['Enter', ' '].includes(event.key)) {\n                    launch();\n                  }\n                },\n                click() {\n                  launch();\n                },\n              }\n            )\n          )\n        )\n      );\n\n    window.addClass('spaceship');\n  }\n\n  build(): void {\n    this.append(\n      s(\n        `<button class=\"spaceship\" title=\"View spaceship\"><img src=\"${globeIcon}\"/></button>`\n      )\n    );\n  }\n\n  value(): SpaceshipData {\n    return super.value() as SpaceshipData;\n  }\n}\n\nexport default Spaceship;\n", "import { IMap } from '../Map';\nimport Units from './Units';\n\nexport class ActiveUnit extends Units implements IMap {\n  render(): void {\n    this.clear();\n\n    const activeUnit = this.activeUnit();\n\n    if (activeUnit === null) {\n      return;\n    }\n\n    const { x, y } = activeUnit.tile,\n      tile = this.world().get(x, y),\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      image = this.renderUnit(activeUnit);\n\n    if (tile.units.length > 1) {\n      this.putImage(image, offsetX - this.scale(), offsetY - this.scale());\n    }\n\n    this.putImage(image, offsetX, offsetY);\n  }\n\n  update(): void {\n    this.render();\n  }\n}\n\nexport default ActiveUnit;\n", "import { Tile } from '../../types';\nimport { Map } from '../Map';\n\nexport class CityNames extends Map {\n  renderTile(tile: Tile): void {\n    if (!tile.city) {\n      return;\n    }\n\n    super.renderTile(tile);\n\n    const { x, y } = tile,\n      size = this.tileSize(),\n      offsetX = x * size,\n      offsetY = y * size,\n      city = tile.city,\n      sizeOffsetX = this.tileSize() / 2,\n      sizeOffsetY = this.tileSize() * 0.75,\n      textOffsetX = this.tileSize() / 2,\n      textOffsetY = this.tileSize() * 1.6;\n\n    this.context().font = `bold ${8 * this.scale()}px sans-serif`;\n    this.context().fillStyle = 'black';\n    this.context().textAlign = 'center';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX + this.scale(),\n      offsetY + sizeOffsetY\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX + this.scale(),\n      offsetY + textOffsetY\n    );\n    this.context().fillStyle = 'white';\n    this.context().fillText(\n      city.growth.size.toString(),\n      offsetX + sizeOffsetX,\n      offsetY + sizeOffsetY - this.scale()\n    );\n    this.context().fillText(\n      city.name,\n      offsetX + textOffsetX,\n      offsetY + textOffsetY - this.scale()\n    );\n  }\n\n  update(): void {\n    this.clear();\n\n    // TODO: Could be a little smarter about this...\n    this.world()\n      .tiles()\n      .filter((tile) => !!tile.city)\n      .forEach((tile) => this.renderTile(tile));\n  }\n}\n\nexport default CityNames;\n", "import { City as CityData, GameData, PlainObject, Player } from '../types';\nimport { knownIcons } from '../lib/yieldMap';\nimport { turnsLeft, turnsText, yieldData } from './lib/cityYields';\nimport City from './City';\nimport DataObserver from '../DataObserver';\nimport Portal from './Portal';\nimport Transport from '../Transport';\nimport Window from './Window';\nimport { assetStore } from '../AssetStore';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\n\nconst buildCityRow = async (city: CityData): Promise<HTMLElement[]> => {\n  const [food, production, trade, research, gold, luxuries] = [\n      'Food',\n      'Production',\n      'Trade',\n      'Research',\n      'Gold',\n      'Luxuries',\n    ].map((yieldName) => yieldData(city, yieldName)),\n    [\n      foodIcon,\n      productionIcon,\n      tradeIcon,\n      researchIcon,\n      goldIcon,\n      luxuriesIcon,\n    ] = await Promise.all(\n      ['Food', 'Production', 'Trade', 'Research', 'Gold', 'Luxuries'].map(\n        (yieldName) =>\n          assetStore\n            .getScaled(`./assets/${knownIcons[yieldName]}`, 2)\n            .then((image) => `<img src=\"${image.toDataURL('image/png')}\">`)\n      )\n    );\n\n  return [\n    s(`<header>${city.name}</header>`),\n    s(\n      `<div class=\"growth\"><strong>${city.growth.size}</strong> ${foodIcon} ${\n        food[2]\n      } [${food[0]}] (${turnsText(\n        turnsLeft(city.growth, city.yields, 'Food')\n      )})</div>`\n    ),\n    s(\n      `<div class=\"build\">${productionIcon} ${production[2]} [${\n        production[0]\n      }] ${city.build.building ? city.build.building.item._ : 'Nothing'}${\n        city.build.building\n          ? ` (${turnsText(turnsLeft(city.build, city.yields, 'Production'))})`\n          : ''\n      }</div>`\n    ),\n    s(\n      `<div class=\"yields\">${(\n        [\n          [trade, tradeIcon],\n          [research, researchIcon],\n          [gold, goldIcon],\n          [luxuries, luxuriesIcon],\n        ] as [[number, number, number], string][]\n      )\n        .filter(([[total]]) => total !== 0)\n        .map(\n          ([[total, , free], icon]) =>\n            `${icon} ${free}${free !== total ? ` [${total}]` : ''}`\n        )\n        .join(', ')}</div>`\n    ),\n  ];\n};\n\nexport class CityStatus extends Window {\n  #cities: CityData[];\n  #dataObserver: DataObserver;\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(player: Player, portal: Portal, transport: Transport) {\n    super('City details', s('<div class=\"loading\"></div>'), {\n      classes: 'city-status',\n    });\n\n    this.#cities = player.cities;\n    this.#dataObserver = new DataObserver(\n      [\n        player.id,\n        ...player.cities.flatMap(({ id, build, growth }: CityData) => [\n          id,\n          growth.id,\n          build.id,\n        ]),\n      ],\n      (data) => {\n        const player = (data as GameData).player;\n\n        this.#cities = player.cities;\n\n        this.#dataObserver.setIds([\n          player.id,\n          ...player.cities.flatMap(({ id, build, growth }: CityData) => [\n            id,\n            growth.id,\n            build.id,\n          ]),\n        ]);\n\n        this.update();\n      }\n    );\n    this.#portal = portal;\n    this.#transport = transport;\n\n    this.update();\n  }\n\n  close() {\n    this.#dataObserver.dispose();\n\n    return super.close();\n  }\n\n  update() {\n    Promise.all(this.#cities.map((city) => buildCityRow(city))).then((rows) =>\n      super.update(\n        s(\n          '<table></table>',\n          ...rows.map(([name, growth, build, yields], index) => {\n            const row = document.createElement('tr');\n\n            row.append(\n              ...(\n                [\n                  [name, 'th'],\n                  [growth, 'td'],\n                  [build, 'td'],\n                  [yields, 'td'],\n                ] as [HTMLElement, string][]\n              ).map(([element, containerNodeName]) => {\n                const container = document.createElement(containerNodeName);\n\n                container.append(element);\n\n                return container;\n              })\n            );\n\n            return h(row, {\n              click: () =>\n                new City(this.#cities[index], this.#portal, this.#transport),\n            });\n          })\n        )\n      )\n    );\n  }\n}\n\nexport default CityStatus;\n", "import { Element, s } from '@dom111/element';\nimport { Yield } from '../types';\n\nexport class GameDetails extends Element {\n  #turn: Yield;\n  #year: Yield;\n\n  constructor(element: HTMLElement, turn: Yield, year: Yield) {\n    super(element);\n\n    this.#turn = turn;\n    this.#year = year;\n  }\n\n  build(): void {\n    this.empty();\n\n    this.append(\n      s(\n        `<h3><span class=\"year\">${this.year()}</span><span class=\"turn\">${this.#turn.value.toString()}</span></h3>`\n      )\n    );\n  }\n\n  year(year = this.#year.value): string {\n    if (year < 0) {\n      return Math.abs(year) + ' BCE';\n    }\n\n    if (year === 0) {\n      return '1 CE';\n    }\n\n    return year + ' CE';\n  }\n}\n\nexport default GameDetails;\n", "import { Element, s } from '@dom111/element';\nimport { GameData, Player } from '../types';\nimport CityStatus from './CityStatus';\nimport DataObserver from '../DataObserver';\nimport HappinessReport from './HappinessReport';\nimport PopupMenu from './PopupMenu';\nimport Portal from './Portal';\nimport ScienceReport from './ScienceReport';\nimport TradeReport from './TradeReport';\nimport Transport from '../Transport';\nimport Window from './Window';\nimport { h } from '../lib/html';\n// @ts-ignore\nimport menuIcon from 'feather-icons/dist/icons/menu.svg';\nimport GameOptions from './GameOptions';\n\nexport class GameMenu extends Element {\n  #dataObserver: DataObserver;\n  #player: Player;\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(\n    element: HTMLElement,\n    player: Player,\n    portal: Portal,\n    transport: Transport\n  ) {\n    super(element);\n\n    this.#player = player;\n    this.#portal = portal;\n    this.#transport = transport;\n\n    this.#dataObserver = new DataObserver(\n      [player.id],\n      (data: GameData) => (this.#player = data.player)\n    );\n  }\n  build(): void {\n    const button = s(`<button><img src=\"${menuIcon}\"></button>`);\n\n    this.append(\n      h(button, {\n        click: () => {\n          const { offsetLeft: parentX, offsetTop: parentY } = this.element();\n          const { offsetLeft: x, offsetTop: y } = button;\n\n          new PopupMenu(\n            this,\n            parentX + x,\n            parentY + y,\n            [\n              {\n                label: 'Options',\n                action() {\n                  new GameOptions();\n                },\n              },\n              {\n                label: 'City Status',\n                action: () => {\n                  new CityStatus(this.#player, this.#portal, this.#transport);\n                },\n              },\n              {\n                label: 'Happiness Report',\n                action: () => {\n                  new HappinessReport(\n                    this.#player,\n                    this.#portal,\n                    this.#transport\n                  );\n                },\n              },\n              {\n                label: 'Trade Report',\n                action: () => {\n                  new TradeReport(this.#player, this.#portal, this.#transport);\n                },\n              },\n              {\n                label: 'Science Report',\n                action: () => {\n                  new ScienceReport(this.#player);\n                },\n              },\n            ],\n            {\n              align: 'right',\n              fullWidth: true,\n            }\n          );\n        },\n      })\n    );\n  }\n}\n\nexport default GameMenu;\n", "import {\n  City as CityData,\n  CityImprovementContent,\n  GameData,\n  MartialLaw,\n  MilitaryUnhappiness,\n  Player,\n  Yield,\n} from '../types';\nimport DataObserver from '../DataObserver';\nimport Element from '@dom111/element';\nimport SupportedUnit from './SupportedUnit';\nimport Unit from './Unit';\nimport Window from './Window';\nimport { assetStore } from '../AssetStore';\nimport { h } from '../lib/html';\nimport { instance as localeProvider } from '../LocaleProvider';\nimport instanceOf from '../lib/instanceOf';\nimport { knownIcons, reduceKnownYield } from '../lib/yieldMap';\nimport { renderPopulation } from './lib/cityYields';\nimport { s } from '@dom111/element';\nimport City from './City';\nimport Portal from './Portal';\nimport Transport from '../Transport';\n\nconst buildCityRow = async (\n  city: CityData,\n  portal: Portal,\n  transport: Transport\n) => {\n  const happinessReasons: {\n    [key: string]: (cityYield: any) => string | HTMLElement | Element;\n  } = {\n    CityImprovementContent: (cityYield: CityImprovementContent) =>\n      cityYield.cityImprovement._,\n    MartialLaw: (cityYield: MartialLaw) => new Unit(cityYield.unit),\n    MilitaryUnhappiness: (cityYield: MilitaryUnhappiness) =>\n      new SupportedUnit(city, cityYield.unit, ['MilitaryUnhappiness']),\n    LuxuryHappiness: () => {\n      const luxuriesElement = s(`<span></span>`);\n\n      assetStore\n        .getScaled(`./assets/${knownIcons.Luxuries}`, 2)\n        .then((image) =>\n          luxuriesElement.append(\n            s(`<img src=\"${image.toDataURL('image/png')}\">`),\n            localeProvider.number(reduceKnownYield(city.yields, 'Luxuries'))\n          )\n        );\n\n      return luxuriesElement;\n    },\n  };\n\n  const happinessYields = city.yields.filter(\n      (cityYield) =>\n        instanceOf(cityYield, 'Happiness', 'Unhappiness') &&\n        cityYield.value !== 0\n    ),\n    reasons = happinessYields.map((cityYield, index) =>\n      s(\n        `<div class=\"reason\"></div>`,\n        renderPopulation(city, happinessYields.slice(0, index + 1)),\n        s(\n          `<div class=\"detail\"></div>`,\n          happinessReasons[cityYield._]\n            ? happinessReasons[cityYield._](cityYield)\n            : cityYield._\n        )\n      )\n    );\n\n  const reasonWrapper = s('<div class=\"reasons hidden\"></div>', ...reasons);\n\n  return h(\n    s(\n      `<div class=\"city${city.celebrateLeader ? ' celebrateLeader' : ''}${\n        city.civilDisorder ? ' civilDisorder' : ''\n      }\"><div class=\"name\">${city.name}</div></div>`,\n      renderPopulation(city),\n      h(s('<button>View city</button>'), {\n        click(event: MouseEvent) {\n          event.stopPropagation();\n\n          new City(city, portal, transport);\n        },\n      }),\n      reasonWrapper\n    ),\n    {\n      click() {\n        if (reasons.length === 0) {\n          return;\n        }\n\n        reasonWrapper.classList.toggle('hidden');\n      },\n    }\n  );\n};\n\nexport class HappinessReport extends Window {\n  #dataObserver: DataObserver;\n  #player: Player;\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(player: Player, portal: Portal, transport: Transport) {\n    super('Happiness report', s('<div></div>'), {\n      classes: 'happiness-report',\n    });\n\n    this.#dataObserver = new DataObserver(\n      [player.id, ...player.cities.map((city) => city.id)],\n      (data) => {\n        this.#player = (data as GameData).player;\n\n        this.#dataObserver.setIds([\n          player.id,\n          ...player.cities.map((city) => city.id),\n        ]);\n\n        this.update();\n      }\n    );\n\n    this.#player = player;\n    this.#portal = portal;\n    this.#transport = transport;\n\n    this.update();\n  }\n\n  close() {\n    this.#dataObserver.dispose();\n\n    return super.close();\n  }\n\n  update() {\n    Promise.all(\n      this.#player.cities.map((city) =>\n        buildCityRow(city, this.#portal, this.#transport)\n      )\n    ).then((rows) => super.update(s('<div></div>', ...rows)));\n  }\n}\n\nexport default HappinessReport;\n", "import { Element, off, on, s } from '@dom111/element';\nimport { h } from '../lib/html';\n\nconst menuMap = new Map<any, PopupMenu>();\n\nexport interface PopupMenuAction {\n  label: string;\n  action: (menu: PopupMenu) => void;\n}\n\nexport interface PopupMenuOptions {\n  align: 'left' | 'center' | 'right';\n  fullWidth: boolean;\n  target: HTMLElement;\n}\n\nexport class PopupMenu extends Element {\n  #actions: PopupMenuAction[] = [];\n  #targetPointerUpListener: (event: PointerEvent) => void = () => {};\n  #centerX: number;\n  #centerY: number;\n  #options: PopupMenuOptions = {\n    align: 'left',\n    fullWidth: false,\n    target: document.body,\n  };\n\n  constructor(\n    launcher: any,\n    centerX: number,\n    centerY: number,\n    actions: PopupMenuAction[],\n    options: Partial<PopupMenuOptions> = {}\n  ) {\n    super(s(`<div class=\"popup-menu hide\"></div>`));\n\n    if (menuMap.has(launcher)) {\n      const existingMenu = menuMap.get(launcher)!;\n\n      existingMenu.remove();\n    }\n\n    menuMap.set(launcher, this);\n\n    this.#actions = actions;\n    this.#centerX = centerX;\n    this.#centerY = centerY;\n    this.#options = {\n      ...this.#options,\n      ...options,\n    };\n\n    this.build();\n  }\n\n  build() {\n    const actions = this.#actions;\n\n    if (actions.length === 0) {\n      this.remove();\n\n      return;\n    }\n\n    this.element().style.setProperty('left', this.#centerX + 'px');\n    this.element().style.setProperty('top', this.#centerY + 'px');\n\n    this.removeClass('hide');\n\n    this.append(\n      ...actions.map(({ action, label }) => {\n        const button = s(`<button>${label}</button>`);\n\n        on(button, 'pointerup', () => {\n          action(this);\n\n          this.remove();\n        });\n\n        return button;\n      }),\n      h(s(`<button class=\"close\" aria-label=\"Close\">&times;</button>`), {\n        pointerup: () => this.remove(),\n      })\n    );\n\n    this.addClass(this.#options.align);\n\n    if (this.#options.fullWidth) {\n      this.addClass('full-width');\n    }\n\n    this.#targetPointerUpListener = () => this.remove();\n\n    on(this.#options.target, 'pointerup', this.#targetPointerUpListener);\n\n    this.#options.target.append(this.element());\n  }\n\n  remove() {\n    this.addClass('hide');\n\n    setTimeout(() => {\n      super.remove();\n    }, 250);\n\n    off(this.#options.target, 'pointerup', this.#targetPointerUpListener);\n  }\n}\n\nexport default PopupMenu;\n", "import { Player, Yield } from '../../types';\n\nexport const combinedYields = (player: Player) =>\n  player.cities.reduce(\n    (yields: Yield[], city) => yields.concat(city.yields),\n    []\n  );\n", "import { GameData, Player, PlayerResearch, Yield } from '../types';\nimport { knownIcons, reduceKnownYield } from '../lib/yieldMap';\nimport DataObserver from '../DataObserver';\nimport Window from './Window';\nimport { combinedYields } from './lib/playerYields';\nimport { renderProgress } from './lib/cityYields';\nimport { s } from '@dom111/element';\nimport { assetStore } from '../AssetStore';\n\nconst template = async (playerResearch: PlayerResearch, yields: Yield[]) => {\n  const researchIcon = await assetStore\n    .getScaled(`./assets/${knownIcons.Research}`, 2)\n    .then((image) => `<img src=\"${image.toDataURL('image/png')}\">`);\n\n  return s(\n    `<div><p><strong>Researching ${\n      playerResearch.researching ? playerResearch.researching._ : 'nothing'\n    }</strong>${\n      playerResearch.researching\n        ? ` ${renderProgress(playerResearch, yields, 'Research')}`\n        : ''\n    }</p><p>${researchIcon} ${reduceKnownYield(\n      yields,\n      'Research'\n    )} / turn</p><div class=\"discovered\">${playerResearch.complete\n      .map((advance) => `<div>${advance._}</div>`)\n      .join('')}</div></div>`\n  );\n};\n\nexport class ScienceReport extends Window {\n  #dataObserver: DataObserver;\n  #player: Player;\n\n  constructor(player: Player) {\n    super('Player research', s('<div></div>'), {\n      classes: 'science-report',\n    });\n\n    this.#player = player;\n\n    this.update();\n\n    this.#dataObserver = new DataObserver(\n      [player.id, player.research.id, ...player.cities.map((city) => city.id)],\n      (data) => {\n        const player = (data as GameData).player;\n\n        this.#dataObserver.setIds([\n          player.id,\n          player.research.id,\n          ...player.cities.map((city) => city.id),\n        ]);\n\n        this.#player = player;\n\n        this.update();\n      }\n    );\n  }\n\n  close() {\n    this.#dataObserver.dispose();\n\n    return super.close();\n  }\n\n  update() {\n    template(this.#player.research, combinedYields(this.#player)).then(\n      (template) => super.update(template)\n    );\n  }\n}\n\nexport default ScienceReport;\n", "import {\n  City as CityData,\n  CityImprovementMaintenanceGold,\n  GameData,\n  PlainObject,\n  Player,\n} from '../types';\nimport { knownIcons, reduceKnownYield } from '../lib/yieldMap';\nimport { turnsLeft, turnsText, yieldData } from './lib/cityYields';\nimport City from './City';\nimport DataObserver from '../DataObserver';\nimport Portal from './Portal';\nimport Transport from '../Transport';\nimport Window from './Window';\nimport { assetStore } from '../AssetStore';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\nimport { instance as localeProvider } from '../LocaleProvider';\n\nexport class TradeReport extends Window {\n  #cities: CityData[];\n  #dataObserver: DataObserver;\n  #portal: Portal;\n  #transport: Transport;\n\n  constructor(player: Player, portal: Portal, transport: Transport) {\n    super('Trade report', s('<div class=\"loading\"></div>'), {\n      classes: 'trade-report',\n    });\n\n    this.#cities = player.cities;\n    this.#dataObserver = new DataObserver(\n      [\n        player.id,\n        ...player.cities.flatMap(({ id, build, growth }: CityData) => [\n          id,\n          growth.id,\n          build.id,\n        ]),\n      ],\n      (data) => {\n        const player = (data as GameData).player;\n\n        this.#cities = player.cities;\n\n        this.#dataObserver.setIds([\n          player.id,\n          ...player.cities.flatMap(({ id, build, growth }: CityData) => [\n            id,\n            growth.id,\n            build.id,\n          ]),\n        ]);\n\n        this.update();\n      }\n    );\n    this.#portal = portal;\n    this.#transport = transport;\n\n    this.update();\n  }\n\n  close() {\n    this.#dataObserver.dispose();\n\n    return super.close();\n  }\n\n  async update() {\n    const goldIcon = await assetStore\n        .getScaled(`./assets/${knownIcons.Gold}`, 2)\n        .then((image) => `<img src=\"${image.toDataURL('image/png')}\">`),\n      cityList = s(`<table class=\"city-list\"></table>`),\n      improvementList = s(`<table class=\"improvement-list\"></table>`),\n      improvements: {\n        [key: string]: {\n          count: number;\n          cost: number;\n        };\n      } = {},\n      [totalIncome, totalSpend, totalGold] = this.#cities.reduce(\n        ([totalIncome, totalSpend, totalGold], city: CityData) => {\n          city.yields.forEach((cityYield) => {\n            if (cityYield._ === 'CityImprovementMaintenanceGold') {\n              const improvement = (cityYield as CityImprovementMaintenanceGold)\n                .cityImprovement;\n\n              if (!(improvement._ in improvements)) {\n                improvements[improvement._] = {\n                  count: 0,\n                  cost: cityYield.value,\n                };\n              }\n\n              improvements[improvement._].count++;\n            }\n          });\n\n          const [cityGold, used, free] = yieldData(city, 'Gold'),\n            row = document.createElement('tr');\n\n          h(row, {\n            click: () => new City(city, this.#portal, this.#transport),\n          });\n\n          row.append(\n            ...[\n              city.name,\n              `${goldIcon} ${free}${free !== cityGold ? ` [${cityGold}]` : ''}`,\n            ].map((content) => {\n              const element = document.createElement('td');\n\n              element.innerHTML = content;\n\n              return element;\n            })\n          );\n\n          cityList.append(row);\n\n          return [totalIncome + cityGold, totalSpend + used, totalGold + free];\n        },\n        [0, 0, 0]\n      );\n\n    improvementList.append(\n      ...Object.entries(improvements).map(([name, { count, cost }]) => {\n        const row = document.createElement('tr');\n\n        row.append(\n          ...[`${count} &times; ${name}`, `${goldIcon} ${count * -cost}`].map(\n            (content) => {\n              const element = document.createElement('td');\n\n              element.innerHTML = content;\n\n              return element;\n            }\n          )\n        );\n\n        return row;\n      })\n    );\n\n    super.update(\n      s(\n        '<div></div>',\n        s(\n          `<div class=\"two-column-wrapper\"></div>`,\n          s('<div></div>', cityList),\n          s(\n            '<div></div>',\n            improvementList,\n            s(`    <dl class=\"totals\">\n      <dt>Total income</dt>\n      <dd>${goldIcon} ${localeProvider.number(totalIncome)} / turn</dd>\n      <dt>Total cost</dt>\n      <dd>${goldIcon} ${localeProvider.number(Math.abs(totalSpend))} / turn</dd>\n      <dt>Total surplus</dt>\n      <dd>${goldIcon} ${localeProvider.number(totalGold)} / turn</dd>\n    </dl>\n`)\n          )\n        )\n      )\n    );\n  }\n}\n\nexport default TradeReport;\n", "import { IRegistry, IRegistryIterator, IConstructor } from './Registry';\n\nexport interface IEntityRegistry<T> extends IRegistry<T> {\n  accepts(entity: T): boolean;\n  entries(): T[];\n  every(iterator: IRegistryIterator<T>): boolean;\n  filter(iterator: IRegistryIterator<T>): T[];\n  forEach(iterator: (item: T, i: number) => void): void;\n  getBy<K extends keyof T>(\n    key: K,\n    value: T[K] extends (...args: any[]) => any ? ReturnType<T[K]> : T[K]\n  ): T[];\n  includes(item: T): boolean;\n  indexOf(item: T): number;\n  map(iterator: (item: T, i: number) => any): any[];\n  register(...entities: T[]): void;\n  some(iterator: IRegistryIterator<T>): boolean;\n  unregister(...entities: T[]): void;\n}\n\nexport class EntityRegistry<T = any> implements IEntityRegistry<T> {\n  #acceptedTypes: IConstructor<T>[] = [];\n  #entries: T[] = [];\n\n  constructor(...acceptedTypes: IConstructor<T>[]) {\n    this.#acceptedTypes.push(...acceptedTypes);\n  }\n\n  accepts(entity: T): boolean {\n    return this.#acceptedTypes.some(\n      (acceptedType: IConstructor<T>): boolean => entity instanceof acceptedType\n    );\n  }\n\n  entries(): T[] {\n    return this.#entries.slice();\n  }\n\n  every(iterator: IRegistryIterator<T>): boolean {\n    return this.entries().every(iterator);\n  }\n\n  filter(iterator: IRegistryIterator<T>): T[] {\n    return this.entries().filter(iterator);\n  }\n\n  forEach(iterator: (item: T, i: number) => void): void {\n    return this.entries().forEach(iterator);\n  }\n\n  getBy<K extends keyof T>(\n    key: K,\n    value: T[K] extends (...args: any[]) => any ? ReturnType<T[K]> : T[K]\n  ): T[] {\n    return this.filter((entity: T): boolean => {\n      const check = entity[key];\n\n      if (check instanceof Function) {\n        return check.bind(entity)() === value;\n      }\n\n      return entity[key] === value;\n    });\n  }\n\n  includes(item: T): boolean {\n    return this.#entries.includes(item);\n  }\n\n  indexOf(entity: T): number {\n    return this.#entries.indexOf(entity);\n  }\n\n  get length(): number {\n    return this.entries().length;\n  }\n\n  map(iterator: (item: T, i: number) => any): any[] {\n    return this.entries().map(iterator);\n  }\n\n  register(...entities: T[]): void {\n    entities.forEach((entity: T): void => {\n      if (!this.accepts(entity)) {\n        throw new TypeError(\n          `Registry#register: Invalid entity attempted to be registered: '${entity}'.`\n        );\n      }\n\n      if (!this.#entries.includes(entity)) {\n        this.#entries.push(entity);\n      }\n    });\n  }\n\n  some(iterator: IRegistryIterator<T>): boolean {\n    return this.entries().some(iterator);\n  }\n\n  unregister(...entities: T[]): void {\n    entities.forEach((entity: T) => {\n      const index = this.#entries.indexOf(entity);\n\n      if (index > -1) {\n        this.#entries.splice(index, 1);\n      }\n    });\n  }\n}\n\nexport default EntityRegistry;\n", "export class GameOption {\n  #key: string;\n  #value: any;\n\n  constructor(key: string, value: any) {\n    this.#key = key;\n    this.#value = value;\n  }\n\n  key(): string {\n    return this.#key;\n  }\n\n  value(): any {\n    return this.#value;\n  }\n}\n\nexport default GameOption;\n", "import EntityRegistry from '@civ-clone/core-registry/EntityRegistry';\nimport GameOption from './GameOption';\n\nexport class GameOptionsRegistry extends EntityRegistry<GameOption> {\n  constructor() {\n    super(GameOption);\n  }\n\n  get(key: string): any {\n    const [option] = this.getBy('key', key);\n\n    if (!option) {\n      return null;\n    }\n\n    return option.value();\n  }\n\n  set(key: string, value: any): void {\n    const existing = this.getBy('key', key);\n    if (existing.length) {\n      this.unregister(...existing);\n    }\n\n    this.register(new GameOption(key, value));\n  }\n}\n\nexport const instance = new GameOptionsRegistry();\n\nexport default GameOptionsRegistry;\n", "import Window from './Window';\nimport { h } from '../lib/html';\nimport { instance as options } from '../GameOptionsRegistry';\nimport { s } from '@dom111/element';\n\nexport class GameOptions extends Window {\n  constructor() {\n    super(\n      'Options',\n      s(\n        `<div></div>`,\n        s(\n          `<label>Auto End of Turn?</label>`,\n          (() => {\n            const input = s<HTMLInputElement>(\n              `<input type=\"checkbox\"${\n                options.get('autoEndOfTurn') ? ' checked' : ''\n              }>`\n            );\n\n            return h(input, {\n              change: () => options.set('autoEndOfTurn', input.checked),\n            });\n          })()\n        )\n      )\n    );\n\n    this.addClass('game-options');\n  }\n}\n\nexport default GameOptions;\n", "import City from './City';\nimport UnitSelectionWindow from './UnitSelectionWindow';\nimport Portal from './Portal';\nimport { Tile, Unit } from '../types';\nimport { on, onEach } from '@dom111/element';\nimport UnitActionMenu from './UnitActionMenu';\n\nexport class GamePortal extends Portal {\n  #activeUnit: Unit | null = null;\n  #showActionMenuTimeout: number | null = null;\n\n  protected bindEvents(): void {\n    on(this.canvas(), 'pointerup', (event) => {\n      const realTarget = document.elementFromPoint(event.pageX, event.pageY);\n\n      if (realTarget?.matches('.unit-actions *')) {\n        return;\n      }\n\n      this.clearTimeout();\n\n      const tile = this.tileFromOffsets(event.offsetX, event.offsetY),\n        playerTileUnits = tile.units.filter(\n          (unit: Unit) => unit.player.id === this.playerId()\n        );\n\n      if (tile.city && tile.city.player.id === this.playerId()) {\n        new City(tile.city, this, this.transport());\n      } else if (playerTileUnits.length) {\n        new UnitSelectionWindow(\n          playerTileUnits,\n          this.transport(),\n          (unit: Unit) => this.emit('activate-unit', unit)\n        );\n\n        return;\n      }\n\n      this.setCenter(tile.x, tile.y);\n    });\n\n    const showActionMenu = (tile: Tile, x: number, y: number) => {\n      this.clearTimeout();\n\n      if (this.#activeUnit === null) {\n        return;\n      }\n\n      this.#showActionMenuTimeout = window.setTimeout(\n        () =>\n          new UnitActionMenu(\n            this,\n            x,\n            y,\n            this.#activeUnit as Unit,\n            tile,\n            this.transport()\n          ),\n        350\n      );\n    };\n\n    // Prevent dragging address bar down by accident\n    on(this.canvas(), 'touchstart', (event) => {\n      event.preventDefault();\n      //\n      // const touch = event.touches[0];\n      //\n      // showActionMenu(\n      //   this.tileFromOffsets(\n      //     touch.pageX - this.canvas().offsetLeft,\n      //     touch.pageY - this.canvas().offsetTop\n      //   ),\n      //   touch.pageX,\n      //   touch.pageY\n      // );\n    });\n\n    on(this.canvas(), 'pointerdown', (event) => {\n      event.preventDefault();\n\n      showActionMenu(\n        this.tileFromOffsets(event.offsetX, event.offsetY),\n        event.x,\n        event.y\n      );\n    });\n  }\n\n  private clearTimeout() {\n    if (this.#showActionMenuTimeout === null) {\n      return;\n    }\n\n    window.clearTimeout(this.#showActionMenuTimeout);\n\n    this.#showActionMenuTimeout = null;\n  }\n\n  setActiveUnit(unit: Unit | null = null) {\n    this.#activeUnit = unit;\n  }\n\n  private tileFromOffsets(offsetX: number, offsetY: number): Tile {\n    const centerTile = this.center(),\n      canvasCenterOffset = {\n        x: Math.floor(this.canvas().width / 2 - this.tileSize() / 2),\n        y: Math.floor(this.canvas().height / 2 - this.tileSize() / 2),\n      },\n      x =\n        centerTile.x +\n        Math.trunc(\n          ((offsetX - canvasCenterOffset.x) / this.tileSize() +\n            this.world().width()) %\n            this.world().width()\n        ),\n      y =\n        centerTile.y +\n        Math.trunc(\n          ((offsetY - canvasCenterOffset.y) / this.tileSize() +\n            this.world().height()) %\n            this.world().height()\n        );\n\n    return this.world().get(x, y);\n  }\n}\n\nexport default GamePortal;\n", "import { PopupMenu, PopupMenuAction } from './PopupMenu';\nimport { Tile, Unit as UnitData, UnitAction } from '../types';\nimport Transport from '../Transport';\nimport { off, on } from '@dom111/element';\nimport ConfirmationWindow from './ConfirmationWindow';\n\nconst buildActions = (\n  tile: Tile,\n  unit: UnitData,\n  transport: Transport\n): PopupMenuAction[] => {\n  let actions: UnitAction[] = [];\n\n  if (tile === unit.tile) {\n    actions = unit.actions;\n  }\n\n  const [neighbouringTileDetails] = Object.entries(\n    unit.actionsForNeighbours\n  ).filter(([, actions]) => {\n    const [action] = actions;\n\n    if (!action) {\n      return false;\n    }\n\n    return action.to === tile;\n  });\n\n  const [, neighbouringTileActions] = neighbouringTileDetails ?? [];\n\n  if (neighbouringTileActions) {\n    actions = neighbouringTileActions;\n  }\n\n  // TODO: when GoTo is a thing, set that here\n  // if (actions.length === 0) {\n  //   actions = [];\n  // }\n\n  return actions.map((action) => {\n    const perform = () =>\n      transport.send('action', {\n        name: 'ActiveUnit',\n        id: unit.id,\n        unitAction: action._,\n        target: action.to.id,\n      });\n\n    if (['SneakAttack', 'SneakCaptureCity'].includes(action._)) {\n      return {\n        label: action._,\n        action: () =>\n          new ConfirmationWindow(\n            'Sneak attack!',\n            `Are you sure you want to perform a ${action._}?`,\n            () => perform()\n          ),\n      };\n    }\n\n    return {\n      label: action._,\n      action: () => perform(),\n    };\n  });\n};\n\n// TODO: This won't work as a private property of UnitActionMenu... Why?\nlet bodyListener: (event: PointerEvent) => void = () => {};\n\nexport class UnitActionMenu extends PopupMenu {\n  constructor(\n    launcher: any,\n    centerX: number,\n    centerY: number,\n    unit: UnitData,\n    tile: Tile,\n    transport: Transport\n  ) {\n    super(launcher, centerX, centerY, buildActions(tile, unit, transport), {\n      align: 'center',\n    });\n\n    this.addClass('unit-actions');\n  }\n\n  build() {\n    bodyListener = (event: PointerEvent) => {\n      const target = document.elementFromPoint(event.pageX, event.pageY);\n\n      if (!target?.matches('.popup-menu button')) {\n        return;\n      }\n\n      event.preventDefault();\n\n      target.dispatchEvent(new PointerEvent('pointerup'));\n    };\n\n    on(document.body, 'pointerup', bodyListener);\n\n    super.build();\n  }\n\n  remove() {\n    super.remove();\n\n    off(document.body, 'pointerup', bodyListener);\n  }\n}\n\nexport default UnitActionMenu;\n", "import TerrainAbstract from './TerrainAbstract';\nimport { Tile } from '../../types';\n\nexport class Terrain extends TerrainAbstract {\n  renderTile(tile: Tile): void {\n    super.renderTile(tile);\n\n    if (tile.terrain._ === 'Unknown') {\n      return;\n    }\n\n    const { x, y } = tile;\n\n    if (tile.goodyHut !== null) {\n      this.drawImage('map/hut', x, y);\n    }\n  }\n}\n\nexport default Terrain;\n", "export interface IIntervalHandler {\n  check(): void;\n  clear(): void;\n  off(handler: () => void): void;\n  on(handler: () => void): void;\n  pause(): void;\n  isPaused(): boolean;\n  resume(): void;\n}\n\nexport class IntervalHandler implements IIntervalHandler {\n  #paused: boolean = false;\n  #stack: (() => void)[] = [];\n\n  constructor(tick: number = 500) {\n    setInterval(() => this.check(), tick);\n  }\n\n  check(): void {\n    if (this.#paused) {\n      return;\n    }\n\n    this.#stack.forEach((item) => item());\n  }\n\n  clear(): void {\n    this.#stack = [];\n  }\n\n  off(handler: () => void): void {\n    this.#stack = this.#stack.filter((item) => item !== handler);\n  }\n\n  on(handler: () => void): void {\n    this.#stack.push(handler);\n  }\n\n  pause(): void {\n    this.#paused = true;\n  }\n\n  isPaused(): boolean {\n    return this.#paused;\n  }\n\n  resume(): void {\n    this.#paused = false;\n  }\n}\n\nexport default IntervalHandler;\n", "import { Element, s } from '@dom111/element';\nimport CustomiseWorldWindow from './CustomiseWorldWindow';\nimport EarthWindow from './EarthWindow';\nimport ImportAssetsWindow from './ImportAssetsWindow';\nimport NewGameWindow from './NewGameWindow';\nimport ReleaseWindow from './ReleaseWindow';\nimport Transport from '../Transport';\nimport { assetStore } from '../AssetStore';\nimport { h } from '../lib/html';\nimport { mappedKeyFromEvent } from '../lib/mappedKey';\nimport { version } from '../../../../build.json';\n\nexport class MainMenu extends Element {\n  #transport: Transport;\n\n  constructor(element: HTMLElement, transport: Transport) {\n    super(element);\n\n    this.#transport = transport;\n\n    this.build();\n\n    this.addClass('active');\n  }\n\n  async build(showQuit = false) {\n    const hasAssets = await assetStore.hasAllAssets();\n\n    if (!hasAssets) {\n      console.log('Missing assets:');\n      console.log(await assetStore.missingAssets());\n    }\n\n    this.append(\n      h(\n        s(\n          '<nav></nav>',\n          h(\n            s(\n              `<button autofocus${\n                hasAssets ? '' : ' hidden'\n              }>Start a New Game</button>`\n            ),\n            {\n              click: () => {\n                new NewGameWindow(this.#transport, () => this.remove());\n              },\n            }\n          ),\n          h(s(`<button${hasAssets ? '' : ' hidden'}>Earth</button>`), {\n            click: () => new EarthWindow(this.#transport, () => this.remove()),\n          }),\n          h(\n            s(`<button${hasAssets ? '' : ' hidden'}>Customise World</button>`),\n            {\n              click: async () =>\n                new CustomiseWorldWindow(this.#transport, () => this.remove()),\n            }\n          ),\n          h(s(`<button>Import Assets</button>`), {\n            click: () => new ImportAssetsWindow(),\n          }),\n          h(s(`<button${showQuit ? '' : ' hidden'}>Quit</button>`), {\n            click: () => {\n              this.remove();\n\n              this.#transport.send('quit', null);\n            },\n          })\n        ),\n        {\n          keydown(event: KeyboardEvent) {\n            const currentTarget = document.activeElement,\n              key = mappedKeyFromEvent(event);\n\n            if (\n              currentTarget === null ||\n              !currentTarget.matches('#mainmenu nav button')\n            ) {\n              return;\n            }\n\n            if (key === 'ArrowDown' && currentTarget.nextElementSibling) {\n              (currentTarget.nextElementSibling as HTMLElement).focus();\n            }\n\n            if (key === 'ArrowUp' && currentTarget.previousElementSibling) {\n              (currentTarget.previousElementSibling as HTMLElement).focus();\n            }\n          },\n        }\n      ),\n      s(\n        `<footer></footer>`,\n        h(s(`<a href=\"#releases\">version: ${version}</a>`), {\n          click(event) {\n            event.preventDefault();\n\n            new ReleaseWindow();\n          },\n        })\n      )\n    );\n  }\n\n  remove(): void {\n    this.removeClass('active');\n\n    setTimeout((): void => super.remove(), 2000);\n  }\n}\n\nexport default MainMenu;\n", "export interface RequestInterface<Args extends any[], Return extends any> {\n  args(): Args;\n  channel(): string;\n}\n\nexport type RequestArgs<RequestType extends Request> =\n  RequestType extends Request<infer Args> ? Args : never;\nexport type RequestReturn<RequestType extends Request> =\n  RequestType extends Request<any[], infer Return> ? Return : never;\n\nexport class Request<Args extends any[] = any[], Return extends any = any>\n  implements RequestInterface<Args, Return>\n{\n  #args: Args;\n  #channel: string;\n\n  constructor(channel: string, ...args: Args) {\n    this.#args = args;\n    this.#channel = channel;\n  }\n\n  args(): Args {\n    return this.#args;\n  }\n\n  channel(): string {\n    return this.#channel;\n  }\n}\n\nexport default Request;\n", "import Request from '../Request';\n\nexport class Options<Key extends string> extends Request<\n  [Key[]],\n  Record<Key, any>\n> {\n  constructor(args: Key[]) {\n    super('getOptions', args);\n  }\n}\n\nexport default Options;\n", "import Options from '../../Engine/Requests/Options';\nimport Request from '../../Engine/Request';\nimport Transport from '../Transport';\nimport Window from './Window';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\n\ntype FinishedHandler = () => void;\n\nexport class CustomiseWorldWindow extends Window {\n  #onFinished?: FinishedHandler;\n  #transport: Transport;\n\n  constructor(transport: Transport, onFinished?: FinishedHandler) {\n    super('Customise world', s('<div class=\"customise-world\"></div>'));\n\n    this.#onFinished = onFinished;\n    this.#transport = transport;\n\n    this.init();\n  }\n\n  build(): void {\n    super.build();\n\n    this.init();\n  }\n\n  async init(): Promise<void> {\n    const existingValues = await this.#transport.request(\n        new Options([\n          'players',\n          'height',\n          'width',\n          'landCoverage',\n          'landSize',\n          'maxIterations',\n        ])\n      ),\n      playersInput = s<HTMLInputElement>(\n        `<input name=\"players\" type=\"number\" value=\"${\n          existingValues.players ?? 7\n        }\" step=\"1\" min=\"1\" max=\"20\">`\n      ),\n      heightInput = s<HTMLInputElement>(\n        `<input name=\"height\" type=\"number\" value=\"${\n          existingValues.height ?? 60\n        }\" step=\"1\" min=\"1\">`\n      ),\n      widthInput = s<HTMLInputElement>(\n        `<input name=\"width\" type=\"number\" value=\"${\n          existingValues.width ?? 80\n        }\" step=\"1\" min=\"1\">`\n      ),\n      landCoverageInput = s<HTMLInputElement>(\n        `<input name=\"landCoverage\" type=\"number\" value=\"${\n          existingValues.landCoverage ?? 0.4\n        }\" step=\"0.01\" min=\"0\">`\n      ),\n      landSizeInput = s<HTMLInputElement>(\n        `<input name=\"landSize\" type=\"number\" value=\"${\n          existingValues.landSize ?? 0.2\n        }\" step=\"0.01\" min=\"0\">`\n      ),\n      maxIterationsInput = s<HTMLInputElement>(\n        `<input name=\"maxIterations\" type=\"number\" value=\"${\n          existingValues.maxIterations ?? 20\n        }\" step=\"1\" min=\"1\">`\n      ),\n      submit = async () => {\n        this.close();\n\n        await this.#transport.request(\n          new Request('setOptions', {\n            players: playersInput.value,\n            height: heightInput.value,\n            width: widthInput.value,\n            landCoverage: landCoverageInput.value,\n            landSize: landSizeInput.value,\n            maxIterations: maxIterationsInput.value,\n          })\n        );\n\n        this.#transport.send('start');\n\n        if (this.#onFinished) {\n          this.#onFinished();\n        }\n      };\n\n    this.update(\n      s(\n        '<div class=\"customise-world\"></div>',\n        s('<div class=\"option\"><label>Players</label></div>', playersInput),\n        s('<div class=\"option\"><label>Height</label></div>', heightInput),\n        s('<div class=\"option\"><label>Width</label></div>', widthInput),\n        s(\n          '<div class=\"option\"><label>Land coverage</label></div>',\n          landCoverageInput\n        ),\n        s('<div class=\"option\"><label>Land size</label></div>', landSizeInput),\n        s(\n          '<div class=\"option\"><label>Max iterations</label></div>',\n          maxIterationsInput\n        ),\n        h(s('<button>Build</button>'), {\n          click: () => submit(),\n        })\n      )\n    );\n\n    this.on('keydown', (event) => {\n      if (event.key === 'Enter') {\n        submit();\n      }\n    });\n  }\n}\n\nexport default CustomiseWorldWindow;\n", "import {\n  SelectionWindow,\n  SelectionWindowOption,\n  SelectionWindowOptions,\n} from './SelectionWindow';\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    selection: CustomEvent<string>;\n  }\n}\n\nexport class MandatorySelection extends SelectionWindow {\n  constructor(\n    title: string,\n    optionList: SelectionWindowOption[],\n    onChoose: (selection: string) => void,\n    body: string | Node | null = 'Please choose one of the following:',\n    options: SelectionWindowOptions = {\n      canClose: false,\n      displayAll: false,\n    }\n  ) {\n    super(title, optionList, onChoose, body, {\n      ...options,\n      displayAll: true,\n    });\n  }\n\n  display(): Promise<string> {\n    return new Promise<string>((resolve) => {\n      this.on('selection', ({ detail }) => resolve(detail));\n\n      super.display();\n    });\n  }\n}\n\nexport default MandatorySelection;\n", "import MandatorySelection from './MandatorySelection';\nimport Transport from '../Transport';\nimport Request from '../../Engine/Request';\n\nexport type FinishedHandler = () => void;\n\nexport class NewGameWindow extends MandatorySelection {\n  constructor(transport: Transport, onFinished?: FinishedHandler) {\n    // TODO: take the number from Engine options.\n    super(\n      'How many players?',\n      [\n        {\n          label: '7 civilizations',\n          value: 7,\n        },\n        {\n          label: '6 civilizations',\n          value: 6,\n        },\n        {\n          label: '5 civilizations',\n          value: 5,\n        },\n        {\n          label: '4 civilizations',\n          value: 4,\n        },\n        {\n          label: '3 civilizations',\n          value: 3,\n        },\n      ],\n      async (selection) => {\n        this.close();\n\n        await transport.request(\n          new Request('setOptions', {\n            width: 80,\n            height: 60,\n            players: parseInt(selection, 10),\n          })\n        );\n\n        if (onFinished) {\n          await onFinished();\n        }\n\n        transport.send('start', null);\n      }\n    );\n  }\n}\n\nexport default NewGameWindow;\n", "import { FinishedHandler, NewGameWindow } from './NewGameWindow';\nimport Transport from '../Transport';\nimport Request from '../../Engine/Request';\n\nexport class EarthWindow extends NewGameWindow {\n  constructor(transport: Transport, onFinished?: FinishedHandler) {\n    super(transport, async () => {\n      if (onFinished) {\n        await onFinished();\n      }\n\n      await transport.request(\n        new Request('setOptions', {\n          width: 80,\n          height: 50,\n          earth: true,\n        })\n      );\n    });\n  }\n}\n\nexport default EarthWindow;\n", "export class BinFile {\n  private blob: string | null = null;\n  private ptr: number = -1;\n\n  fromString(content: string, callback: (...args: any[]) => any) {\n    this.blob = content;\n    this.ptr = 0;\n    this.decode(callback);\n  }\n\n  getUByte() {\n    return (this.blob as string).charCodeAt(this.ptr++);\n  }\n\n  getUShort() {\n    const b1 = this.getUByte(),\n      b2 = this.getUByte();\n\n    return (b2 << 8) + b1;\n  }\n\n  getShort() {\n    return ((this.getUShort() + 0x8000) % 0x10000) - 0x8000;\n  }\n\n  getString(length: number) {\n    const start = this.ptr;\n    this.ptr += length;\n\n    return (this.blob as string).substr(start, length);\n  }\n\n  decode(callback: (...args: any[]) => any): void {\n    if (this.blob === null) {\n      console.warn('file has not been loaded!');\n\n      return;\n    }\n\n    console.warn('The decode function should be overwritten');\n    if (callback) callback();\n  }\n}\n\nexport default BinFile;\n", "export class LZWDictionary {\n  private dicTable: number[][] | null[] = [];\n  private dicSize: number;\n  private curPos: number;\n\n  constructor(maxBits: number) {\n    this.dicTable = [];\n    this.dicSize = 0x1 << maxBits;\n\n    for (let i = 0; i < this.dicSize; i++) {\n      if (i < 256) {\n        this.dicTable[i] = [i];\n      } else {\n        this.dicTable[i] = null;\n      }\n    }\n\n    this.curPos = 0x0101;\n  }\n\n  getEntry(pos: number): number[] | null {\n    return pos < this.curPos ? this.dicTable[pos] : null;\n  }\n\n  isFull() {\n    return this.curPos === this.dicTable.length;\n  }\n\n  getCurPos() {\n    return this.curPos;\n  }\n\n  addEntry(entry: number[]) {\n    if (this.curPos < this.dicTable.length) {\n      this.dicTable[this.curPos] = entry;\n      this.curPos++;\n    }\n\n    return this.curPos - 1;\n  }\n}\n\nexport default LZWDictionary;\n", "import LZWDictionary from './LZWDictionary';\n\nexport class LZW {\n  //Extracts a series of integers from the byte array\n  static parseByteStreamToIndexes(\n    binFile: { getUByte: () => number },\n    remainingCodedBytes: number,\n    uByteMode: number\n  ) {\n    const parsedIndexes = []; //ArrayList<Integer> parsedIndexes = new ArrayList<Integer>();\n\n    let usableBits = 0,\n      usableBitCount = 0,\n      indicatorLength = 1 /* to increment with ++; rule is that 8+indicatorLength must be <= uByteMode, otherwise reset */,\n      indicatorFlag = 0x001 /* to increment with <<=1 followed by |= 1 */,\n      nextThreshold = 0x0100 /*256*/ /* to increment with <<=1, or *=2 */,\n      decodedCounter = 0,\n      index = 0;\n\n    while (remainingCodedBytes > 0) {\n      /* get enough coded bits to work with */\n      while (usableBitCount < 8 + indicatorLength) {\n        usableBits |= binFile.getUByte() << usableBitCount;\n        remainingCodedBytes--;\n        usableBitCount += 8;\n      }\n\n      /* decode bytes and indicators */\n      while (usableBitCount >= 8 + indicatorLength) {\n        //Builds out a bit screen that is of size 8 + the number of indicator bits and ors it with current set of usable bits\n        index = usableBits & (((indicatorFlag << 8) & 0xff00) | 0x00ff);\n\n        usableBits >>= 8 + indicatorLength; //Right-shift out the used bits\n        usableBitCount -= 8 + indicatorLength; //Decrement the usableBitCount by the number of bits used\n\n        decodedCounter++; //Keep track of how many things we have decoded to ensure threshold isn't reached\n\n        if (decodedCounter == nextThreshold) {\n          //If threshold is reached...\n          decodedCounter = 0;\n          indicatorLength += 1; // to increment with ++; rule is that 8+indicatorLength must be <= uByteMode, otherwise reset\n          indicatorFlag <<= 1;\n          indicatorFlag |= 1; // left-shift bitmask and add another 1 (e.g. 0001 > 0011 > 0111)\n          nextThreshold <<= 1; //Double the next threshold\n\n          if (8 + indicatorLength > uByteMode) {\n            decodedCounter = 0;\n            indicatorLength = 1;\n            indicatorFlag = 0x001;\n            nextThreshold = 0x0100 /*256*/;\n          }\n        }\n        parsedIndexes.push(index);\n      }\n    }\n\n    return parsedIndexes;\n  }\n\n  //Decodes the integers into byte-level data using a dictionary look-up\n  static decode(inputData: any, dicIndexMaxBits: number) {\n    dicIndexMaxBits = dicIndexMaxBits || 0x0b;\n\n    let codedData = inputData; //stringToNumArray(inputData); //Convert string to an array of numbers\n\n    const decodedData: number[] = [];\n\n    while (codedData.length > 0) {\n      const dic = new LZWDictionary(dicIndexMaxBits),\n        plainData = [codedData[0]];\n\n      let oldCode = codedData[0],\n        buffer = dic.getEntry(oldCode),\n        character = oldCode,\n        newCode;\n\n      let i = 0;\n      while (!dic.isFull() && i++ < codedData.length - 1) {\n        newCode = codedData[i];\n\n        let p: number[] | null = [];\n\n        if (newCode >= dic.getCurPos()) {\n          p = dic.getEntry(oldCode);\n\n          if (p === null) {\n            console.error(\n              `No dictionary entry in LZW special case: oldCode=${oldCode}; newCode=${newCode}; i=${i}; buffer=${buffer}`\n            );\n          }\n\n          p = [...(p ?? []), character]; //create a copy of the array p to not overwrite the dic entry and append character=\n        } else {\n          // Get entry p for coded index codedData[i]\n          p = dic.getEntry(codedData[i]);\n        }\n\n        plainData.push.apply(plainData, p as number[]); //Merge entry p onto the plainData output\n        character = (p as number[])[0]; // Get first char of p\n        dic.addEntry((buffer as number[]).concat(character)); // Add new entry to dictionary as buffer+c\n        oldCode = newCode;\n        buffer = dic.getEntry(oldCode);\n      }\n\n      decodedData.push.apply(decodedData, plainData); //First append plainData to decodedData\n      codedData = codedData.slice(i + 1); //Second truncate codedData to keep only undecoded stuff before continuing the loop\n    }\n\n    return decodedData;\n  }\n\n  //Run-length decodes around special character 0x90\n  static RLEDecode(byteArr: number[]) {\n    const opt = [];\n\n    let lastChr = 0,\n      isFlag = false;\n\n    for (let i = 0; i < byteArr.length; i++) {\n      const chr = byteArr[i];\n\n      if (isFlag) {\n        if (chr == 0x00) {\n          lastChr = 0x90;\n          opt.push(0x90);\n        } else {\n          for (let j = 0; j < chr - 1; j++) {\n            opt.push(lastChr);\n          }\n        }\n        isFlag = false;\n      } else {\n        if (chr == 0x90) {\n          isFlag = true;\n        } else {\n          opt.push(chr);\n          lastChr = chr;\n        }\n      }\n    }\n\n    return opt;\n  }\n}\n\nexport default LZW;\n", "export const lowerNibble = (byte: number): number => byte & 0xf;\n\nexport default lowerNibble;\n", "export const upperNibble = (byte: number): number => (byte & 0xf0) >> 4;\n\nexport default upperNibble;\n", "import BinFile from './BinFile';\nimport LZW from './LZW';\nimport lowerNibble from './lib/lowerNibble';\nimport upperNibble from './lib/upperNibble';\n\ndeclare type RGBA = {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n};\n\nexport class PicImage extends BinFile {\n  private palette: RGBA[] = [];\n  private palette16: RGBA[] = [\n    { r: 0xff, g: 0xff, b: 0xff, a: 0x00 }, // 0 - transparent\n    { r: 0xaa, g: 0x00, b: 0x00, a: 0xff }, // 1\n    { r: 0x00, g: 0xaa, b: 0x00, a: 0xff }, // 2\n    { r: 0xaa, g: 0xaa, b: 0x00, a: 0xff }, // 3\n    { r: 0x00, g: 0x00, b: 0xaa, a: 0xff }, // 4\n    { r: 0x00, g: 0x00, b: 0x00, a: 0xff }, // 5\n    { r: 0x00, g: 0x55, b: 0xaa, a: 0xff }, // 6\n    { r: 0xaa, g: 0xaa, b: 0xaa, a: 0xff }, // 7\n    { r: 0x55, g: 0x55, b: 0x55, a: 0xff }, // 8\n    { r: 0xff, g: 0x55, b: 0x55, a: 0xff }, // 9\n    { r: 0x55, g: 0xff, b: 0x55, a: 0xff }, // A\n    { r: 0xff, g: 0xff, b: 0x55, a: 0xff }, // B\n    { r: 0x55, g: 0x55, b: 0xff, a: 0xff }, // C\n    { r: 0xff, g: 0x55, b: 0xff, a: 0xff }, // D\n    { r: 0x55, g: 0xff, b: 0xff, a: 0xff }, // E\n    { r: 0xff, g: 0xff, b: 0xff, a: 0xff }, // F\n  ];\n\n  private imageData: null | number[] = null;\n  private imageHeight = 0;\n  private imageWidth = 0;\n  private byteMode = 0xb;\n\n  decode(callback: (...args: any[]) => any): void {\n    let id = this.getString(2),\n      length = this.getShort();\n\n    if (id == 'M0') {\n      //Second part could be the VGA Palette information\n      this.getPaletteData();\n      id = this.getString(2);\n      length = this.getShort();\n    } else {\n      //If no palette information, let's create a random one\n      console.log('Creating a random color palette...');\n      for (let i = 0; i < 256; i++) {\n        if (i < 16) {\n          this.palette.push(this.palette16[i]);\n        } else {\n          this.palette.push({\n            r: Math.floor(Math.random() * 256),\n            g: Math.floor(Math.random() * 256),\n            b: Math.floor(Math.random() * 256),\n            a: 0xff,\n          });\n        }\n      }\n    }\n\n    if (id == 'X0') {\n      //Final part is image data, in this case VGA\n      this.getX0ImageData(length);\n    } else if (id == 'X1') {\n      //Final part is image data, in this case EGA\n      this.getX1ImageData(length);\n    } else {\n      //Data chunk is of an unknown type\n      console.error('\"' + id + '\" is an unknown chunk type');\n    }\n\n    if (callback) callback();\n  }\n\n  getPaletteData() {\n    const firstIndex = this.getUByte(),\n      lastIndex = this.getUByte(),\n      paletteLength = lastIndex - firstIndex + 1;\n\n    let seenBlack = false;\n\n    for (let i = 0; i < paletteLength; i++) {\n      const colour: RGBA = {\n        r: this.getUByte() * 4, // Each color is between 0 and 64, so to make it use entire\n        g: this.getUByte() * 4, // color space, multiply by 4. The higher-order bits may be used\n        b: this.getUByte() * 4, // for transparency flags, but that's unclear for now...\n        a: 0xff,\n      };\n\n      this.palette.push(colour);\n\n      if (colour.r === colour.g && colour.g === colour.b && colour.r === 0) {\n        // The first black is \"real\" black, the others are (or at least can be) transparency\n        if (!seenBlack) {\n          colour.a = 0;\n        }\n\n        seenBlack = true;\n      }\n    }\n\n    this.palette.push({\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n    });\n  }\n\n  getX0ImageData(length: number) {\n    this.imageWidth = this.getShort();\n    this.imageHeight = this.getShort();\n    this.byteMode = this.getUByte();\n\n    //Step #1: parse the remainder of the chunk into a set of integers with flags\n    const decompSourceData = LZW.parseByteStreamToIndexes(\n        this,\n        length - 5,\n        this.byteMode\n      ),\n      //Step #2: decode the data using the LZW algorithm\n      decompData = LZW.decode(decompSourceData, this.byteMode);\n\n    //Step #3: decode the final image data using Run-length decoding\n    this.imageData = LZW.RLEDecode(decompData);\n  }\n\n  getX1ImageData(length: number) {\n    this.getX0ImageData(length); //This works the same as x0 data, but each byte includes an upper and lower nibble entry with max 16\n\n    //Loop through each entry and separate into upper and lower nibbles\n    const oldImageData = this.imageData as number[];\n\n    this.imageData = [];\n\n    for (let i = 0; i < oldImageData.length; i++) {\n      this.imageData.push(lowerNibble(oldImageData[i]));\n      this.imageData.push(upperNibble(oldImageData[i]));\n    }\n\n    //set the palette to the hard-coded 16-color palette\n    this.palette = this.palette16;\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    destinationX: number = 0,\n    destinationY: number = 0\n  ) {\n    const canvasData = ctx.getImageData(\n      0,\n      0,\n      this.imageWidth,\n      this.imageHeight\n    );\n\n    let index = 0;\n\n    for (let y = 0; y < this.imageHeight; y++) {\n      for (let x = 0; x < this.imageWidth; x++) {\n        const colorIndex = (this.imageData as number[])[index],\n          canvasIndex = (x + y * this.imageWidth) * 4;\n\n        canvasData.data[canvasIndex] = this.palette[colorIndex].r;\n        canvasData.data[canvasIndex + 1] = this.palette[colorIndex].g;\n        canvasData.data[canvasIndex + 2] = this.palette[colorIndex].b;\n        canvasData.data[canvasIndex + 3] = this.palette[colorIndex].a;\n        index++;\n      }\n    }\n\n    ctx.putImageData(canvasData, destinationX, destinationY);\n  }\n\n  getPixel(x: number, y: number): number {\n    if (!this.imageData) {\n      return 0;\n    }\n\n    return this.imageData[x + this.imageWidth * y];\n  }\n}\n\nexport default PicImage;\n", "import { Canvas, CanvasRenderingContext2D } from 'canvas';\nimport PicImage from './PicImage';\n\ntype DefinitionData = {\n  height?: number;\n  width?: number;\n  x?: number;\n  y?: number;\n};\n\ntype DefinitionChild = DefinitionData & { name: string };\n\ntype DefinitionParent = DefinitionData & {\n  contents: DefinitionChild[];\n};\n\ntype Definition = {\n  [filename: string]: DefinitionParent[];\n};\n\ntype DefaultData = {\n  height: number;\n  width: number;\n  clear: {\n    r: number;\n    g: number;\n    b: number;\n  };\n};\n\nexport type ExtractData = {\n  defaults: DefaultData;\n  files: {\n    [filename: string]: Definition;\n  };\n};\n\ntype ImageMap = {\n  name: string;\n  uri: string;\n};\n\nexport const extractSprites = (\n  content: string,\n  extractData: Definition,\n  defaults: DefaultData,\n  canvasProvider: (width: number, height: number) => Canvas | HTMLCanvasElement,\n  logger: (message: string) => void = (message) => console.log(message)\n): ImageMap[] => {\n  const canvas = canvasProvider(320, 200),\n    image = new PicImage(),\n    result: ImageMap[] = [];\n\n  image.fromString(content, () => {\n    image.draw(\n      canvas.getContext('2d', {\n        // @ts-ignore\n        willReadFrequently: true,\n      }) as CanvasRenderingContext2D\n    );\n\n    Object.entries(extractData).forEach(([path, definitionParents]) =>\n      definitionParents.forEach((definition) =>\n        definition.contents.forEach((content) => {\n          const object: { [key: string]: any } = {\n              ...defaults,\n              ...definition,\n              ...content,\n            },\n            filename = `./assets/${path + object.name}.png`,\n            contentCanvas = canvasProvider(object.width, object.height),\n            context = contentCanvas.getContext('2d', {\n              // @ts-ignore\n              willReadFrequently: true,\n            }) as CanvasRenderingContext2D;\n\n          context.clearRect(0, 0, object.width, object.height);\n          context.drawImage(\n            canvas,\n            object.x,\n            object.y,\n            object.width,\n            object.height,\n            0,\n            0,\n            object.width,\n            object.height\n          );\n\n          for (let x = 0; x < canvas.width; x++) {\n            for (let y = 0; y < canvas.height; y++) {\n              let imageData = context.getImageData(x, y, 1, 1).data;\n\n              if (\n                imageData[0] == object.clear.r &&\n                imageData[1] == object.clear.g &&\n                imageData[2] == object.clear.b\n              ) {\n                context.clearRect(x, y, 1, 1);\n              }\n            }\n          }\n\n          logger(`Processing ${filename}...`);\n          result.push({\n            name: filename,\n            uri: contentCanvas.toDataURL('image/png'),\n          });\n        })\n      )\n    );\n  });\n\n  return result;\n};\n\nexport default extractSprites;\n", "import {\n  ExtractData,\n  extractSprites,\n} from '@civ-clone/civ1-asset-extractor/extractSprites';\nimport Window from './Window';\nimport { assetStore } from '../AssetStore';\nimport extractData from '@civ-clone/civ1-asset-extractor/extract-data.json';\nimport { h } from '../lib/html';\nimport { s } from '@dom111/element';\n\nexport class ImportAssetsWindow extends Window {\n  #fileInput: HTMLInputElement;\n  #progressInformation: HTMLParagraphElement;\n\n  constructor() {\n    const fileInput = s<HTMLInputElement>('<input type=\"file\" multiple>'),\n      progressInformation = s<HTMLParagraphElement>(\n        '<p class=\"loading\" hidden></p>'\n      );\n\n    super(\n      'Import assets',\n      s(\n        `<div class=\"import-assets\"><p>Upload ${Object.keys(\n          extractData.files\n        ).join(\n          ', '\n        )} from the original Civilization files to extract assets (these will be stored locally). This process can take at least a few minutes.</p><div class=\"brave\" ${\n          // @ts-ignore\n          navigator?.brave ? '' : ' hidden'\n        }><p>It looks like you're using Brave and due to the use of <code>HTMLCanvasElement</code>'s <code>getImageData</code> and <code>toDataURL</code> functions, please put Shields down while importing, and playing, otherwise any colour-replaced icons won't look correct. <strong>Remember to put them back up after!</strong></p><p><a href=\"https://brave.com/privacy-updates/4-fingerprinting-defenses-2.0/#2-fingerprinting-protections-20-farbling-for-great-good\" target=\"_blank\">Read more about \"farbling\".</a></p></div></div>`,\n        s(\n          '<p></p>',\n          h(fileInput, {\n            change: (event) => this.handleFileUpload(event),\n          })\n        ),\n        progressInformation\n      )\n    );\n\n    this.#fileInput = fileInput;\n    this.#progressInformation = progressInformation;\n  }\n\n  async handleFileUpload(event: InputEvent) {\n    this.#progressInformation.removeAttribute('hidden');\n    this.#progressInformation.style.color = 'inherit';\n\n    const files = Array.from(\n        (event.target as HTMLInputElement).files ?? []\n      ) as File[],\n      filenames: string[] = files.map((file: File) => file.name),\n      expectedFilenames = Object.keys(extractData.files),\n      expectedMatches = expectedFilenames.map((key) => new RegExp(key, 'i'));\n\n    if (\n      !expectedMatches.every((expectedMatch) =>\n        filenames.some((filename) => filename.match(expectedMatch))\n      )\n    ) {\n      this.#progressInformation.style.color = '#f00';\n      this.#progressInformation.innerText = `Please provide all files to generate assets: ${expectedFilenames.join(\n        ', '\n      )}.`;\n\n      return;\n    }\n\n    this.#fileInput.setAttribute('disabled', '');\n    this.#progressInformation.innerText = 'Building image assets...';\n\n    const results: { name: string; uri: string }[] = [];\n\n    // Wait for...\n    await Promise.all(\n      // ...all files...\n      files.map(\n        async (file: File) =>\n          // ...to have been...\n          new Promise<void>((resolve) => {\n            const definitions = (extractData as ExtractData).files[\n              file.name.toUpperCase()\n            ];\n\n            if (!definitions) {\n              console.warn(`No definitions found for ${file.name}, skipping.`);\n\n              return;\n            }\n\n            const reader = new FileReader();\n\n            // ...loaded...\n            reader.addEventListener('load', async (event) => {\n              // ...the sprites extracted...\n              extractSprites(\n                event.target!.result as string,\n                definitions,\n                extractData.defaults,\n                (width, height) => {\n                  const canvas = document.createElement(\n                    'canvas'\n                  ) as HTMLCanvasElement;\n\n                  canvas.width = width;\n                  canvas.height = height;\n\n                  return canvas;\n                },\n                (message) => {\n                  this.#progressInformation.innerText = message;\n                }\n              ).forEach((record) => results.push(record));\n\n              resolve();\n            });\n\n            reader.readAsBinaryString(file);\n          })\n      )\n    );\n\n    this.#progressInformation.innerText = 'Writing to database...';\n\n    // ...and all results stored in IDB.\n    await Promise.all(results.map((record) => assetStore.set(record)));\n\n    if (!(await assetStore.hasAllAssets())) {\n      console.error('Something went wrong...');\n      this.#progressInformation.style.color = '#f00';\n      this.#progressInformation.innerText =\n        'Not all expected data was written. Might need to try again... Missing: ' +\n        (await assetStore.missingAssets()).join(', ');\n\n      this.#fileInput.removeAttribute('disabled');\n\n      return;\n    }\n\n    this.#progressInformation.innerText =\n      'Done! Please reload the page to utilise the fresh assets.';\n\n    // We need to reprocess everything and this is the lazy way...\n    location.reload();\n  }\n}\n\nexport default ImportAssetsWindow;\n", "import Window from './Window';\nimport { s } from '@dom111/element';\nimport releases from '../../../../changelog/releases.json';\nimport { instance as localeProvider } from '../LocaleProvider';\nimport { marked } from 'marked';\nimport exp from 'constants';\n\ninterface Release {\n  version: string;\n  date: string;\n  localChanges: string[];\n  externalChanges: {\n    [key: string]: {\n      status: 'added' | 'removed' | 'updated';\n      log: string[];\n    };\n  };\n}\n\nconst firstParentMatching = (\n  target: HTMLElement,\n  targetSelector: string\n): HTMLElement => {\n  while (!target?.matches(targetSelector)) {\n    if (!(target instanceof HTMLElement)) {\n      throw new TypeError(`Can't find a match for ${targetSelector}`);\n    }\n\n    target = target.parentElement as HTMLElement;\n  }\n\n  return target;\n};\n\nconst toggleExpanded = (target: Node | null, expectedSelector: string) => {\n  if (!(target instanceof HTMLElement) || !target.matches(expectedSelector)) {\n    return;\n  }\n\n  const targetIsVisible = target.getAttribute('aria-expanded') === 'true';\n\n  target.setAttribute('aria-expanded', targetIsVisible ? 'false' : 'true');\n};\n\nexport class ReleaseWindow extends Window {\n  constructor() {\n    super(\n      'Releases',\n      s(\n        `<section></section>`,\n        s(\n          `<div class=\"release-list\"></div>`,\n          ...(releases as Release[]).map((release, i) => {\n            const releaseDate = new Date(release.date);\n\n            return s(\n              `<div class=\"release\">\n  <h2>${\n    release.version\n  } - <time title=\"${releaseDate.toLocaleString()}\">${localeProvider.timeSince(\n                releaseDate\n              )}</time></h2>\n  \n  <div aria-expanded=\"${i === 0 ? 'true' : 'false'}\">\n    ${\n      release.localChanges.length > 0\n        ? `\n    <ul>\n      ${release.localChanges\n        .map(\n          (line) =>\n            `<li>${marked(line.replace(/^\\s*-\\s*/, '').trim(), {\n              sanitize: true,\n            })}</li>`\n        )\n        .join('\\n      ')}\n    </ul>\n  `\n        : ''\n    }\n    \n    ${\n      Object.keys(release.externalChanges).length > 0\n        ? `\n    <h3>External changes</h3>\n    \n    <dl>\n      ${Object.entries(release.externalChanges)\n        .map(\n          ([module, { status, log: changes }]) => `<dd>${status} ${module}</dd>\n      <dt aria-expanded=\"false\">\n        <ul>\n          ${(changes ?? [])\n            .map(\n              (change) =>\n                `<li>${marked(change.replace(/^\\s*-\\s*/, '').trim(), {\n                  sanitize: true,\n                })}</li>`\n            )\n            .join('\\n          ')}\n        </ul>\n      </dt>`\n        )\n        .join('\\n    ')}\n    </dl>\n  </div>\n`\n        : ''\n    }\n</div>`\n            );\n          })\n        )\n      ),\n      {\n        canMaximise: true,\n        canResize: true,\n        classes: 'releases',\n      }\n    );\n\n    this.on('click', (event) => {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (event.target.matches('dd, dd *')) {\n        toggleExpanded(\n          firstParentMatching(event.target, 'dd').nextElementSibling,\n          'dt'\n        );\n      }\n\n      if (event.target.matches('.release h2, .release h2 *')) {\n        toggleExpanded(\n          firstParentMatching(event.target, 'h2').nextElementSibling,\n          'div'\n        );\n      }\n    });\n  }\n}\n\nexport default ReleaseWindow;\n", "/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n", "import Map from './Map';\nimport Portal from './Portal';\nimport World from './World';\nimport { on } from '@dom111/element';\n\nexport class Minimap {\n  #context: CanvasRenderingContext2D;\n  #element: HTMLCanvasElement;\n  #layers: Map[];\n  #portal: Portal;\n  #world: World;\n\n  constructor(\n    element: HTMLCanvasElement,\n    world: World,\n    portal: Portal,\n    ...layers: Map[]\n  ) {\n    this.#element = element;\n    this.#world = world;\n    this.#portal = portal;\n    this.#layers = layers;\n\n    this.#context = this.#element.getContext('2d')!;\n\n    on(this.#element, 'click', (event) => {\n      const x = event.offsetX - this.#element.offsetLeft,\n        y = event.offsetY - this.#element.offsetTop,\n        tileX = Math.ceil(\n          (x / this.#element.offsetWidth) * this.#world.width()\n        ),\n        tileY = Math.ceil(\n          (y / this.#element.offsetHeight) * this.#world.height()\n        );\n\n      this.#portal.setCenter(tileX, tileY);\n      this.update();\n    });\n  }\n\n  update(): void {\n    const targetHeight =\n      this.#layers[0].canvas().height * (190 / this.#layers[0].canvas().width);\n\n    this.#element.height = targetHeight;\n    this.#context.clearRect(0, 0, 190, targetHeight);\n\n    this.#layers.forEach((layer) =>\n      this.#context.drawImage(layer.canvas(), 0, 0, 190, targetHeight)\n    );\n\n    const [start, end] = this.#portal.rawVisibleRange();\n\n    // TODO: draw the rectangle replicated when close to the sides\n    this.#context.lineWidth = 1;\n    this.#context.strokeStyle = '#fff';\n    this.#context.fillStyle = 'rgba(255, 255, 255, .2)';\n    this.#context.rect(\n      Math.floor((190 / this.#world.width()) * start.x),\n      Math.floor((targetHeight / this.#world.height()) * start.y),\n      Math.floor((190 / this.#world.width()) * (end.x - start.x)),\n      Math.floor((targetHeight / this.#world.height()) * (end.y - start.y))\n    );\n    this.#context.stroke();\n    this.#context.fill();\n  }\n}\n\nexport default Minimap;\n", "import NotificationWindow from './NotificationWindow';\n\nexport interface Notification {\n  message: string;\n  title?: string;\n}\n\nexport class Notifications {\n  #container: HTMLElement;\n  #notifications: Notification[] = [];\n\n  constructor(container: HTMLElement = document.body) {\n    this.#container = container;\n  }\n\n  receive(notification: Notification): void {\n    this.#notifications.push(notification);\n\n    this.check();\n  }\n\n  private check(): void {\n    const active = document.querySelector('.notificationWindow');\n\n    if (!this.#notifications.length || active) {\n      return;\n    }\n\n    const notification = this.#notifications.shift() as Notification;\n\n    this.publish(notification);\n  }\n\n  private publish(notification: Notification): void {\n    const notificationWindow = new NotificationWindow(\n      notification.title ?? 'Notification',\n      notification.message,\n      {\n        parent: this.#container,\n      }\n    );\n\n    notificationWindow.on('close', () => this.check());\n  }\n}\n\nexport default Notifications;\n", "import { City, Player } from '../types';\nimport { Element, s } from '@dom111/element';\nimport { reduceKnownYields } from '../lib/yieldMap';\nimport civilizationAttribute from './lib/civilizationAttribute';\nimport { instance as localeProvider } from '../LocaleProvider';\n\nexport class PlayerDetails extends Element {\n  #player: Player;\n\n  constructor(element: HTMLElement, player: Player) {\n    super(element);\n\n    this.#player = player;\n  }\n\n  build(): void {\n    this.empty();\n\n    const { civilization, treasuries, research, cities } = this.#player,\n      [goldTreasury] = treasuries.filter(\n        (treasury) => treasury.yield._ === 'Gold'\n      );\n\n    const [totalGold, totalResearch] = cities.reduce(\n        ([totalGold, totalResearch], city: City): [number, number] => {\n          // TODO: There must be a way to specify that the return array has the same number of elements as the arguments...\n          const [cityGold, cityResearch] = reduceKnownYields(\n            city.yields,\n            'Gold',\n            'Research'\n          );\n\n          return [totalGold + cityGold, totalResearch + cityResearch];\n        },\n        [0, 0]\n      ),\n      researchTurns = Math.ceil(\n        (research.cost.value - research.progress.value) / totalResearch\n      );\n\n    this.append(\n      s(\n        `<h3>${civilization.leader.name} of the ${civilizationAttribute(\n          civilization,\n          'people'\n        )} empire</h3>`\n      ),\n      s(\n        `<p><strong>Researching</strong><br/>${\n          research.researching\n            ? `${research.researching._} ${localeProvider.number(\n                research.progress.value\n              )} / ${localeProvider.number(\n                research.cost.value\n              )} (${localeProvider.number(\n                totalResearch\n              )} / turn - ${localeProvider.number(researchTurns)} turn${\n                researchTurns === 1 ? '' : 's'\n              })`\n            : `Nothing (${localeProvider.number(totalResearch)} / turn)`\n        }</p>`\n      ),\n      s(\n        `<p><strong>Treasury</strong><br/>${localeProvider.number(\n          goldTreasury.value\n        )} (${localeProvider.number(totalGold)} / turn)</p>`\n      )\n    );\n  }\n}\n\nexport default PlayerDetails;\n", "import { Element, s } from '@dom111/element';\nimport { Unit } from '../types';\n\nexport class UnitDetails extends Element {\n  #activeUnit: Unit | null;\n\n  constructor(element: HTMLElement, activeUnit: Unit | null) {\n    super(element);\n\n    this.#activeUnit = activeUnit;\n\n    this.build();\n  }\n\n  build(): void {\n    this.empty();\n\n    if (this.#activeUnit === null) {\n      return;\n    }\n\n    this.append(\n      s(\n        `<p>${this.#activeUnit._} (${this.#activeUnit.tile.x}, ${\n          this.#activeUnit.tile.y\n        })</p>`\n      ),\n      s(`<p>${this.#activeUnit.city?.name ?? 'NONE'}</p>`),\n      s(\n        `<p>${\n          Number.isInteger(this.#activeUnit.moves.value)\n            ? this.#activeUnit.moves.value\n            : this.#activeUnit.moves.value.toFixed(2)\n        } / ${this.#activeUnit.movement.value} moves</p>`\n      ),\n      s(\n        `<p>A: ${this.#activeUnit.attack.value} / D: ${\n          this.#activeUnit.defence.value\n        } / V: ${this.#activeUnit.visibility.value}</p>`\n      ),\n      s(\n        `<p>${this.#activeUnit.improvements\n          .map((improvement) => improvement._)\n          .join(', ')}</p>`\n      ),\n      s(\n        `<p>${this.#activeUnit.tile.terrain._}${\n          this.#activeUnit.tile.terrain.features\n            ? ' ' +\n              this.#activeUnit.tile.terrain.features\n                .map((feature) => feature._)\n                .join(', ')\n            : ''\n        }${\n          this.#activeUnit.tile.improvements.length\n            ? ' (' +\n              this.#activeUnit.tile.improvements\n                .map((improvement) => improvement._)\n                .join(', ') +\n              ')'\n            : ''\n        }</p>`\n      ),\n      s(\n        `<p>${this.#activeUnit.tile.units\n          .filter((unit) => unit !== this.#activeUnit)\n          .map((unit) => unit._)\n          .join(', ')}</p>`\n      )\n    );\n  }\n}\n\nexport default UnitDetails;\n", "import { Request, RequestArgs, RequestReturn } from './Request';\nimport {\n  Transport,\n  TransportData,\n  TransportReceiveHandler,\n  TransportSendArgs,\n} from './Transport';\n\nexport abstract class AbstractTransport<\n  DataMap extends {\n    [key: string]: TransportData;\n  }\n> implements Transport<DataMap>\n{\n  abstract receive<Channel extends keyof DataMap>(\n    channel: Channel,\n    handler: TransportReceiveHandler<DataMap[Channel]>\n  ): void;\n\n  abstract receiveOnce<Channel extends keyof DataMap>(\n    channel: Channel,\n    handler: TransportReceiveHandler<DataMap[Channel]>\n  ): void;\n\n  async request<\n    RequestType extends Request,\n    Args extends any[] = RequestArgs<RequestType>,\n    Return extends any = RequestReturn<RequestType>\n  >(request: Request): Promise<Return> {\n    return new Promise<Return>((resolve) => {\n      this.send(request.channel(), request.args()[0]);\n\n      this.receiveOnce(request.channel(), (value: Return) => resolve(value));\n    });\n  }\n\n  abstract send<Channel extends keyof DataMap>(\n    channel: Channel,\n    data: TransportSendArgs<DataMap[Channel]>\n  ): void;\n}\n\nexport default AbstractTransport;\n", "import { IConstructor } from '@civ-clone/core-registry/Registry';\n\nexport interface IAdditionalData {\n  data(...args: any[]): any;\n  key(): string;\n  type(): IConstructor;\n}\n\nexport class AdditionalData implements IAdditionalData {\n  #key: string;\n  #provider: (...args: any[]) => any;\n  #type: IConstructor;\n\n  constructor(\n    type: IConstructor,\n    key: string,\n    provider: (...args: any[]) => any\n  ) {\n    this.#key = key;\n    this.#provider = provider;\n    this.#type = type;\n  }\n\n  data(...args: any[]): any {\n    return this.#provider(...args);\n  }\n\n  key(): string {\n    return this.#key;\n  }\n\n  type(): IConstructor {\n    return this.#type;\n  }\n}\n\nexport default AdditionalData;\n", "import {\n  EntityRegistry,\n  IEntityRegistry,\n} from '@civ-clone/core-registry/EntityRegistry';\nimport AdditionalData from './AdditionalData';\nimport { IConstructor } from '@civ-clone/core-registry/Registry';\n\nexport interface IAdditionalDataRegistry\n  extends IEntityRegistry<AdditionalData> {\n  getByType(type: IConstructor): AdditionalData[];\n}\n\nexport class AdditionalDataRegistry\n  extends EntityRegistry<AdditionalData>\n  implements IAdditionalDataRegistry\n{\n  constructor() {\n    super(AdditionalData);\n  }\n\n  getByType(type: IConstructor): AdditionalData[] {\n    return this.filter(\n      (additionalData: AdditionalData): boolean =>\n        additionalData.type() === type ||\n        Object.prototype.isPrototypeOf.call(additionalData.type(), type) ||\n        Object.prototype.isPrototypeOf.call(\n          additionalData.type().prototype,\n          type\n        )\n    );\n  }\n}\n\nexport const instance: AdditionalDataRegistry = new AdditionalDataRegistry();\n\nexport default AdditionalDataRegistry;\n", "import DataObject from '../DataObject';\n\nexport const generateInheritance = (object: DataObject | typeof DataObject) => {\n  let constructor =\n    object instanceof DataObject\n      ? object.sourceClass<typeof DataObject>()\n      : object;\n\n  const stack: (typeof DataObject)[] = [];\n\n  while (constructor instanceof Function) {\n    stack.push(constructor);\n\n    constructor = Object.getPrototypeOf(constructor);\n  }\n\n  return stack.map((constructor) => constructor.name);\n};\n\nexport default generateInheritance;\n", "import {\n  AdditionalDataRegistry,\n  instance as additionalDataRegistryInstance,\n} from './AdditionalDataRegistry';\nimport AdditionalData from './AdditionalData';\nimport EntityRegistry from '@civ-clone/core-registry/EntityRegistry';\nimport { IConstructor } from '@civ-clone/core-registry/Registry';\nimport generateInheritance from './lib/generateInheritance';\n\nexport type DataObjectFilter = (object: DataObject) => any;\n\nexport type PlainObject = {\n  [key: string | symbol | number]: any;\n};\n\nexport type ObjectStore = {\n  [key: string]: PlainObject;\n};\n\nexport type ObjectMap = {\n  hierarchy: PlainObject;\n  objects: ObjectStore;\n};\n\nexport interface IDataObject {\n  addKey(...keys: (string | number | symbol)[]): void;\n  id(): string;\n  keys(): (string | number | symbol)[];\n  sourceClass(): IConstructor<this>;\n  toPlainObject(): PlainObject;\n}\n\nconst idCache: { [key: string]: number | bigint } = {},\n  idProvider = (object: DataObject) => {\n    const className = object.sourceClass().name,\n      current = idCache[className];\n\n    if (!current) {\n      idCache[className] = 0;\n    }\n\n    if (current >= Number.MAX_SAFE_INTEGER) {\n      idCache[className] = BigInt(current);\n    }\n\n    return className + '-' + (++idCache[className]).toString(36);\n  },\n  toPlainObject = (\n    value: any,\n    objects: ObjectStore,\n    filter: (object: any) => any = (object) => object,\n    additionalDataRegistry: AdditionalDataRegistry = additionalDataRegistryInstance\n  ): PlainObject | PlainObject[] => {\n    value = filter(value);\n\n    if (value instanceof EntityRegistry) {\n      value = value.entries();\n    }\n\n    if (Array.isArray(value)) {\n      return value.map(\n        (item: any): PlainObject =>\n          toPlainObject(item, objects, filter, additionalDataRegistry)\n      );\n    }\n\n    if (value instanceof DataObject) {\n      const id = value.id();\n\n      if (!(id in objects)) {\n        const plainObject: PlainObject = {\n          _: value.sourceClass().name,\n          __: generateInheritance(value),\n        };\n\n        objects[id] = plainObject;\n\n        value.keys().forEach((key: string): void => {\n          const keyValue: any =\n            value[key] instanceof Function\n              ? (value[key] as unknown as Function)()\n              : value[key];\n\n          plainObject[key] = toPlainObject(\n            keyValue,\n            objects,\n            filter,\n            additionalDataRegistry\n          );\n        });\n\n        additionalDataRegistry\n          .getByType(value.sourceClass())\n          .forEach((additionalData: AdditionalData): void => {\n            plainObject[additionalData.key()] = toPlainObject(\n              additionalData.data(value),\n              objects,\n              filter,\n              additionalDataRegistry\n            );\n          });\n      }\n\n      return {\n        '#ref': id,\n      };\n    }\n\n    if (value instanceof Function) {\n      return {\n        _: value.name,\n        __: generateInheritance(value),\n      };\n    }\n\n    if (value && value instanceof Object) {\n      return Object.entries(value).reduce(\n        (object: PlainObject, [key, value]) => {\n          object[key] = toPlainObject(\n            value,\n            objects,\n            filter,\n            additionalDataRegistry\n          );\n\n          return object;\n        },\n        {}\n      );\n    }\n\n    return value;\n  };\n\nexport class DataObject implements IDataObject {\n  #id: string;\n  #keys: (keyof this)[] = ['id'];\n\n  constructor() {\n    this.#id = idProvider(this);\n  }\n\n  addKey(...keys: (keyof this)[]): void {\n    this.#keys.push(...keys);\n  }\n\n  id(): string {\n    return this.#id;\n  }\n\n  keys(): (keyof this)[] {\n    return this.#keys;\n  }\n\n  sourceClass<T extends NewableFunction>(): T {\n    return this.constructor as T;\n  }\n\n  toPlainObject(\n    dataObjectFilter: DataObjectFilter = (object) => object,\n    additionalDataRegistry: AdditionalDataRegistry = additionalDataRegistryInstance\n  ): ObjectMap {\n    const objects = {};\n\n    return {\n      hierarchy: toPlainObject(\n        this,\n        objects,\n        dataObjectFilter,\n        additionalDataRegistry\n      ),\n      objects,\n    };\n  }\n}\n\nexport default DataObject;\n", "import {\n  TransportData,\n  TransportMessage,\n  TransportReceiveArgs,\n  TransportReceiveHandler,\n  TransportSendArgs,\n} from './Transport';\nimport AbstractTransport from './AbstractTransport';\nimport DataObject from '@civ-clone/core-data-object/DataObject';\nimport reconstituteData from '../UI/lib/reconstituteData';\n\nexport class WorkerTransport<\n  DataMap extends {\n    [key: string]: TransportData;\n  }\n> extends AbstractTransport<DataMap> {\n  #worker;\n\n  constructor(worker: Worker) {\n    super();\n\n    this.#worker = worker;\n  }\n\n  receive<Channel extends keyof DataMap>(\n    channel: Channel,\n    handler: TransportReceiveHandler<DataMap[Channel]>\n  ): void {\n    this.#worker.addEventListener(\n      'message',\n      ({ data: { channel: receivingChannel, data } }) => {\n        const handlerData = data?.hierarchy\n          ? (reconstituteData(data) as TransportReceiveArgs<DataMap[Channel]>)\n          : data;\n\n        if (channel === receivingChannel) {\n          handler(handlerData, data);\n        }\n      }\n    );\n  }\n\n  receiveOnce<Channel extends keyof DataMap>(\n    channel: Channel,\n    handler: TransportReceiveHandler<DataMap[Channel]>\n  ): void {\n    const onceHandler = ({\n      data: { channel: receivingChannel, data },\n    }: MessageEvent<TransportMessage>) => {\n      const handlerData = data?.hierarchy\n        ? (reconstituteData(data) as TransportReceiveArgs<DataMap[Channel]>)\n        : data;\n\n      if (channel === receivingChannel) {\n        handler(handlerData, data);\n\n        this.#worker.removeEventListener('message', onceHandler);\n      }\n    };\n\n    this.#worker.addEventListener('message', onceHandler);\n  }\n\n  send<Channel extends keyof DataMap>(\n    channel: Channel,\n    data: TransportSendArgs<DataMap[Channel]>\n  ): void {\n    if ((data as any) instanceof DataObject) {\n      data = data.toPlainObject();\n    }\n\n    this.#worker.postMessage({\n      channel,\n      data,\n    });\n  }\n}\n\nexport default WorkerTransport;\n", "import Renderer from './UI/Renderer';\nimport WorkerTransport from './Engine/WorkerTransport';\n\nconst renderer = new Renderer(\n  new WorkerTransport(new Worker('dist/backend.js'))\n);\n\nrenderer.init();\n"],
  "mappings": "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EACAC,IACsB,CACtB,IAAMC,EAAY,SAAS,cAAc,QAAQ,EAC/CC,EAAUD,EAAU,WAAW,IAAI,EAErC,OAAAA,EAAU,MAASH,EAAM,MAAmBC,EAC5CE,EAAU,OAAUH,EAAM,OAAoBC,EAEzCC,GAAA,MAAAA,EAAS,YACZE,EAAQ,sBAAwB,IAGlCA,EAAQ,UAAUJ,EAAO,EAAG,EAAGG,EAAU,MAAOA,EAAU,MAAM,EAEzDA,CACT,EAlB0B,cAoBnBE,GAAQP,GCxBf,IAAAQ,GAAAC,GAAAC,GAAAC,GAQaC,GAAN,cAAyBC,EAK7B,CAqSD,aAAc,CACZ,MAAM,mBAAoB,SAAU,CAClC,QAAS,MACX,CAAC,EAvSHC,EAAA,KAAAN,GAAgB,IAAI,KACpBM,EAAA,KAAAL,GAAgB,IAAI,KACpBK,EAAA,KAAAJ,GAAsB,IAAI,KAC1BI,EAAA,KAAAH,GAA4B,CAC1B,yBACA,yBACA,yBACA,2BACA,qCACA,qCACA,mCACA,mCACA,kCACA,mCACA,+BACA,qCACA,qCACA,8BACA,wBACA,+BACA,0BACA,yBACA,4BACA,iCACA,iCACA,uCACA,iCACA,sCACA,uCACA,wCACA,uCACA,wCACA,wCACA,uCACA,wCACA,uCACA,mCACA,mCACA,oCACA,oCACA,mCACA,oCACA,oCACA,mCACA,wBACA,yBACA,yBACA,yBACA,yBACA,wBACA,2BACA,uBACA,kCACA,mCACA,mCACA,mCACA,gCACA,iCACA,iCACA,iCACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,4BACA,oCACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,2BACA,4BACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,4BACA,4BACA,iCACA,mCACA,oCACA,qCACA,oCACA,mCACA,oCACA,qCACA,sCACA,qCACA,oCACA,qCACA,oCACA,mCACA,oCACA,mCACA,6BACA,+BACA,gCACA,iCACA,gCACA,+BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,+BACA,gCACA,+BACA,6BACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,4BACA,iCACA,mCACA,oCACA,qCACA,oCACA,mCACA,oCACA,qCACA,sCACA,qCACA,oCACA,qCACA,oCACA,mCACA,oCACA,mCACA,6BACA,6BACA,2BACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,+BACA,gCACA,iCACA,gCACA,qCACA,qCACA,qCACA,qCACA,6BACA,+BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,+BACA,gCACA,+BACA,4BACA,8BACA,4BACA,6BACA,+BACA,gCACA,iCACA,gCACA,+BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,+BACA,gCACA,+BACA,8BACA,gCACA,iCACA,kCACA,iCACA,gCACA,iCACA,kCACA,mCACA,kCACA,iCACA,kCACA,iCACA,gCACA,iCACA,gCACA,0BACA,+BACA,gCACA,4BACA,4BACA,6BACA,6BACA,8BACA,8BACA,6BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,6BACA,8BACA,6BACA,6BACA,8BACA,4BACA,8BACA,wCACA,6BACA,+BACA,6BACA,8BACA,8BACA,0BACA,8BACA,+BACA,+BACA,4BACF,EAMA,CAEA,MAAM,IAAII,EAA8B,CACtC,OAAKC,EAAA,KAAKR,IAAc,IAAIO,CAAI,GAC9BC,EAAA,KAAKR,IAAc,IAAIO,EAAO,MAAM,MAAM,IAAIA,CAAI,CAAG,EAGhDC,EAAA,KAAKR,IAAc,IAAIO,CAAI,CACpC,CAEA,MAAM,SAASA,EAAyC,CACtD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",
  "names": ["require_Element", "__commonJSMin", "exports", "e", "t", "s", "o", "r", "__name", "require_EventEmitter", "__commonJSMin", "exports", "t", "e", "i", "s", "__name", "r", "import_element", "reconstituteData", "__name", "hierarchy", "objects", "orphanIds", "seenObjects", "id", "getReferences", "value", "updated", "key", "childValue", "reconstituteData_default", "import_element", "import_element", "_action", "_transport", "Action", "action", "transport", "__privateAdd", "__privateSet", "event", "__privateGet", "__name", "Action_default", "import_element", "template", "__name", "label", "value", "_label", "_range", "_number", "_lock", "_listeners", "LockedSlider", "currentValue", "__privateAdd", "__privateSet", "__privateGet", "handler", "listener", "LockedSlider_default", "_sliders", "LockedSliderGroup", "sliders", "__privateAdd", "__privateSet", "__privateGet", "slider", "otherSliders", "otherSlider", "otherActiveSliders", "overage", "chunk", "remaining", "total", "__name", "LockedSliderGroup_default", "import_element", "_parent", "TransientElement", "parent", "element", "__privateAdd", "event", "__privateSet", "__privateGet", "__name", "import_element", "h", "__name", "element", "handlers", "eventName", "handler", "defaultOptions", "_body", "_title", "Window", "TransientElement", "title", "body", "options", "_a", "__privateAdd", "__privateSet", "dimension", "value", "axis", "property", "headerActions", "h", "show", "element", "isDragging", "__privateGet", "event", "moveHandler", "__name", "focus", "x", "y", "elementComputedStyle", "currentTop", "currentLeft", "content", "Window_default", "instanceOfAny", "__name", "object", "constructors", "c", "idbProxyableTypes", "cursorAdvanceMethods", "getIdbProxyableTypes", "getCursorAdvanceMethods", "cursorRequestMap", "transactionDoneMap", "transactionStoreNamesMap", "transformCache", "reverseTransformCache", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "value", "cacheDonePromiseForTransaction", "tx", "done", "complete", "idbProxyTraps", "target", "prop", "receiver", "replaceTraps", "callback", "wrapFunction", "func", "storeNames", "args", "unwrap", "transformCachableValue", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "request", "openPromise", "wrap", "event", "db", "__name", "readMethods", "writeMethods", "cachedMethods", "getMethod", "target", "prop", "targetFuncName", "useIndex", "isWrite", "method", "__name", "storeName", "args", "tx", "replaceTraps", "oldTraps", "receiver", "_connection", "_store", "Store", "db", "store", "options", "__privateAdd", "__privateSet", "openDB", "__privateGet", "key", "query", "count", "record", "__name", "scaleImage", "__name", "image", "scale", "options", "newCanvas", "context", "scaleImage_default", "_cachedAssets", "_cachedImages", "_cachedScaledImages", "_requiredAssets", "AssetStore", "Store", "__privateAdd", "path", "__privateGet", "asset", "image", "scale", "scaleImage_default", "dbAssets", "requiredAsset", "__name", "assetStore", "import_element", "_sliderGroup", "AdjustTradeRates", "Action_default", "__privateAdd", "sliders", "Window_default", "tradeRate", "slider", "LockedSlider_default", "value", "__privateGet", "__privateSet", "LockedSliderGroup_default", "assetStore", "asset", "__name", "AdjustTradeRates_default", "notificationQueue", "_options", "_NotificationWindow", "Window", "title", "body", "passedOptions", "options", "__privateAdd", "__privateSet", "event", "__privateGet", "notification", "focus", "resolve", "NotificationWindow", "__name", "NotificationWindow_default", "import_element", "ActionWindow", "NotificationWindow", "title", "body", "options", "_a", "_b", "actionWindow", "label", "action", "h", "event", "__name", "ActionWindow_default", "import_element", "numpadMap", "mappedKeyFromEvent", "__name", "event", "numpadAsArrows", "_resizeHandler", "_selectionList", "SelectionWindow", "ActionWindow", "title", "optionList", "onChoose", "body", "options", "_a", "_b", "chooseHandler", "__name", "selection", "selectionList", "h", "option", "event", "key", "mappedKeyFromEvent", "currentIndex", "targetIndex", "__privateAdd", "__privateSet", "__privateGet", "select", "_c", "_d", "_e", "e", "SelectionWindow_default", "import_element", "ChooseResearch", "Action_default", "chooseWindow", "SelectionWindow_default", "advance", "selection", "assetStore", "asset", "__name", "ChooseResearch_default", "instanceOf", "__name", "object", "classNames", "entityClassName", "instanceOf_default", "instanceOf", "knownGroups", "knownGroupLookup", "object", "yieldName", "group", "reduceKnownYields", "__name", "yields", "yieldNames", "cityYield", "index", "instanceOf_default", "reduceKnownYield", "knownIcons", "_onComplete", "_transport", "CityBuildSelectionWindow", "SelectionWindow_default", "cityBuild", "transport", "onComplete", "additionalActions", "turns", "__name", "buildItem", "reduceKnownYield", "selection", "__privateAdd", "__privateSet", "hasSelected", "__privateGet", "CityBuildSelectionWindow_default", "import_element", "import_element", "renderPopulation", "__name", "city", "yields", "growth", "mask", "state", "population", "happiness", "unhappiness", "reduceKnownYields", "currentIndex", "status", "index", "assetStore", "image", "renderProgress", "cityData", "yieldName", "turnsText", "turnsLeft", "data", "reduceKnownYield", "turns", "yieldData", "total", "used", "free", "cityYield", "_a", "isKnown", "knownGroupLookup", "yieldImages", "icon", "knownIcons", "knownGroups", "import_element", "preloadContainer", "setPreloadContainer", "__name", "preloadContainerElement", "getPreloadedImage", "path", "image", "getPreloadedImage_default", "import_element", "replaceColours", "__name", "image", "source", "replacement", "canvas", "context", "imageData", "getColor", "input", "_a", "match", "color", "sourceColors", "replaceColors", "i", "n", "replaceColours_default", "import_element", "_canvas", "_context", "_visible", "_scale", "_tileSize", "_world", "Map", "world", "scale", "tileSize", "canvas", "__privateAdd", "__privateSet", "__privateGet", "setPreloadContainer", "tiles", "x", "y", "size", "offsetX", "offsetY", "tilesToUpdate", "path", "options", "_a", "_b", "image", "tile", "filter", "directions", "direction", "getPreloadedImage", "source", "replacement", "replaceColours_default", "visible", "__name", "Map_default", "Cities", "Map", "tile", "x", "y", "size", "offsetX", "offsetY", "city", "player", "civilization", "colors", "attribute", "image", "__name", "Cities_default", "import_element", "ConfirmationWindow", "NotificationWindow", "title", "details", "onOK", "options", "_a", "_b", "confirmationButton", "h", "event", "__name", "ConfirmationWindow_default", "_handler", "_ids", "DataObserver", "ids", "handler", "__privateAdd", "__privateSet", "event", "detail", "objects", "__privateGet", "id", "__name", "DataObserver_default", "TerrainAbstract", "Map", "tilesToUpdate", "extendedTilesToUpdate", "tile", "direction", "target", "__name", "TerrainAbstract_default", "Feature", "TerrainAbstract_default", "tile", "x", "y", "feature", "__name", "Feature_default", "Fog", "TerrainAbstract_default", "tile", "x", "y", "direction", "__name", "Fog_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "improvements", "state", "improvement", "improvementType", "improvementName", "neighbouringRoad", "adjoiningTile", "neighbouringRailroad", "direction", "size", "offsetX", "offsetY", "center", "__name", "Improvements_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "improvement", "__name", "Irrigation_default", "import_element", "Land", "TerrainAbstract_default", "tile", "x", "y", "size", "offsetX", "offsetY", "sprite", "bitmask", "topLeftSubtileOffset", "topRightSubtileOffset", "bottomRightSubtileOffset", "bottomLeftSubtileOffset", "image", "imageContext", "direction", "__name", "Land_default", "import_typed_event_emitter", "import_element", "defaultPortalOptions", "_canvas", "_center", "_context", "_layers", "_playerId", "_scale", "_tileSize", "_transport", "_world", "Portal", "world", "transport", "canvas", "options", "layers", "settings", "__privateAdd", "__privateSet", "MapType", "__privateGet", "updatedTiles", "layer", "LayerType", "_a", "x", "y", "visibleHorizontal", "visibleVertical", "xLowerBound", "xUpperBound", "yLowerBound", "yUpperBound", "tileSize", "layerWidth", "centerX", "portalCenterX", "layerHeight", "centerY", "portalCenterY", "startX", "endX", "startY", "endY", "tileRangeX", "tileRangeY", "__name", "Portal_default", "import_element", "import_element", "busyLookup", "renderUnit", "__name", "unit", "tileSize", "_a", "_b", "player", "civilization", "colors", "attribute", "unitCanvas", "replaceColours_default", "getPreloadedImage_default", "context", "improvement", "sizeOffsetX", "sizeOffsetY", "identifier", "renderUnit_default", "_scale", "Unit", "unit", "scale", "__privateAdd", "__privateSet", "unitCanvas", "renderUnit_default", "context", "sizeX", "sizeY", "offsetX", "offsetY", "size", "__privateGet", "__name", "Unit_default", "SupportedUnit", "city", "unit", "yieldsToInclude", "Unit_default", "cityYield", "yieldImages", "__name", "SupportedUnit_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "adjoining", "adjoiningTile", "__name", "Terrain_default", "UnitSelectionWindow", "SelectionWindow_default", "units", "transport", "onComplete", "unit", "_a", "_b", "selection", "tileUnit", "__name", "UnitSelectionWindow_default", "_unknown", "_lookupCache", "_tiles", "_height", "_width", "World", "world", "__privateAdd", "__name", "x", "y", "__privateSet", "__privateGet", "key", "index", "tile", "direction", "tiles", "World_default", "Yields", "Map_default", "tile", "x", "y", "size", "offsetX", "offsetY", "total", "tileYield", "yields", "a", "b", "i", "offsets", "n", "__name", "Yields_default", "_defaultLocale", "_locale", "_locales", "LocaleProvider", "locale", "locales", "defaultLocale", "__privateAdd", "__privateSet", "__privateGet", "list", "options", "number", "date", "timeFormatter", "secondsDifference", "value", "unit", "resolved", "limit", "currentUnit", "__name", "instance", "import_element", "_city", "Unworkable", "Map_default", "__privateAdd", "city", "__privateSet", "tile", "x", "y", "size", "offsetX", "offsetY", "__privateGet", "__name", "Unworkable_default", "_activeUnit", "Units", "Map", "__privateAdd", "tile", "x", "y", "size", "offsetX", "offsetY", "__privateGet", "unit", "a", "b", "_a", "_b", "image", "renderUnit_default", "__privateSet", "__name", "Units_default", "reduceYield", "__name", "type", "cityYields", "cityYield", "knownGroupLookup", "used", "free", "renderYields", "city", "cityYieldNames", "cityYieldName", "n", "i", "yieldImages", "knownGroups", "yieldObject", "label", "value", "resizeYields", "element", "yieldWrappers", "container", "currentMaxWidth", "renderMap", "portal", "transport", "portalCanvas", "cityPortal", "Portal_default", "World_default", "Land_default", "Irrigation_default", "Terrain_default", "Improvements_default", "Feature_default", "Fog_default", "Cities_default", "Units_default", "Yields_default", "Unworkable_default", "tile", "unit", "unworkable", "h", "renderBuild", "chooseProduction", "completeProduction", "renderProgress", "renderGrowth", "renderImprovements", "improvement", "renderGarrisonedUnits", "Unit_default", "cityPlayerUnits", "UnitSelectionWindow_default", "renderSupportedUnits", "SupportedUnit_default", "cityDetails", "renderPopulation", "_city", "_dataObserver", "_portal", "_transport", "City", "Window_default", "__privateAdd", "__privateSet", "DataObserver_default", "data", "_a", "_b", "updatedCity", "cityData", "__privateGet", "event", "resizeHandler", "CityBuildSelectionWindow_default", "cityBuild", "spendCost", "ConfirmationWindow_default", "instance", "City_default", "showCityAction", "__name", "city", "portal", "transport", "selectionWindow", "City_default", "showCityAction_default", "showCityOnMapAction", "__name", "city", "portal", "selectionWindow", "showCityOnMap_default", "_portal", "CityBuild", "Action_default", "action", "portal", "transport", "__privateAdd", "__privateSet", "CityBuildSelectionWindow_default", "showCityAction_default", "__privateGet", "showCityOnMap_default", "cityBuild", "assetStore", "asset", "__name", "CityBuild_default", "import_element", "_portal", "CivilDisorder", "Action_default", "action", "portal", "transport", "__privateAdd", "__privateSet", "city", "ActionWindow_default", "showCityAction_default", "__privateGet", "showCityOnMap_default", "assetStore", "asset", "__name", "CivilDisorder_default", "import_element", "EndTurn", "Action_default", "check_circle_default", "__name", "EndTurn_default", "import_element", "Revolution", "Action_default", "chooseWindow", "SelectionWindow_default", "government", "selection", "assetStore", "asset", "__name", "Revolution_default", "civilizationAttribute", "__name", "civilization", "attributeName", "attribute", "civilizationAttribute_default", "import_element", "Spaceship", "Action_default", "spaceship", "yields", "yieldMap", "spaceshipYield", "activeParts", "partMap", "part", "inactiveParts", "values", "instance", "launch", "__name", "window", "Window_default", "civilizationAttribute_default", "key", "value", "label", "h", "event", "globe_default", "Spaceship_default", "_portal", "_transport", "Actions", "container", "portal", "transport", "__privateAdd", "__privateSet", "event", "_a", "currentChild", "key", "mappedKeyFromEvent", "children", "currentAction", "currentIndex", "actions", "playerAction", "action", "AdjustTradeRates_default", "__privateGet", "ChooseResearch_default", "CityBuild_default", "CivilDisorder_default", "EndTurn_default", "Spaceship_default", "Revolution_default", "h", "__name", "Actions_default", "ActiveUnit", "Units_default", "activeUnit", "x", "y", "tile", "size", "offsetX", "offsetY", "image", "__name", "ActiveUnit_default", "CityNames", "Map", "tile", "x", "y", "size", "offsetX", "offsetY", "city", "sizeOffsetX", "sizeOffsetY", "textOffsetX", "textOffsetY", "__name", "CityNames_default", "import_element", "buildCityRow", "__name", "city", "food", "production", "trade", "research", "gold", "luxuries", "yieldName", "yieldData", "foodIcon", "productionIcon", "tradeIcon", "researchIcon", "goldIcon", "luxuriesIcon", "assetStore", "knownIcons", "image", "turnsText", "turnsLeft", "total", "free", "icon", "_cities", "_dataObserver", "_portal", "_transport", "CityStatus", "Window_default", "player", "portal", "transport", "__privateAdd", "__privateSet", "DataObserver_default", "id", "build", "growth", "data", "__privateGet", "rows", "name", "yields", "index", "row", "element", "containerNodeName", "container", "h", "City_default", "CityStatus_default", "import_element", "_turn", "_year", "GameDetails", "element", "turn", "year", "__privateAdd", "__privateSet", "__privateGet", "__name", "GameDetails_default", "import_element", "import_element", "buildCityRow", "__name", "city", "portal", "transport", "happinessReasons", "cityYield", "Unit_default", "SupportedUnit_default", "luxuriesElement", "assetStore", "knownIcons", "image", "instance", "reduceKnownYield", "happinessYields", "instanceOf_default", "reasons", "index", "renderPopulation", "reasonWrapper", "h", "event", "City_default", "_dataObserver", "_player", "_portal", "_transport", "HappinessReport", "Window_default", "player", "__privateAdd", "__privateSet", "DataObserver_default", "data", "__privateGet", "rows", "HappinessReport_default", "import_element", "menuMap", "_actions", "_targetPointerUpListener", "_centerX", "_centerY", "_options", "PopupMenu", "launcher", "centerX", "centerY", "actions", "options", "__privateAdd", "__name", "__privateSet", "__privateGet", "action", "label", "button", "h", "PopupMenu_default", "combinedYields", "__name", "player", "yields", "city", "import_element", "template", "__name", "playerResearch", "yields", "researchIcon", "assetStore", "knownIcons", "image", "renderProgress", "reduceKnownYield", "advance", "_dataObserver", "_player", "ScienceReport", "Window_default", "player", "__privateAdd", "__privateSet", "DataObserver_default", "city", "data", "__privateGet", "combinedYields", "ScienceReport_default", "import_element", "_cities", "_dataObserver", "_portal", "_transport", "TradeReport", "Window_default", "player", "portal", "transport", "__privateAdd", "__privateSet", "DataObserver_default", "id", "build", "growth", "data", "__privateGet", "goldIcon", "assetStore", "knownIcons", "image", "cityList", "improvementList", "improvements", "totalIncome", "totalSpend", "totalGold", "city", "cityYield", "improvement", "cityGold", "used", "free", "yieldData", "row", "h", "City_default", "content", "element", "name", "count", "cost", "instance", "__name", "TradeReport_default", "EntityRegistry", "#acceptedTypes", "#entries", "acceptedTypes", "entity", "acceptedType", "iterator", "key", "value", "check", "item", "entities", "index", "__name", "EntityRegistry_default", "_key", "_value", "GameOption", "key", "value", "__privateAdd", "__privateSet", "__privateGet", "__name", "GameOption_default", "GameOptionsRegistry", "EntityRegistry_default", "GameOption_default", "key", "option", "value", "existing", "__name", "instance", "import_element", "GameOptions", "Window_default", "input", "instance", "h", "__name", "GameOptions_default", "_dataObserver", "_player", "_portal", "_transport", "GameMenu", "element", "player", "portal", "transport", "__privateAdd", "__privateSet", "DataObserver_default", "data", "button", "menu_default", "h", "parentX", "parentY", "x", "y", "PopupMenu_default", "GameOptions_default", "CityStatus_default", "__privateGet", "HappinessReport_default", "TradeReport_default", "ScienceReport_default", "__name", "GameMenu_default", "import_element", "import_element", "buildActions", "__name", "tile", "unit", "transport", "actions", "neighbouringTileDetails", "action", "neighbouringTileActions", "perform", "ConfirmationWindow_default", "bodyListener", "UnitActionMenu", "PopupMenu", "launcher", "centerX", "centerY", "event", "target", "UnitActionMenu_default", "_activeUnit", "_showActionMenuTimeout", "GamePortal", "Portal_default", "__privateAdd", "event", "realTarget", "tile", "playerTileUnits", "unit", "City_default", "UnitSelectionWindow_default", "showActionMenu", "__name", "x", "y", "__privateGet", "__privateSet", "UnitActionMenu_default", "offsetX", "offsetY", "centerTile", "canvasCenterOffset", "GamePortal_default", "Terrain", "TerrainAbstract_default", "tile", "x", "y", "__name", "GoodyHuts_default", "_paused", "_stack", "IntervalHandler", "tick", "__privateAdd", "__privateGet", "item", "__privateSet", "handler", "__name", "IntervalHandler_default", "import_element", "_args", "_channel", "Request", "channel", "args", "__privateAdd", "__privateSet", "__privateGet", "__name", "Request_default", "Options", "Request_default", "args", "__name", "Options_default", "import_element", "_onFinished", "_transport", "CustomiseWorldWindow", "Window_default", "transport", "onFinished", "__privateAdd", "__privateSet", "_a", "_b", "_c", "_d", "_e", "_f", "existingValues", "__privateGet", "Options_default", "playersInput", "heightInput", "widthInput", "landCoverageInput", "landSizeInput", "maxIterationsInput", "submit", "__name", "Request_default", "h", "event", "CustomiseWorldWindow_default", "MandatorySelection", "SelectionWindow", "title", "optionList", "onChoose", "body", "options", "resolve", "detail", "__name", "MandatorySelection_default", "NewGameWindow", "MandatorySelection_default", "transport", "onFinished", "selection", "Request_default", "__name", "NewGameWindow_default", "EarthWindow", "NewGameWindow", "transport", "onFinished", "Request_default", "__name", "EarthWindow_default", "BinFile", "content", "callback", "b1", "length", "start", "__name", "BinFile_default", "LZWDictionary", "maxBits", "i", "pos", "entry", "__name", "LZWDictionary_default", "LZW", "binFile", "remainingCodedBytes", "uByteMode", "parsedIndexes", "usableBits", "usableBitCount", "indicatorLength", "indicatorFlag", "nextThreshold", "decodedCounter", "index", "inputData", "dicIndexMaxBits", "codedData", "decodedData", "dic", "LZWDictionary_default", "plainData", "oldCode", "buffer", "character", "newCode", "i", "p", "byteArr", "opt", "lastChr", "isFlag", "chr", "j", "__name", "LZW_default", "lowerNibble", "__name", "byte", "lowerNibble_default", "upperNibble", "__name", "byte", "upperNibble_default", "PicImage", "BinFile_default", "callback", "id", "length", "i", "firstIndex", "lastIndex", "paletteLength", "seenBlack", "colour", "decompSourceData", "LZW_default", "decompData", "oldImageData", "lowerNibble_default", "upperNibble_default", "ctx", "destinationX", "destinationY", "canvasData", "index", "y", "x", "colorIndex", "canvasIndex", "__name", "PicImage_default", "extractSprites", "__name", "content", "extractData", "defaults", "canvasProvider", "logger", "message", "canvas", "image", "PicImage_default", "result", "path", "definitionParents", "definition", "object", "filename", "contentCanvas", "context", "x", "y", "imageData", "import_element", "_fileInput", "_progressInformation", "ImportAssetsWindow", "Window_default", "fileInput", "progressInformation", "extract_data_default", "h", "event", "__privateAdd", "__privateSet", "_a", "__privateGet", "files", "filenames", "file", "expectedFilenames", "key", "expectedMatch", "filename", "results", "resolve", "definitions", "reader", "extractSprites", "width", "height", "canvas", "message", "record", "assetStore", "__name", "ImportAssetsWindow_default", "import_element", "getDefaults", "__name", "defaults", "changeDefaults", "newDefaults", "escapeTest", "escapeReplace", "escapeTestNoEncode", "escapeReplaceNoEncode", "escapeReplacements", "getEscapeReplacement", "ch", "escape", "html", "encode", "unescapeTest", "unescape", "_", "n", "caret", "edit", "regex", "opt", "obj", "name", "val", "nonWordAndColonTest", "originIndependentUrl", "cleanUrl", "sanitize", "base", "href", "prot", "resolveUrl", "baseUrls", "justDomain", "protocol", "domain", "rtrim", "relativeBase", "noopTest", "splitCells", "tableRow", "count", "row", "match", "offset", "str", "escaped", "curr", "cells", "i", "c", "invert", "l", "suffLen", "currChar", "findClosingBracket", "b", "level", "checkSanitizeDeprecation", "repeatString", "pattern", "result", "outputLink", "cap", "link", "raw", "lexer", "title", "text", "token", "indentCodeCompensation", "matchIndentToCode", "indentToCode", "node", "matchIndentInNode", "indentInNode", "Tokenizer", "options", "src", "trimmed", "top", "tokens", "istask", "ischecked", "indent", "blankLine", "endsWithBlankLine", "line", "nextLine", "rawLine", "itemContents", "endEarly", "bull", "isordered", "list", "itemRegex", "t", "nextBulletRegex", "hrRegex", "fencesBeginRegex", "headingBeginRegex", "spacers", "hasMultipleLineBreaks", "tag", "item", "j", "k", "trimmedUrl", "rtrimSlash", "lastParenIndex", "linkLen", "links", "maskedSrc", "prevChar", "nextChar", "lLength", "rDelim", "rLength", "delimTotal", "midDelimTotal", "endReg", "hasNonSpaceChars", "hasSpaceCharsOnBothEnds", "mangle", "prevCapZero", "smartypants", "block", "inline", "out", "Lexer", "rules", "next", "leading", "tabs", "lastToken", "cutSrc", "lastParagraphClipped", "extTokenizer", "startIndex", "tempSrc", "tempStart", "getStartIndex", "errMsg", "keepPrevChar", "Renderer", "code", "infostring", "lang", "quote", "slugger", "id", "body", "ordered", "start", "type", "startatt", "checked", "header", "content", "flags", "TextRenderer", "Slugger", "value", "originalSlug", "isDryRun", "slug", "occurenceAccumulator", "Parser", "l2", "l3", "cell", "loose", "itemBody", "task", "checkbox", "ret", "renderer", "Hooks", "markdown", "__publicField", "onError", "silent", "async", "callback", "e", "msg", "parseMarkdown", "parser", "origOpt", "marked", "throwError", "highlight", "done", "err", "pending", "args", "extensions", "pack", "opts", "ext", "prevRenderer", "prop", "tokenizer", "prevTokenizer", "hooks", "prevHook", "arg", "walkTokens", "values", "childTokens", "setOptions", "use", "parseInline", "parser", "Parser", "lexer", "Lexer", "firstParentMatching", "__name", "target", "targetSelector", "toggleExpanded", "expectedSelector", "targetIsVisible", "ReleaseWindow", "Window_default", "releases_default", "release", "i", "releaseDate", "instance", "line", "marked", "module", "status", "changes", "change", "event", "ReleaseWindow_default", "_transport", "MainMenu", "element", "transport", "__privateAdd", "__privateSet", "showQuit", "hasAssets", "assetStore", "h", "NewGameWindow_default", "__privateGet", "EarthWindow_default", "CustomiseWorldWindow_default", "ImportAssetsWindow_default", "event", "currentTarget", "key", "mappedKeyFromEvent", "version", "ReleaseWindow_default", "__name", "MainMenu_default", "import_element", "_context", "_element", "_layers", "_portal", "_world", "Minimap", "element", "world", "portal", "layers", "__privateAdd", "__privateSet", "__privateGet", "event", "x", "y", "tileX", "tileY", "targetHeight", "layer", "start", "end", "__name", "Minimap_default", "_container", "_notifications", "Notifications", "container", "__privateAdd", "__privateSet", "notification", "__privateGet", "active", "_a", "NotificationWindow_default", "__name", "Notifications_default", "import_element", "_player", "PlayerDetails", "element", "player", "__privateAdd", "__privateSet", "civilization", "treasuries", "research", "cities", "__privateGet", "goldTreasury", "treasury", "totalGold", "totalResearch", "city", "cityGold", "cityResearch", "reduceKnownYields", "researchTurns", "civilizationAttribute_default", "instance", "__name", "PlayerDetails_default", "import_element", "_activeUnit", "UnitDetails", "element", "activeUnit", "__privateAdd", "__privateSet", "_a", "_b", "__privateGet", "improvement", "feature", "unit", "__name", "UnitDetails_default", "_transport", "Renderer", "transport", "__privateAdd", "__privateSet", "__privateGet", "assetStore", "hasAllAssets", "scaledCursor", "event", "ConfirmationWindow_default", "instance", "notificationArea", "mainMenuElement", "actionArea", "secondaryActionArea", "gameMenu", "gameArea", "mapWrapper", "mapPortal", "gameInfo", "playerInfo", "minimapCanvas", "unitInfo", "preloadContainer", "notifications", "Notifications_default", "mainMenu", "MainMenu_default", "setActiveUnit", "__name", "unit", "portal", "unitsMap", "activeUnitsMap", "unitDetails", "UnitDetails_default", "activeUnit", "lastUnit", "records", "record", "h", "tilesToRender", "globalNotificationTimer", "data", "negotiationLabel", "negotiation", "currentInteraction", "civilizationAttribute_default", "choices", "key", "body", "title", "SelectionWindow_default", "id", "value", "choice", "objectMap", "NotificationWindow_default", "advance", "activeUnits", "scale", "world", "World_default", "intervalHandler", "IntervalHandler_default", "GamePortal_default", "Land_default", "Irrigation_default", "Terrain_default", "Improvements_default", "Feature_default", "GoodyHuts_default", "Fog_default", "Yields_default", "Units_default", "Cities_default", "CityNames_default", "ActiveUnit_default", "landMap", "yieldsMap", "citiesMap", "cityNamesMap", "minimap", "Minimap_default", "primaryActions", "Actions_default", "secondaryActions", "GameMenu_default", "handler", "reconstituteData", "primaryActionList", "ignoredActionList", "primaryActionPriority", "action", "a", "b", "_a", "_b", "GameDetails_default", "PlayerDetails_default", "activeUnitAction", "unitA", "unitB", "rawData", "pathToParts", "path", "getPenultimateObject", "object", "parts", "lastPart", "tmpObj", "part", "setObjectPath", "removeObjectPath", "patch", "type", "index", "keyToActionsMap", "directionKeyMap", "leaderScreensMap", "CityStatus_default", "HappinessReport_default", "TradeReport_default", "ScienceReport_default", "lastKey", "mappedKeyFromEvent", "actions", "actionName", "unitAction", "perform", "topAction", "units", "current", "e", "Renderer_default", "AbstractTransport", "request", "resolve", "value", "__name", "AbstractTransport_default", "AdditionalData", "#key", "#provider", "#type", "type", "key", "provider", "args", "__name", "AdditionalData_default", "AdditionalDataRegistry", "EntityRegistry", "AdditionalData_default", "type", "additionalData", "__name", "instance", "generateInheritance", "__name", "object", "constructor", "DataObject_default", "stack", "generateInheritance_default", "idCache", "idProvider", "__name", "object", "className", "current", "toPlainObject", "value", "objects", "filter", "additionalDataRegistry", "instance", "EntityRegistry_default", "item", "DataObject", "id", "plainObject", "generateInheritance_default", "key", "keyValue", "additionalData", "#id", "#keys", "keys", "dataObjectFilter", "DataObject_default", "_worker", "WorkerTransport", "AbstractTransport_default", "worker", "__privateAdd", "__privateSet", "channel", "handler", "__privateGet", "receivingChannel", "data", "handlerData", "reconstituteData_default", "onceHandler", "__name", "DataObject_default", "WorkerTransport_default", "renderer", "Renderer_default", "WorkerTransport_default"]
}
